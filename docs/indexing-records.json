[{"rawIndexableTextContent":"Sort channels by cid. Note: This sorting option can extend your response waiting time if used as primary one. ","kind":"symbol","title":"ChannelListSortingKey.cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/cid","interfaceLanguage":"swift"}},"summary":"Sort channels by cid. Note: This sorting option can extend your response waiting time if used as primary one."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Uploading of the message failed. The system will not trying to upload this attachment anymore. ","kind":"symbol","title":"LocalAttachmentState.uploadingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/uploadingFailed","interfaceLanguage":"swift"}},"summary":"Uploading of the message failed. The system will not trying to upload this attachment anymore."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedUploadableAttachmentType\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"The controller changed the list of observed users.  The controller emitting the change callback. The change to the list of users.","kind":"symbol","title":"controller(_:didChangeUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate\/controller(_:didChangeUsers:)-2l2w6","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed users."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNotificationContent\/channel","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Filter on ids smaller than the given value. ","kind":"symbol","title":"PaginationParameter.lessThan(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/lessThan(_:)","interfaceLanguage":"swift"}},"summary":"Filter on ids smaller than the given value."},{"rawIndexableTextContent":"A unique identifier of a user. ","kind":"symbol","title":"UserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserId","interfaceLanguage":"swift"}},"summary":"A unique identifier of a user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Hashable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/Hashable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CustomDebugStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/CustomDebugStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Inherited from OptionSet.union(_:). ","kind":"symbol","title":"union(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/union(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.union(_:)."},{"rawIndexableTextContent":"Inherited from Sequence.max(). ","kind":"symbol","title":"max()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/max()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.max()."},{"rawIndexableTextContent":"Returns pretty EntityChange description ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/description","interfaceLanguage":"swift"}},"summary":"Returns pretty EntityChange description"},{"rawIndexableTextContent":"A link to the video. ","kind":"symbol","title":"videoURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/videoURL","interfaceLanguage":"swift"}},"summary":"A link to the video."},{"rawIndexableTextContent":"An object that uniquely identifies a message attachment. ","kind":"symbol","title":"AttachmentId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId","interfaceLanguage":"swift"}},"summary":"An object that uniquely identifies a message attachment."},{"rawIndexableTextContent":"Query options. ","kind":"symbol","title":"QueryOptions","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions","interfaceLanguage":"swift"}},"summary":"Query options."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"DataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"A truncated date. ","kind":"symbol","title":"ChannelCodingKeys.truncatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/truncatedAt","interfaceLanguage":"swift"}},"summary":"A truncated date."},{"rawIndexableTextContent":"Inherited from Collection.prefix(_:). ","kind":"symbol","title":"prefix(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/prefix(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.prefix(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"Unmutes the user this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"unmute(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/unmute(completion:)","interfaceLanguage":"swift"}},"summary":"Unmutes the user this controller manages."},{"rawIndexableTextContent":"Inherited from Hashable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from Hashable.hash(into:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Listen for a channel changes in real time, e.g. a new message event. ","kind":"symbol","title":"watch","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/watch","interfaceLanguage":"swift"}},"summary":"Listen for a channel changes in real time, e.g. a new message event."},{"rawIndexableTextContent":"Triggered when a channel is made visible. ","kind":"symbol","title":"ChannelVisibleEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is made visible."},{"rawIndexableTextContent":"A filter key for matching the name value. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/name-1zxqh","interfaceLanguage":"swift"}},"summary":"A filter key for matching the name value."},{"rawIndexableTextContent":"A configuration object used to configure a ChatClient instance.  Overview The default configuration can be changed the following way: ","kind":"symbol","title":"ChatClientConfig","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig","interfaceLanguage":"swift"}},"summary":"A configuration object used to configure a ChatClient instance."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"slovak","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/slovak","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSuperset(of:). ","kind":"symbol","title":"isStrictSuperset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isStrictSuperset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isStrictSuperset(of:)."},{"rawIndexableTextContent":"A filter key for matching the cid value. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/cid","interfaceLanguage":"swift"}},"summary":"A filter key for matching the cid value."},{"rawIndexableTextContent":"The “right-hand” side of the filter. Specifies the value the filter should match. ","kind":"symbol","title":"value","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/value","interfaceLanguage":"swift"}},"summary":"The “right-hand” side of the filter. Specifies the value the filter should match."},{"rawIndexableTextContent":"The channel identifier the message lives in. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the message lives in."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyUnbannedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An offset. ","kind":"symbol","title":"offset","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/offset","interfaceLanguage":"swift"}},"summary":"An offset."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionScore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/reactionScore","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"The subsystem responsible for any other part of the SDK. This is the default subsystem value for logging, to be used when subsystem is not specified. ","kind":"symbol","title":"other","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/other","interfaceLanguage":"swift"}},"summary":"The subsystem responsible for any other part of the SDK. This is the default subsystem value for logging, to be used when subsystem is not specified."},{"rawIndexableTextContent":"The controller observed a change in the channel watcher list. ","kind":"symbol","title":"channelWatcherListController(_:didChangeWatchers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate\/channelWatcherListController(_:didChangeWatchers:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the channel watcher list."},{"rawIndexableTextContent":"An object representing a device which can receive push notifications. ","kind":"symbol","title":"Device","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device","interfaceLanguage":"swift"}},"summary":"An object representing a device which can receive push notifications."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.joined(separator:). ","kind":"symbol","title":"joined(separator:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/joined(separator:)-2h7h0","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.joined(separator:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A filter key for matching the unreadChannelsCount value. ","kind":"symbol","title":"unreadChannelsCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/unreadChannelsCount","interfaceLanguage":"swift"}},"summary":"A filter key for matching the unreadChannelsCount value."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isEmpty. ","kind":"symbol","title":"isEmpty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isEmpty","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isEmpty."},{"rawIndexableTextContent":"Reject Request  The channel identifier. Called when the API call is finished. Called with Error if the remote update fails.","kind":"symbol","title":"rejectInvite(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/rejectInvite(completion:)","interfaceLanguage":"swift"}},"summary":"Reject Request"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The date the user was last time active. ","kind":"symbol","title":"lastActiveAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/lastActiveAt","interfaceLanguage":"swift"}},"summary":"The date the user was last time active."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"currentUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent\/currentUserId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Hashable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/Hashable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Video ","kind":"symbol","title":"AttachmentFileType.mov","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/mov","interfaceLanguage":"swift"}},"summary":"Video"},{"rawIndexableTextContent":"Sort users by name. ","kind":"symbol","title":"UserListSortingKey.name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/name","interfaceLanguage":"swift"}},"summary":"Sort users by name."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"danish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/danish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Toggle for showing thread name in logs ","kind":"symbol","title":"showThreadName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showThreadName","interfaceLanguage":"swift"}},"summary":"Toggle for showing thread name in logs"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A publisher emitting a new value every time the current user changes. ","kind":"symbol","title":"currentUserChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUserChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the current user changes."},{"rawIndexableTextContent":"The attachment payload. ","kind":"symbol","title":"payload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/payload","interfaceLanguage":"swift"}},"summary":"The attachment payload."},{"rawIndexableTextContent":"Custom data ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/extraData","interfaceLanguage":"swift"}},"summary":"Custom data"},{"rawIndexableTextContent":"The client is initialized but not connected to the remote server yet. ","kind":"symbol","title":"ConnectionStatus.initialized","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/initialized","interfaceLanguage":"swift"}},"summary":"The client is initialized but not connected to the remote server yet."},{"rawIndexableTextContent":"The datacenter ChatClient uses for connecting. ","kind":"symbol","title":"baseURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/baseURL","interfaceLanguage":"swift"}},"summary":"The datacenter ChatClient uses for connecting."},{"rawIndexableTextContent":"The subsystem responsible for HTTP operations. ","kind":"symbol","title":"httpRequests","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/httpRequests","interfaceLanguage":"swift"}},"summary":"The subsystem responsible for HTTP operations."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByArrayLiteral.init(arrayLiteral:). ","kind":"symbol","title":"init(arrayLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/init(arrayLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByArrayLiteral.init(arrayLiteral:)."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Sort users by role. (user, admin, guest, anonymous) ","kind":"symbol","title":"UserListSortingKey.role","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/role","interfaceLanguage":"swift"}},"summary":"Sort users by role. (user, admin, guest, anonymous)"},{"rawIndexableTextContent":"The queue which is used to perform callback calls ","kind":"symbol","title":"callbackQueue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/callbackQueue","interfaceLanguage":"swift"}},"summary":"The queue which is used to perform callback calls"},{"rawIndexableTextContent":"A type of resulting attachment. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"A type of resulting attachment."},{"rawIndexableTextContent":"A struct describing unread counts for a channel. ","kind":"symbol","title":"ChannelUnreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount","interfaceLanguage":"swift"}},"summary":"A struct describing unread counts for a channel."},{"rawIndexableTextContent":"A filter key for matching the unreadMessagesCount value. ","kind":"symbol","title":"unreadMessagesCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/unreadMessagesCount","interfaceLanguage":"swift"}},"summary":"A filter key for matching the unreadMessagesCount value."},{"rawIndexableTextContent":"A publisher emitting a new value every time the channel members change. ","kind":"symbol","title":"watchersChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/watchersChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the channel members change."},{"rawIndexableTextContent":"A Boolean value that returns wether the reactions have all been loaded or not. ","kind":"symbol","title":"hasLoadedAllReactions","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/hasLoadedAllReactions","interfaceLanguage":"swift"}},"summary":"A Boolean value that returns wether the reactions have all been loaded or not."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"german","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/german","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The information about file size\/mimeType. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState\/file","interfaceLanguage":"swift"}},"summary":"The information about file size\/mimeType."},{"rawIndexableTextContent":"When a channel was truncated. ","kind":"symbol","title":"channelTruncated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/channelTruncated","interfaceLanguage":"swift"}},"summary":"When a channel was truncated."},{"rawIndexableTextContent":"Inherited from OptionSet.symmetricDifference(_:). ","kind":"symbol","title":"symmetricDifference(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/symmetricDifference(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.symmetricDifference(_:)."},{"rawIndexableTextContent":"A filter key for matching the name value. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/name-mrnw","interfaceLanguage":"swift"}},"summary":"A filter key for matching the name value."},{"rawIndexableTextContent":"An attachment type all ImageAttachmentPayload instances conform to. Is set to .image. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all ImageAttachmentPayload instances conform to. Is set to .image."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ConnectionEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionEvent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Stop watching a channel  Called when the API call is finished. Called with Error if the remote update fails. Discussion Watching a channel is defined as observing notifications about this channel. ChannelController watches the channel by default so if you want to create a ChannelController without watching the channel, either you can create it and call this function, or you can create it as:  Please check documentation for more information. If you’re using ChannelListController, calling this function can disrupt ChannelListController’s functions, such as updating channel data.","kind":"symbol","title":"stopWatching(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/stopWatching(completion:)","interfaceLanguage":"swift"}},"summary":"Stop watching a channel"},{"rawIndexableTextContent":"Inherited from Collection.prefix(upTo:). ","kind":"symbol","title":"prefix(upTo:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/prefix(upTo:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.prefix(upTo:)."},{"rawIndexableTextContent":"The channel the current user has become a member of. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel the current user has become a member of."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"connectionId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionEvent\/connectionId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.EventDecoding","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/EventDecoding","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"Filter on ids smaller than or equal to the given value. ","kind":"symbol","title":"PaginationParameter.lessThanOrEqual(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/lessThanOrEqual(_:)","interfaceLanguage":"swift"}},"summary":"Filter on ids smaller than or equal to the given value."},{"rawIndexableTextContent":"A text. ","kind":"symbol","title":"text","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/text","interfaceLanguage":"swift"}},"summary":"A text."},{"rawIndexableTextContent":"Returns true if the channel has one or more unread messages for the current user. ","kind":"symbol","title":"isUnread","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isUnread","interfaceLanguage":"swift"}},"summary":"Returns true if the channel has one or more unread messages for the current user."},{"rawIndexableTextContent":"The controller observed a change in connection status. ","kind":"symbol","title":"connectionController(_:didUpdateConnectionStatus:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/connectionController(_:didUpdateConnectionStatus:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in connection status."},{"rawIndexableTextContent":"The attachment is waiting to be uploaded. ","kind":"symbol","title":"LocalAttachmentState.pendingUpload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/pendingUpload","interfaceLanguage":"swift"}},"summary":"The attachment is waiting to be uploaded."},{"rawIndexableTextContent":"Inherited from OptionSet.formUnion(_:). ","kind":"symbol","title":"formUnion(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/formUnion(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formUnion(_:)."},{"rawIndexableTextContent":"Matches if the key contains the given value. ","kind":"symbol","title":"contains(_:value:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/contains(_:value:)","interfaceLanguage":"swift"}},"summary":"Matches if the key contains the given value."},{"rawIndexableTextContent":"A filter key for matching the isBanned value. ","kind":"symbol","title":"isBanned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/isBanned","interfaceLanguage":"swift"}},"summary":"A filter key for matching the isBanned value."},{"rawIndexableTextContent":"The membership information of the current user. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent\/member","interfaceLanguage":"swift"}},"summary":"The membership information of the current user."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Sent when a user stops typing. ","kind":"symbol","title":"userStopTyping","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userStopTyping","interfaceLanguage":"swift"}},"summary":"Sent when a user stops typing."},{"rawIndexableTextContent":"Combines the provided filters and matches the values matched by all filters. ","kind":"symbol","title":"and(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/and(_:)","interfaceLanguage":"swift"}},"summary":"Combines the provided filters and matches the values matched by all filters."},{"rawIndexableTextContent":"Matches values that are greater than a specified value. ","kind":"symbol","title":"FilterOperator.greaterOrEqual","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/greaterOrEqual","interfaceLanguage":"swift"}},"summary":"Matches values that are greater than a specified value."},{"rawIndexableTextContent":"When a user was unbanned. ","kind":"symbol","title":"userUnbanned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userUnbanned","interfaceLanguage":"swift"}},"summary":"When a user was unbanned."},{"rawIndexableTextContent":"Creates a new ChannelEventsController that can be used to listen to system events related to the channel with cid and to send custom events.  Return Value A new instance of ChannelEventsController. A channel identifier.","kind":"symbol","title":"channelEventsController(for:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelEventsController(for:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChannelEventsController that can be used to listen to system events related to the channel with cid and to send custom events."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Allows logger to be called as function. Transforms, given that let log = Logger(), log.log(.info, \"Hello\") to log(.info, \"Hello\") for ease of use.  Log level for this message Function of the caller File of the caller Line number of the caller Message to be logged","kind":"symbol","title":"callAsFunction(_:functionName:fileName:lineNumber:message:subsystems:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/callAsFunction(_:functionName:fileName:lineNumber:message:subsystems:)","interfaceLanguage":"swift"}},"summary":"Allows logger to be called as function. Transforms, given that let log = Logger(), log.log(.info, \"Hello\") to log(.info, \"Hello\") for ease of use."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessageSearchFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchFilterScope","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A Boolean value that returns wether the previous messages have all been loaded or not. ","kind":"symbol","title":"hasLoadedAllPreviousMessages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/hasLoadedAllPreviousMessages","interfaceLanguage":"swift"}},"summary":"A Boolean value that returns wether the previous messages have all been loaded or not."},{"rawIndexableTextContent":"A type representing empty response of an Endpoint. ","kind":"symbol","title":"EmptyResponse","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EmptyResponse","interfaceLanguage":"swift"}},"summary":"A type representing empty response of an Endpoint."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"portuguese","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/portuguese","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Cooldown duration for the channel, if it’s in slow mode. This value will be 0 if the channel is not in slow mode. This value is in seconds. For more information, please check documentation. ","kind":"symbol","title":"cooldownDuration","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/cooldownDuration","interfaceLanguage":"swift"}},"summary":"Cooldown duration for the channel, if it’s in slow mode. This value will be 0 if the channel is not in slow mode. This value is in seconds. For more information, please check documentation."},{"rawIndexableTextContent":"The controller observed changes in the replies of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReplies:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeReplies:)-2i4aw","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the replies of the observed ChatMessage."},{"rawIndexableTextContent":"Sends the start typing event and schedule a timer to send the stop typing event.  a completion block with an error if the request was failed. Discussion This method is meant to be called every time the user presses a key. The method will manage requests and timer as needed.","kind":"symbol","title":"sendKeystrokeEvent(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendKeystrokeEvent(completion:)","interfaceLanguage":"swift"}},"summary":"Sends the start typing event and schedule a timer to send the stop typing event."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from OptionSet.init(). ","kind":"symbol","title":"init()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/init()","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.init()."},{"rawIndexableTextContent":"The controller observed changes in the replies of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReplies:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeReplies:)-uv4a","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the replies of the observed ChatMessage."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). ","kind":"symbol","title":"flatMap(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/flatMap(_:)-1gm8q","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.flatMap(_:)."},{"rawIndexableTextContent":"The query specifying sorting and filtering for the list of channel watchers. ","kind":"symbol","title":"query","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/query","interfaceLanguage":"swift"}},"summary":"The query specifying sorting and filtering for the list of channel watchers."},{"rawIndexableTextContent":"The local file URL that is being uploaded. ","kind":"symbol","title":"localFileURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState\/localFileURL","interfaceLanguage":"swift"}},"summary":"The local file URL that is being uploaded."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"amharic","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/amharic","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Marks the channel as read.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"markRead(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/markRead(completion:)","interfaceLanguage":"swift"}},"summary":"Marks the channel as read."},{"rawIndexableTextContent":"Use this log level if you want to see what is happening during the app execution. ","kind":"symbol","title":"LogLevel.info","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/info","interfaceLanguage":"swift"}},"summary":"Use this log level if you want to see what is happening during the app execution."},{"rawIndexableTextContent":"An extra-data-specific namespace for the FilterKeys suitable to be used for UserListQuery. ","kind":"symbol","title":"UserListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListFilterScope","interfaceLanguage":"swift"}},"summary":"An extra-data-specific namespace for the FilterKeys suitable to be used for UserListQuery."},{"rawIndexableTextContent":"Decodes a payload of the given type from the event.  Return Value A payload of the given type if decoding succeeds and if event type matches the one declared in custom payload type. Otherwise nil is returned. The type of payload the custom fields should be treated as.","kind":"symbol","title":"payload(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/payload(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes a payload of the given type from the event."},{"rawIndexableTextContent":"The id of the channel without the encoded type information. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/id","interfaceLanguage":"swift"}},"summary":"The id of the channel without the encoded type information."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionWasNotInitiated\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"Audio ","kind":"symbol","title":"AttachmentFileType.ogg","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/ogg","interfaceLanguage":"swift"}},"summary":"Audio"},{"rawIndexableTextContent":"An event creation date. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"An event creation date."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatMessageControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/ChatMessageControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A sorting field name. ","kind":"symbol","title":"key","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/key","interfaceLanguage":"swift"}},"summary":"A sorting field name."},{"rawIndexableTextContent":"The client is disconnected. This is an initial state. Optionally contains an error, if the connection was disconnected due to an error. ","kind":"symbol","title":"ConnectionStatus.disconnected(error:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/disconnected(error:)","interfaceLanguage":"swift"}},"summary":"The client is disconnected. This is an initial state. Optionally contains an error, if the connection was disconnected due to an error."},{"rawIndexableTextContent":"A helper struct that represents a key of a filter.  Overview It allows tagging a key with a scope and a type of the value the key is related to. Learn more about how to create filter keys for your custom extra data in our cheat sheet.","kind":"symbol","title":"FilterKey","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey","interfaceLanguage":"swift"}},"summary":"A helper struct that represents a key of a filter."},{"rawIndexableTextContent":"Describes the possible states of DataController ","kind":"symbol","title":"DataController.State","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum","interfaceLanguage":"swift"}},"summary":"Describes the possible states of DataController"},{"rawIndexableTextContent":"Removes a registered device from the current user. connectUser must be called before calling this.  Device id to be removed. You can obtain registered devices via currentUser.devices. If currentUser.devices is not up-to-date, please make an synchronize call. Called when device is successfully deregistered, or with error.","kind":"symbol","title":"removeDevice(id:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/removeDevice(id:completion:)","interfaceLanguage":"swift"}},"summary":"Removes a registered device from the current user. connectUser must be called before calling this."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/reactionType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from LocalizedError.helpAnchor. ","kind":"symbol","title":"helpAnchor","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/helpAnchor","interfaceLanguage":"swift"}},"summary":"Inherited from LocalizedError.helpAnchor."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"channelFilter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/channelFilter","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.first. ","kind":"symbol","title":"first","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/first","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.first."},{"rawIndexableTextContent":"Returns max number of attachments that can be attached to a message.  Discussion The current limit is 10.","kind":"symbol","title":"maxAttachmentCountPerMessage","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/maxAttachmentCountPerMessage","interfaceLanguage":"swift"}},"summary":"Returns max number of attachments that can be attached to a message."},{"rawIndexableTextContent":"The unread counts of the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts of the current user."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/updatedAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RandomAccessCollection.index(_:offsetBy:limitedBy:). ","kind":"symbol","title":"index(_:offsetBy:limitedBy:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/index(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"}},"summary":"Inherited from RandomAccessCollection.index(_:offsetBy:limitedBy:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Edits the message this controller manages with the provided values.  The updated message text. Custom extra data. When nil is passed the message custom fields stay the same. Equals nil by default. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"editMessage(text:extraData:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/editMessage(text:extraData:completion:)","interfaceLanguage":"swift"}},"summary":"Edits the message this controller manages with the provided values."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"translated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload\/translated","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Matches none of the values specified in an array. ","kind":"symbol","title":"notIn(_:values:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/notIn(_:values:)","interfaceLanguage":"swift"}},"summary":"Matches none of the values specified in an array."},{"rawIndexableTextContent":"The default timeout in minutes until the ban is automatically expired. ","kind":"symbol","title":"timeoutInMinutes","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/timeoutInMinutes","interfaceLanguage":"swift"}},"summary":"The default timeout in minutes until the ban is automatically expired."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"audio","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/audio","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Matches values that are less than a specified value. ","kind":"symbol","title":"less(_:than:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/less(_:than:)","interfaceLanguage":"swift"}},"summary":"Matches values that are less than a specified value."},{"rawIndexableTextContent":"The user who deleted the message. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who deleted the message."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Date when the message pin expires. An nil value means that message does not expire ","kind":"symbol","title":"expiresAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails\/expiresAt","interfaceLanguage":"swift"}},"summary":"Date when the message pin expires. An nil value means that message does not expire"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Is used when attachment with missing type comes. ","kind":"symbol","title":"unknown","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/unknown","interfaceLanguage":"swift"}},"summary":"Is used when attachment with missing type comes."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"The reaction score. ","kind":"symbol","title":"score","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/score","interfaceLanguage":"swift"}},"summary":"The reaction score."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A pagination for watchers (see Pagination). ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery\/pagination","interfaceLanguage":"swift"}},"summary":"A pagination for watchers (see Pagination)."},{"rawIndexableTextContent":"Matches any of the values specified in an array. ","kind":"symbol","title":"FilterOperator.in","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/in","interfaceLanguage":"swift"}},"summary":"Matches any of the values specified in an array."},{"rawIndexableTextContent":"An event type SDK fallbacks to if incoming event was failed to be decoded as a system event. ","kind":"symbol","title":"UnknownUserEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent","interfaceLanguage":"swift"}},"summary":"An event type SDK fallbacks to if incoming event was failed to be decoded as a system event."},{"rawIndexableTextContent":"Creates a new ChatChannelWatcherListController with the provided query.  Return Value A new instance of ChatChannelMemberListController. The query specifying the pagination options for watchers the controller should fetch.","kind":"symbol","title":"watcherListController(query:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/watcherListController(query:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChatChannelWatcherListController with the provided query."},{"rawIndexableTextContent":"Inherited from Collection.firstIndex(where:). ","kind":"symbol","title":"firstIndex(where:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/firstIndex(where:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.firstIndex(where:)."},{"rawIndexableTextContent":"Enables slow mode for the channel  Duration of the time interval users have to wait between messages. Specified in seconds. Should be between 1-120. Called when the API call is finished. Called with Error if the remote update fails. Discussion When slow mode is enabled, users can only send a message every cooldownDuration time interval. cooldownDuration is specified in seconds, and should be between 1-120. For more information, please check documentation.","kind":"symbol","title":"enableSlowMode(cooldownDuration:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/enableSlowMode(cooldownDuration:completion:)","interfaceLanguage":"swift"}},"summary":"Enables slow mode for the channel"},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Init a logger with a given identifier and destinations. ","kind":"symbol","title":"init(identifier:destinations:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/init(identifier:destinations:)","interfaceLanguage":"swift"}},"summary":"Init a logger with a given identifier and destinations."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(content:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo\/init(content:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Represents a payload for attachments with .giphy type. ","kind":"symbol","title":"GiphyAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .giphy type."},{"rawIndexableTextContent":"Triggered when banned user is unbanned in a specific channel ","kind":"symbol","title":"UserUnbannedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when banned user is unbanned in a specific channel"},{"rawIndexableTextContent":"Pin the message this controller manages.  Discussion pinning: The pinning expiration information. It supports setting an infinite expiration, setting a date, or the amount of time a message is pinned. completion: A completion block with an error if the request was failed.","kind":"symbol","title":"pin(_:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/pin(_:completion:)","interfaceLanguage":"swift"}},"summary":"Pin the message this controller manages."},{"rawIndexableTextContent":"Creates an instance of AnyAttachmentPayload with the URL referencing to a local file.  The local URL referencing to the file. The type of resulting attachment exposed on the message. An extra data that should be added to attachment. Discussion The resulting attachment will have ImageAttachmentPayload if attachmentType == .image. The resulting attachment will have VideoAttachmentPayload if attachmentType == .video. The resulting attachment will have FileAttachmentPayload if attachmentType == .file. If the type is different than .image\/.video\/.file the ClientError.UnsupportedUploadableAttachmentType error will be thrown. If attached to the new message the attachment with the given payload will be immediately available on ChatMessage with the uploadingState reflecting the file uploading progress. Until the message is sent all URLs on exposed attachment will be equal to the given localFileURL. A given extra data must have dictionary representation. The error if localFileURL is not the file URL or if extraData can not be represented as a dictionary.","kind":"symbol","title":"init(localFileURL:attachmentType:extraData:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload\/init(localFileURL:attachmentType:extraData:)","interfaceLanguage":"swift"}},"summary":"Creates an instance of AnyAttachmentPayload with the URL referencing to a local file."},{"rawIndexableTextContent":"Inherited from Sequence.min(). ","kind":"symbol","title":"min()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/min()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.min()."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(wrappedValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic\/init(wrappedValue:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A mutable thread safe variable.  Overview Be aware that accessing and setting a value are two distinct operations, so using operators like += results in two separate atomic operations. To work around this issue, you can access the wrapper directly and use the mutate(_ changes:) method:  Even though the value guarded by Atomic is thread-safe, the Atomic class itself is not. Mutating the instance itself from multiple threads can cause a crash.","kind":"symbol","title":"Atomic","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic","interfaceLanguage":"swift"}},"summary":"A mutable thread safe variable."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"mentionedMessages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/mentionedMessages","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The ChannelId this message belongs to. This value can be temporarily nil for messages that are being removed from the local cache, or when the local cache is in the process of invalidating. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/cid","interfaceLanguage":"swift"}},"summary":"The ChannelId this message belongs to. This value can be temporarily nil for messages that are being removed from the local cache, or when the local cache is in the process of invalidating."},{"rawIndexableTextContent":"Triggered when the current user is added to the channel member list. ","kind":"symbol","title":"NotificationAddedToChannelEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent","interfaceLanguage":"swift"}},"summary":"Triggered when the current user is added to the channel member list."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Update the value safely.  a block with changes. It should return a new value.","kind":"symbol","title":"callAsFunction(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic\/callAsFunction(_:)","interfaceLanguage":"swift"}},"summary":"Update the value safely."},{"rawIndexableTextContent":"Allows the member to perform moderation, e.g. ban users, add\/remove users, etc. ","kind":"symbol","title":"moderator","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/moderator","interfaceLanguage":"swift"}},"summary":"Allows the member to perform moderation, e.g. ban users, add\/remove users, etc."},{"rawIndexableTextContent":"Inherited from OptionSet.formUnion(_:). ","kind":"symbol","title":"formUnion(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/formUnion(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formUnion(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"withAttachments(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/withAttachments(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The memeber that was added to a channel. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/member","interfaceLanguage":"swift"}},"summary":"The memeber that was added to a channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"allCases","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/allCases","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type representing the currently logged-in user. CurrentChatUser is an immutable snapshot of a current user entity at the given time. ","kind":"symbol","title":"CurrentChatUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser","interfaceLanguage":"swift"}},"summary":"A type representing the currently logged-in user. CurrentChatUser is an immutable snapshot of a current user entity at the given time."},{"rawIndexableTextContent":"The system message accompanied with the truncated event. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent\/message","interfaceLanguage":"swift"}},"summary":"The system message accompanied with the truncated event."},{"rawIndexableTextContent":"Inherited from Collection.formIndex(_:offsetBy:). ","kind":"symbol","title":"formIndex(_:offsetBy:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formIndex(_:offsetBy:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.formIndex(_:offsetBy:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatChannelMemberListControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/ChatChannelMemberListControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.FetchFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/FetchFailed","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates AudioAttachmentPayload instance.  Discussion Use this initializer if the attachment is already uploaded and you have the remote URLs.","kind":"symbol","title":"init(title:audioRemoteURL:file:extraData:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/init(title:audioRemoteURL:file:extraData:)","interfaceLanguage":"swift"}},"summary":"Creates AudioAttachmentPayload instance."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"indonesian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/indonesian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Decodes extra data as an instance of the given type.  Return Value Extra data of the given type or nil if decoding fails. The type an extra data should be decoded as.","kind":"symbol","title":"extraData(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/extraData(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes extra data as an instance of the given type."},{"rawIndexableTextContent":"Determines whether ChatClient caches the data locally. This makes it possible to browse the existing chat data also when the internet connection is not available. ","kind":"symbol","title":"isLocalStorageEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/isLocalStorageEnabled","interfaceLanguage":"swift"}},"summary":"Determines whether ChatClient caches the data locally. This makes it possible to browse the existing chat data also when the internet connection is not available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate\/controller(_:didChangeState:)-68bgx","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate\/controller(_:didChangeState:)-6kgca","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"Sort messages by their created_at dates. ","kind":"symbol","title":"MessageSearchSortingKey.createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/createdAt","interfaceLanguage":"swift"}},"summary":"Sort messages by their created_at dates."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/EventDecoding\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"A combination of channel id and type. ","kind":"symbol","title":"ChannelCodingKeys.cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/cid","interfaceLanguage":"swift"}},"summary":"A combination of channel id and type."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"The channel a message was sent to. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel a message was sent to."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatChannelMemberControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/ChatChannelMemberControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Latest messages present on the channel. The first item of the array, is the most recent message.  Discussion This field contains only the latest messages of the channel. You can get all existing messages in the channel by creating and using a ChatChannelController for this channel id. The amount of latest messages is controlled by the ChatClientConfig.LocalCaching.latestMessagesLimit. The latestMessages property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"latestMessages","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/latestMessages","interfaceLanguage":"swift"}},"summary":"Latest messages present on the channel. The first item of the array, is the most recent message."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches values that are less than or equal to a specified value. ","kind":"symbol","title":"lessOrEqual(_:than:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/lessOrEqual(_:than:)","interfaceLanguage":"swift"}},"summary":"Matches values that are less than or equal to a specified value."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidChannelId\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"The controller will update the list of observed channels.  The controller emitting the change callback.","kind":"symbol","title":"controllerWillChangeChannels(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controllerWillChangeChannels(_:)-8h2sh","interfaceLanguage":"swift"}},"summary":"The controller will update the list of observed channels."},{"rawIndexableTextContent":"A wrapper object for ChannelListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatChannelListController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChannelListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Inherited from Collection.randomElement(). ","kind":"symbol","title":"randomElement()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/randomElement()","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.randomElement()."},{"rawIndexableTextContent":"The deleted channel. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The deleted channel."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSuperset(of:). ","kind":"symbol","title":"isStrictSuperset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isStrictSuperset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isStrictSuperset(of:)."},{"rawIndexableTextContent":"The identifier of a channel a message is sent to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of a channel a message is sent to."},{"rawIndexableTextContent":"No overview available.  An attachment to upload A closure that broadcasts upload progress Returns uploading result on upload completion or failure","kind":"symbol","title":"uploadAttachment(_:progress:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CDNClient\/uploadAttachment(_:progress:completion:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Triggered when a channel is deleted. ","kind":"symbol","title":"ChannelDeletedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is deleted."},{"rawIndexableTextContent":"The controller observed a change in the ChatUser entity. ","kind":"symbol","title":"userController(_:didUpdateUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/userController(_:didUpdateUser:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatUser entity."},{"rawIndexableTextContent":"When a message reaction updated. ","kind":"symbol","title":"reactionUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/reactionUpdated","interfaceLanguage":"swift"}},"summary":"When a message reaction updated."},{"rawIndexableTextContent":"Fetches the token from tokenProvider and prepares the current ChatClient variables for the new user.  The completion to be called when the operation is completed. Discussion If the a token obtained from tokenProvider is for another user the database will be flushed.","kind":"symbol","title":"reloadUserIfNeeded(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/reloadUserIfNeeded(completion:)","interfaceLanguage":"swift"}},"summary":"Fetches the token from tokenProvider and prepares the current ChatClient variables for the new user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The updated message. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/message","interfaceLanguage":"swift"}},"summary":"The updated message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.Location","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Location-swift.struct","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new ChatChannelMemberController for the user with the provided userId and cid.  Return Value A new instance of ChatChannelMemberController. The user identifier. The channel identifier.","kind":"symbol","title":"memberController(userId:in:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/memberController(userId:in:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChatChannelMemberController for the user with the provided userId and cid."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.x7z","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/x7z","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"Use this log level if you want to see everything that is logged. ","kind":"symbol","title":"LogLevel.debug","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/debug","interfaceLanguage":"swift"}},"summary":"Use this log level if you want to see everything that is logged."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"pashto","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/pashto","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Sends a custom event to the channel with cid.  A custom event payload to be sent. A completion.","kind":"symbol","title":"sendEvent(_:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelEventsController\/sendEvent(_:completion:)","interfaceLanguage":"swift"}},"summary":"Sends a custom event to the channel with cid."},{"rawIndexableTextContent":"ChatChannelListController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatChannelListControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatChannelListController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"ChannelListSortingKey is keys by which you can get sorted channels after query. ","kind":"symbol","title":"ChannelListSortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey","interfaceLanguage":"swift"}},"summary":"ChannelListSortingKey is keys by which you can get sorted channels after query."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"When a user was banned. ","kind":"symbol","title":"userBanned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userBanned","interfaceLanguage":"swift"}},"summary":"When a user was banned."},{"rawIndexableTextContent":"A channel updated date. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/updatedAt","interfaceLanguage":"swift"}},"summary":"A channel updated date."},{"rawIndexableTextContent":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatMessageController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"A preview image URL. ","kind":"symbol","title":"previewURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/previewURL","interfaceLanguage":"swift"}},"summary":"A preview image URL."},{"rawIndexableTextContent":"Inherited from Identifiable.id. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/id-95iwu","interfaceLanguage":"swift"}},"summary":"Inherited from Identifiable.id."},{"rawIndexableTextContent":"A Client error. ","kind":"symbol","title":"ClientError","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError","interfaceLanguage":"swift"}},"summary":"A Client error."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A delegate the controller notifies about the updates. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/delegate","interfaceLanguage":"swift"}},"summary":"A delegate the controller notifies about the updates."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"The role of the user within the channel. ","kind":"symbol","title":"memberRole","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/memberRole","interfaceLanguage":"swift"}},"summary":"The role of the user within the channel."},{"rawIndexableTextContent":"Searches messages for the given query.  Search query. Called when the controller has finished fetching remote data. If the data fetching fails, the error variable contains more details about the problem. Discussion When this function is called, messages property of this controller will refresh with new messages matching the text. The delegate function didChangeMessages will also be called. Currently, no local data will be searched, only remote data will be queried. Make sure the query text is not empty. Empty queries will result in 400 errors from backend.","kind":"symbol","title":"search(query:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/search(query:completion:)","interfaceLanguage":"swift"}},"summary":"Searches messages for the given query."},{"rawIndexableTextContent":"Initialize the log destination with given parameters.  Identifier for this destination. Will be shown on the logs if showIdentifier is true Output level for this destination. Messages will only be shown if their output level is higher than this. Toggle for showing date in logs DateFormatter instance for formatting the date in logs. Defaults to ISO8601 formatter. Log formatters to be applied in order before logs are outputted. Defaults to empty (no formatters). Please see LogFormatter for more info. Toggle for showing log level in logs Toggle for showing identifier in logs Toggle for showing thread name in logs Toggle for showing file name in logs Toggle for showing line number in logs Toggle for showing function name in logs","kind":"symbol","title":"init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","interfaceLanguage":"swift"}},"summary":"Initialize the log destination with given parameters."},{"rawIndexableTextContent":"A filter key for matching the createdBy value. ","kind":"symbol","title":"createdBy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/createdBy","interfaceLanguage":"swift"}},"summary":"A filter key for matching the createdBy value."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The controller observed changes in the Messages of the observed channel. ","kind":"symbol","title":"channelController(_:didUpdateMessages:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didUpdateMessages:)-5avir","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the Messages of the observed channel."},{"rawIndexableTextContent":"Converts type-erased attachment to the attachment with the concrete payload.  Return Value The attachment with the requested payload type or nil. The payload type the current type-erased attachment payload should be treated as. Discussion Attachment with the requested payload type will be returned if the type-erased payload has a Payload instance under the hood OR if it’s a Data that can be decoded as a Payload.","kind":"symbol","title":"attachment(payloadType:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/attachment(payloadType:)","interfaceLanguage":"swift"}},"summary":"Converts type-erased attachment to the attachment with the concrete payload."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showIdentifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showIdentifier","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Specifies whether shadowed messages should be shown in Message list. For more information, please check “Shadow Bans” docs. ","kind":"symbol","title":"shouldShowShadowedMessages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/shouldShowShadowedMessages","interfaceLanguage":"swift"}},"summary":"Specifies whether shadowed messages should be shown in Message list. For more information, please check “Shadow Bans” docs."},{"rawIndexableTextContent":"Removes hidden status for the channel this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"showChannel(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/showChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Removes hidden status for the channel this controller manages."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.suffix(_:). ","kind":"symbol","title":"suffix(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/suffix(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.suffix(_:)."},{"rawIndexableTextContent":"Loads new messages from the backend.  ID of the current first message. You will get messages newer then the provided ID. Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextReplies(after:limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/loadNextReplies(after:limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads new messages from the backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.MissingToken","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingToken","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The read channel. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/channel","interfaceLanguage":"swift"}},"summary":"The read channel."},{"rawIndexableTextContent":"An enum describing possible types of a channel. ","kind":"symbol","title":"ChannelType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType","interfaceLanguage":"swift"}},"summary":"An enum describing possible types of a channel."},{"rawIndexableTextContent":"The message a reaction is deleted from. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/message","interfaceLanguage":"swift"}},"summary":"The message a reaction is deleted from."},{"rawIndexableTextContent":"The unread counts for the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts for the current user."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"true if the channel has quotes enabled. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areQuotesEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areQuotesEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel has quotes enabled. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"A channel config. ","kind":"symbol","title":"ChannelCodingKeys.config","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/config","interfaceLanguage":"swift"}},"summary":"A channel config."},{"rawIndexableTextContent":"Inherited from Sequence.underestimatedCount. ","kind":"symbol","title":"underestimatedCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/underestimatedCount-6wteg","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.underestimatedCount."},{"rawIndexableTextContent":"When used, the backend returns messages around the message with the given id. ","kind":"symbol","title":"PinnedMessagesPagination.aroundMessage(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/aroundMessage(_:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages around the message with the given id."},{"rawIndexableTextContent":"Inherited from Collection.drop(while:). ","kind":"symbol","title":"drop(while:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/drop(while:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.drop(while:)."},{"rawIndexableTextContent":"Changes local message from .sendingFailed to .pendingSend so it is enqueued by message sender worker.  The completion. Will be called on a callbackQueue when the database operation is finished. If operation fails, the completion will be called with an error.","kind":"symbol","title":"resendMessage(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/resendMessage(completion:)","interfaceLanguage":"swift"}},"summary":"Changes local message from .sendingFailed to .pendingSend so it is enqueued by message sender worker."},{"rawIndexableTextContent":"A set of users muted by the user. ","kind":"symbol","title":"mutedUsers","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/mutedUsers","interfaceLanguage":"swift"}},"summary":"A set of users muted by the user."},{"rawIndexableTextContent":"Decodes a payload of the given type from the event.  Return Value A payload of the given type if decoding succeeds and if event type matches the one declared in custom payload type. Otherwise nil is returned. The type of payload the custom fields should be treated as.","kind":"symbol","title":"payload(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/payload(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes a payload of the given type from the event."},{"rawIndexableTextContent":"Image (avatar) url for this channel. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/imageURL","interfaceLanguage":"swift"}},"summary":"Image (avatar) url for this channel."},{"rawIndexableTextContent":"A type. ","kind":"symbol","title":"ChannelCodingKeys.typeRawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/typeRawValue","interfaceLanguage":"swift"}},"summary":"A type."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Inherited from OptionSet.union(_:). ","kind":"symbol","title":"union(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/union(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.union(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"japanese","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/japanese","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Set the delegate of ChatConnectionController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatConnectionController to observe the changes in the system."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"EventsControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/EventsControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.prefix(while:). ","kind":"symbol","title":"prefix(while:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/prefix(while:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.prefix(while:)."},{"rawIndexableTextContent":"Number of unread messages the user has in this channel. ","kind":"symbol","title":"unreadMessagesCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead\/unreadMessagesCount","interfaceLanguage":"swift"}},"summary":"Number of unread messages the user has in this channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isEnabled(level:subsystems:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/isEnabled(level:subsystems:)-84mtn","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message is waiting to be deleted. ","kind":"symbol","title":"LocalMessageState.deleting","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/deleting","interfaceLanguage":"swift"}},"summary":"The message is waiting to be deleted."},{"rawIndexableTextContent":"A filter for the query (see Filter). ","kind":"symbol","title":"filter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/filter","interfaceLanguage":"swift"}},"summary":"A filter for the query (see Filter)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A list of users and\/or channel members currently actively watching the channel.  Discussion Array is sorted and the most recently active watchers will be first. This list doesn’t have to contain all watchers of the channel. To access the full list of watchers, create a ChatChannelWatcherListController for this channel and use it to query all channel watchers. This property will contain no more than ChatClientConfig.channel.lastActiveWatchersLimit members.","kind":"symbol","title":"lastActiveWatchers","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/lastActiveWatchers","interfaceLanguage":"swift"}},"summary":"A list of users and\/or channel members currently actively watching the channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hungarian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/hungarian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When a message was deleted. ","kind":"symbol","title":"messageDeleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/messageDeleted","interfaceLanguage":"swift"}},"summary":"When a message was deleted."},{"rawIndexableTextContent":"Triggered when the current user accepts an invite to a channel. ","kind":"symbol","title":"NotificationInviteAcceptedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when the current user accepts an invite to a channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"turkish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/turkish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"Deleting of the message failed after multiple of tries. The system is not trying to delete this message anymore. ","kind":"symbol","title":"LocalMessageState.deletingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/deletingFailed","interfaceLanguage":"swift"}},"summary":"Deleting of the message failed after multiple of tries. The system is not trying to delete this message anymore."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A deleted date. ","kind":"symbol","title":"ChannelCodingKeys.deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/deletedAt","interfaceLanguage":"swift"}},"summary":"A deleted date."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.odt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/odt","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An attachment file description. ","kind":"symbol","title":"AttachmentFile","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile","interfaceLanguage":"swift"}},"summary":"An attachment file description."},{"rawIndexableTextContent":"Sort channels by their unread count. ","kind":"symbol","title":"ChannelListSortingKey.unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/unreadCount","interfaceLanguage":"swift"}},"summary":"Sort channels by their unread count."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Determines if users are able to mute other users. Enabled by default. ","kind":"symbol","title":"mutesEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/mutesEnabled","interfaceLanguage":"swift"}},"summary":"Determines if users are able to mute other users. Enabled by default."},{"rawIndexableTextContent":"The controller observed a change in connection status. ","kind":"symbol","title":"connectionController(_:didUpdateConnectionStatus:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionControllerDelegate\/connectionController(_:didUpdateConnectionStatus:)-52w4m","interfaceLanguage":"swift"}},"summary":"The controller observed a change in connection status."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(name:description:set:args:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/init(name:description:set:args:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A frozen flag. ","kind":"symbol","title":"ChannelCodingKeys.frozen","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/frozen","interfaceLanguage":"swift"}},"summary":"A frozen flag."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"addDevice(token:pushProvider:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(token:pushProvider:completion:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"The current state is unknown ","kind":"symbol","title":"LocalAttachmentState.unknown","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/unknown","interfaceLanguage":"swift"}},"summary":"The current state is unknown"},{"rawIndexableTextContent":"Creating the reaction failed and cannot be fulfilled ","kind":"symbol","title":"LocalReactionState.sendingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/sendingFailed","interfaceLanguage":"swift"}},"summary":"Creating the reaction failed and cannot be fulfilled"},{"rawIndexableTextContent":"The controller observed a change in the ChatMessage its observes. ","kind":"symbol","title":"messageController(_:didChangeMessage:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/messageController(_:didChangeMessage:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatMessage its observes."},{"rawIndexableTextContent":"Triggered when current user mutes\/unmutes a channel. ","kind":"symbol","title":"NotificationChannelMutesUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when current user mutes\/unmutes a channel."},{"rawIndexableTextContent":"Controls if typing indicators are shown. Enabled by default. ","kind":"symbol","title":"typingEventsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/typingEventsEnabled","interfaceLanguage":"swift"}},"summary":"Controls if typing indicators are shown. Enabled by default."},{"rawIndexableTextContent":"Returns true if the member has been invited to the channel. ","kind":"symbol","title":"isInvited","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/isInvited","interfaceLanguage":"swift"}},"summary":"Returns true if the member has been invited to the channel."},{"rawIndexableTextContent":"The message is waiting to be synced. ","kind":"symbol","title":"LocalMessageState.pendingSync","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/pendingSync","interfaceLanguage":"swift"}},"summary":"The message is waiting to be synced."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"currentUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent\/currentUserId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Error Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/Error-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A query will return a channel state, e.g. messages. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/state","interfaceLanguage":"swift"}},"summary":"A query will return a channel state, e.g. messages."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"UnknownEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownEvent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches values with the specified prefix. ","kind":"symbol","title":"autocomplete(_:text:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/autocomplete(_:text:)","interfaceLanguage":"swift"}},"summary":"Matches values with the specified prefix."},{"rawIndexableTextContent":"Accept Request  The channel identifier. userId message Called when the API call is finished. Called with Error if the remote update fails.","kind":"symbol","title":"acceptInvite(message:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/acceptInvite(message:completion:)","interfaceLanguage":"swift"}},"summary":"Accept Request"},{"rawIndexableTextContent":"The total reactions of the message the controller represents.  Discussion To observe changes of the reactions, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"reactions","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/reactions","interfaceLanguage":"swift"}},"summary":"The total reactions of the message the controller represents."},{"rawIndexableTextContent":"Matches all values that are not equal to a specified value. ","kind":"symbol","title":"notEqual(_:to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/notEqual(_:to:)","interfaceLanguage":"swift"}},"summary":"Matches all values that are not equal to a specified value."},{"rawIndexableTextContent":"The channels matching the query of this controller.  Discussion To observe changes of the channels, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"channels","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/channels","interfaceLanguage":"swift"}},"summary":"The channels matching the query of this controller."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"The message delivery state for message that is successfully sent and read by at least one channel member. ","kind":"symbol","title":"read","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/read","interfaceLanguage":"swift"}},"summary":"The message delivery state for message that is successfully sent and read by at least one channel member."},{"rawIndexableTextContent":"The user the controller represents.  Discussion To observe changes of the user, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"user","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/user","interfaceLanguage":"swift"}},"summary":"The user the controller represents."},{"rawIndexableTextContent":"Cooldown duration for the channel, if it’s in slow mode. This value will be 0 if the channel is not in slow mode. ","kind":"symbol","title":"ChannelCodingKeys.cooldownDuration","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/cooldownDuration","interfaceLanguage":"swift"}},"summary":"Cooldown duration for the channel, if it’s in slow mode. This value will be 0 if the channel is not in slow mode."},{"rawIndexableTextContent":"A style, e.g. primary button. ","kind":"symbol","title":"style","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/style","interfaceLanguage":"swift"}},"summary":"A style, e.g. primary button."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"A parsed server response error. ","kind":"symbol","title":"ErrorPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload","interfaceLanguage":"swift"}},"summary":"A parsed server response error."},{"rawIndexableTextContent":"Matches values that are equal to a specified value. ","kind":"symbol","title":"FilterOperator.equal","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/equal","interfaceLanguage":"swift"}},"summary":"Matches values that are equal to a specified value."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"urdu","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/urdu","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type representing a message reaction. ChatMessageReaction is an immutable snapshot of a message reaction entity at the given time. ","kind":"symbol","title":"ChatMessageReaction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction","interfaceLanguage":"swift"}},"summary":"A type representing a message reaction. ChatMessageReaction is an immutable snapshot of a message reaction entity at the given time."},{"rawIndexableTextContent":"Unmutes the channel this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"unmuteChannel(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/unmuteChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Unmutes the channel this controller manages."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedEventType\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"readAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/readAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelEventsController\/cid","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The current connection status of Client ","kind":"symbol","title":"connectionStatus","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatusUpdated\/connectionStatus","interfaceLanguage":"swift"}},"summary":"The current connection status of Client"},{"rawIndexableTextContent":"Loads next users from backend.  Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextUsers(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/loadNextUsers(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next users from backend."},{"rawIndexableTextContent":"Invites. ","kind":"symbol","title":"ChannelCodingKeys.invites","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/invites","interfaceLanguage":"swift"}},"summary":"Invites."},{"rawIndexableTextContent":"Creates a new EventsController that can be used for event listening.  Return Value A new instance of EventsController.","kind":"symbol","title":"eventsController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/eventsController()","interfaceLanguage":"swift"}},"summary":"Creates a new EventsController that can be used for event listening."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"The updated user ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The updated user"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo\/name","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessageSearchQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"LocalReactionState","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The user who made the channel visible. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who made the channel visible."},{"rawIndexableTextContent":"Image ","kind":"symbol","title":"AttachmentFileType.png","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/png","interfaceLanguage":"swift"}},"summary":"Image"},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.pptx","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/pptx","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"The controller received a MemberEvent related to the channel it observes. ","kind":"symbol","title":"channelController(_:didReceiveMemberEvent:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didReceiveMemberEvent:)-695xv","interfaceLanguage":"swift"}},"summary":"The controller received a MemberEvent related to the channel it observes."},{"rawIndexableTextContent":"Use this log level if you want to see only errors. ","kind":"symbol","title":"LogLevel.error","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/error","interfaceLanguage":"swift"}},"summary":"Use this log level if you want to see only errors."},{"rawIndexableTextContent":"The audio itself. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/file","interfaceLanguage":"swift"}},"summary":"The audio itself."},{"rawIndexableTextContent":"Inherited from LogDestination.identifier. ","kind":"symbol","title":"identifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/identifier","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.identifier."},{"rawIndexableTextContent":"The controller observed a change in the CurrentChatUser entity. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate\/currentUserController(_:didChangeCurrentUser:)-4hj4u","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the CurrentChatUser entity."},{"rawIndexableTextContent":"A model containing user info that’s used to connect to chat’s backend ","kind":"symbol","title":"UserInfo","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo","interfaceLanguage":"swift"}},"summary":"A model containing user info that’s used to connect to chat’s backend"},{"rawIndexableTextContent":"A user that connected using guest user authentication. ","kind":"symbol","title":"guest","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/guest","interfaceLanguage":"swift"}},"summary":"A user that connected using guest user authentication."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"italian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/italian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A pagination. ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/pagination","interfaceLanguage":"swift"}},"summary":"A pagination."},{"rawIndexableTextContent":"Describes the pinning expiration ","kind":"symbol","title":"MessagePinning","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning","interfaceLanguage":"swift"}},"summary":"Describes the pinning expiration"},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Returns all the attachments with the payload of the provided type.  Discussion Attachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"attachments(payloadType:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/attachments(payloadType:)","interfaceLanguage":"swift"}},"summary":"Returns all the attachments with the payload of the provided type."},{"rawIndexableTextContent":"Text ","kind":"symbol","title":"AttachmentFileType.csv","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/csv","interfaceLanguage":"swift"}},"summary":"Text"},{"rawIndexableTextContent":"Optional image URL for the channel. ","kind":"symbol","title":"ChannelCodingKeys.imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/imageURL","interfaceLanguage":"swift"}},"summary":"Optional image URL for the channel."},{"rawIndexableTextContent":"The truncated channel. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The truncated channel."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.dropLast(_:). ","kind":"symbol","title":"dropLast(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/dropLast(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.dropLast(_:)."},{"rawIndexableTextContent":"Returns attachment for the given identifier.  Return Value A type-erased attachment. Attachment identifier.","kind":"symbol","title":"attachment(with:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/attachment(with:)","interfaceLanguage":"swift"}},"summary":"Returns attachment for the given identifier."},{"rawIndexableTextContent":"The date the reaction was last updated. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/updatedAt","interfaceLanguage":"swift"}},"summary":"The date the reaction was last updated."},{"rawIndexableTextContent":"The controller observed changes in the reactions of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReactions:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeReactions:)-e7pb","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the reactions of the observed ChatMessage."},{"rawIndexableTextContent":"ChatMessageController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatMessageControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatMessageController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The identifier of updated channel. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of updated channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"bosnian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/bosnian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Pagination options available when paginating pinned messages. ","kind":"symbol","title":"PinnedMessagesPagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination","interfaceLanguage":"swift"}},"summary":"Pagination options available when paginating pinned messages."},{"rawIndexableTextContent":"Sort users by id. ","kind":"symbol","title":"UserListSortingKey.id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/id","interfaceLanguage":"swift"}},"summary":"Sort users by id."},{"rawIndexableTextContent":"A list of users that participated in this message thread. The last user in the list is the author of the most recent reply. ","kind":"symbol","title":"threadParticipants","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/threadParticipants","interfaceLanguage":"swift"}},"summary":"A list of users that participated in this message thread. The last user in the list is the author of the most recent reply."},{"rawIndexableTextContent":"The reaction is being sent ","kind":"symbol","title":"LocalReactionState.sending","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/sending","interfaceLanguage":"swift"}},"summary":"The reaction is being sent"},{"rawIndexableTextContent":"The reaction is waiting to be sent to the server ","kind":"symbol","title":"LocalReactionState.pendingSend","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/pendingSend","interfaceLanguage":"swift"}},"summary":"The reaction is waiting to be sent to the server"},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionNotSuccessful\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A number of days or infinite. Infinite by default. ","kind":"symbol","title":"messageRetention","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/messageRetention","interfaceLanguage":"swift"}},"summary":"A number of days or infinite. Infinite by default."},{"rawIndexableTextContent":"A user identifier the event is sent by. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/userId","interfaceLanguage":"swift"}},"summary":"A user identifier the event is sent by."},{"rawIndexableTextContent":"The current state of the Controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the Controller."},{"rawIndexableTextContent":"Set the delegate of ChatChannelWatcherListController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatChannelWatcherListController to observe the changes in the system."},{"rawIndexableTextContent":"Enables uploads. ","kind":"symbol","title":"uploadsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/uploadsEnabled","interfaceLanguage":"swift"}},"summary":"Enables uploads."},{"rawIndexableTextContent":"Sort channels by the last message date.. ","kind":"symbol","title":"ChannelListSortingKey.lastMessageAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/lastMessageAt","interfaceLanguage":"swift"}},"summary":"Sort channels by the last message date.."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessageTranslationsPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Bans the channel member for a specific # of minutes.  The # of minutes the user should be banned for. The ban reason. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"ban(for:reason:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ban(for:reason:completion:)","interfaceLanguage":"swift"}},"summary":"Bans the channel member for a specific # of minutes."},{"rawIndexableTextContent":"An extra-data-specific namespace for the FilterKeys suitable to be used for ChannelMemberListQuery. ","kind":"symbol","title":"MemberListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberListFilterScope","interfaceLanguage":"swift"}},"summary":"An extra-data-specific namespace for the FilterKeys suitable to be used for ChannelMemberListQuery."},{"rawIndexableTextContent":"Controller observed a change in the channel member list. ","kind":"symbol","title":"memberListController(_:didChangeMembers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate\/memberListController(_:didChangeMembers:)-3fjw","interfaceLanguage":"swift"}},"summary":"Controller observed a change in the channel member list."},{"rawIndexableTextContent":"Date when the message was created locally and scheduled to be send. Applies only for the messages of the current user. ","kind":"symbol","title":"locallyCreatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/locallyCreatedAt","interfaceLanguage":"swift"}},"summary":"Date when the message was created locally and scheduled to be send. Applies only for the messages of the current user."},{"rawIndexableTextContent":"The last observed event. ","kind":"symbol","title":"mostRecentEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/mostRecentEvent","interfaceLanguage":"swift"}},"summary":"The last observed event."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ClientIsNotInActiveMode\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"Triggered when a reaction is deleted. ","kind":"symbol","title":"ReactionDeletedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a reaction is deleted."},{"rawIndexableTextContent":"If the current user is a member of the channel, this variable contains the details about the membership. ","kind":"symbol","title":"membership","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/membership","interfaceLanguage":"swift"}},"summary":"If the current user is a member of the channel, this variable contains the details about the membership."},{"rawIndexableTextContent":"ChatChannelWatcherListController is a controller class which allows observing a list of chat watchers based on the provided query. ","kind":"symbol","title":"ChatChannelWatcherListController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController","interfaceLanguage":"swift"}},"summary":"ChatChannelWatcherListController is a controller class which allows observing a list of chat watchers based on the provided query."},{"rawIndexableTextContent":"The currently logged-in user. ","kind":"symbol","title":"currentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/currentUser","interfaceLanguage":"swift"}},"summary":"The currently logged-in user."},{"rawIndexableTextContent":"The attachment identifier. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/id","interfaceLanguage":"swift"}},"summary":"The attachment identifier."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns true if the channel is frozen.  Discussion It’s not possible to send new messages to a frozen channel.","kind":"symbol","title":"isFrozen","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isFrozen","interfaceLanguage":"swift"}},"summary":"Returns true if the channel is frozen."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Get updates when the user goes offline\/online. ","kind":"symbol","title":"presence","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/presence","interfaceLanguage":"swift"}},"summary":"Get updates when the user goes offline\/online."},{"rawIndexableTextContent":"Matches if the key array contains the given value. ","kind":"symbol","title":"FilterOperator.contains","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/contains","interfaceLanguage":"swift"}},"summary":"Matches if the key array contains the given value."},{"rawIndexableTextContent":"Enables quoting of messages. Enabled by default. ","kind":"symbol","title":"quotesEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/quotesEnabled","interfaceLanguage":"swift"}},"summary":"Enables quoting of messages. Enabled by default."},{"rawIndexableTextContent":"The controller received a MemberEvent related to the channel it observes. ","kind":"symbol","title":"channelController(_:didReceiveMemberEvent:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didReceiveMemberEvent:)-23xsp","interfaceLanguage":"swift"}},"summary":"The controller received a MemberEvent related to the channel it observes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A publisher emitting a new value every time the messages changes. ","kind":"symbol","title":"messagesChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/messagesChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the messages changes."},{"rawIndexableTextContent":"The UserId of the currently logged in user. ","kind":"symbol","title":"currentUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/currentUserId","interfaceLanguage":"swift"}},"summary":"The UserId of the currently logged in user."},{"rawIndexableTextContent":"A possible additional local state of the message. Applies only for the messages of the current user.  Discussion Most of the time this value is nil. This value is always nil for messages not from the current user. A typical use of this value is to check if a message is pending send\/delete, and update the UI accordingly.","kind":"symbol","title":"localState","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/localState","interfaceLanguage":"swift"}},"summary":"A possible additional local state of the message. Applies only for the messages of the current user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A publisher emitting a new value every time the channel changes. ","kind":"symbol","title":"channelChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the channel changes."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"healthCheck","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/healthCheck","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Log an info message.  Message to be logged Function of the caller File of the caller Line number of the caller","kind":"symbol","title":"info(_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/info(_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Log an info message."},{"rawIndexableTextContent":"An extra data. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/extraData","interfaceLanguage":"swift"}},"summary":"An extra data."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Creates a new ChatUserListController with the provided user query.  Return Value A new instance of ChatUserListController. The query specify the filter and sorting of the users the controller should fetch.","kind":"symbol","title":"userListController(query:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/userListController(query:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChatUserListController with the provided user query."},{"rawIndexableTextContent":"The membership information of the current user. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/member","interfaceLanguage":"swift"}},"summary":"The membership information of the current user."},{"rawIndexableTextContent":"The controller observed a change in the CurrentChatUser entity. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/currentUserController(_:didChangeCurrentUser:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the CurrentChatUser entity."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isEnabled(level:subsystems:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/isEnabled(level:subsystems:)-8gi38","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChatChannel specific local caching and model serialization settings. ","kind":"symbol","title":"chatChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/LocalCaching-swift.struct\/chatChannel","interfaceLanguage":"swift"}},"summary":"ChatChannel specific local caching and model serialization settings."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"date","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/date","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Describes the ordering the messages are presented. ","kind":"symbol","title":"messageOrdering","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/messageOrdering","interfaceLanguage":"swift"}},"summary":"Describes the ordering the messages are presented."},{"rawIndexableTextContent":"The current connection status of the client.  Discussion To observe changes in the connection status, create an instance of CurrentChatUserController, and use it to receive callbacks when the connection status changes.","kind":"symbol","title":"connectionStatus","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/connectionStatus","interfaceLanguage":"swift"}},"summary":"The current connection status of the client."},{"rawIndexableTextContent":"true if the channel has replies enabled. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areRepliesEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areRepliesEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel has replies enabled. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"Represents a payload for attachments with .file type. ","kind":"symbol","title":"FileAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .file type."},{"rawIndexableTextContent":"Formats the given log message with the given prefixes by log level. Useful for emphasizing different leveled messages on console, when used as: prefixes: [.info: \"ℹ️\", .debug: \"🛠\", .error: \"❌\", .fault: \"🚨\"] ","kind":"symbol","title":"PrefixLogFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PrefixLogFormatter","interfaceLanguage":"swift"}},"summary":"Formats the given log message with the given prefixes by log level. Useful for emphasizing different leveled messages on console, when used as: prefixes: [.info: \"ℹ️\", .debug: \"🛠\", .error: \"❌\", .fault: \"🚨\"]"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When the user mutes someone. ","kind":"symbol","title":"notificationMutesUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationMutesUpdated","interfaceLanguage":"swift"}},"summary":"When the user mutes someone."},{"rawIndexableTextContent":"A query is used for querying specific channels from backend. You can specify filter, sorting, pagination, limit for fetched messages in channel and other options. ","kind":"symbol","title":"ChannelListQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery","interfaceLanguage":"swift"}},"summary":"A query is used for querying specific channels from backend. You can specify filter, sorting, pagination, limit for fetched messages in channel and other options."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The messages of the channel the controller represents.  Discussion To observe changes of the messages, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"messages","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/messages","interfaceLanguage":"swift"}},"summary":"The messages of the channel the controller represents."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"This role allows the member to perform destructive actions on the channel. ","kind":"symbol","title":"owner","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/owner","interfaceLanguage":"swift"}},"summary":"This role allows the member to perform destructive actions on the channel."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Loads a channel model with a matching cid from the local data store.  Return Value If there’s a channel object in the locally cached data matching the provided cid, returns the matching model object. If a channel object doesn’t exist locally, returns nil. An cid of a channel. Discussion If the data doesn’t exist locally, it’s recommended to use controllers to fetch data from remote servers. Warning: Should be called on the main thread only.","kind":"symbol","title":"channel(cid:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore\/channel(cid:)","interfaceLanguage":"swift"}},"summary":"Loads a channel model with a matching cid from the local data store."},{"rawIndexableTextContent":"The controller changed the list of observed channels.  The controller emitting the change callback. The change to the list of channels.\\","kind":"symbol","title":"controller(_:didChangeChannels:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controller(_:didChangeChannels:)","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed channels."},{"rawIndexableTextContent":"Inherited from OptionSet.init(). ","kind":"symbol","title":"init()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/init()","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.init()."},{"rawIndexableTextContent":"ChatChannelController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatChannelControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatChannelController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"Inherited from Sequence.first(where:). ","kind":"symbol","title":"first(where:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/first(where:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.first(where:)."},{"rawIndexableTextContent":"An extra data. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/extraData","interfaceLanguage":"swift"}},"summary":"An extra data."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new reply message locally and schedules it for send.  Text of the message. Pins the new message. nil if should not be pinned. An array of the attachments for the message. Note: can be built-in types, custom attachment types conforming to AttachmentEnvelope protocol and ChatMessageAttachmentSeeds. Set this flag to true if you want the message to be also visible in the channel, not only in the response thread. An id of the message new message quotes. (inline reply) Additional extra data of the message object. Called when saving the message to the local DB finishes.","kind":"symbol","title":"createNewReply(text:pinning:attachments:mentionedUserIds:showReplyInChannel:isSilent:quotedMessageId:extraData:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/createNewReply(text:pinning:attachments:mentionedUserIds:showReplyInChannel:isSilent:quotedMessageId:extraData:completion:)","interfaceLanguage":"swift"}},"summary":"Creates a new reply message locally and schedules it for send."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"A set of users flagged by the user.  Discussion Please be aware that the value of this field is not persisted on the server, and is valid only locally for the current session.","kind":"symbol","title":"flaggedUsers","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/flaggedUsers","interfaceLanguage":"swift"}},"summary":"A set of users flagged by the user."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The queue which is used to perform callback calls. The default value is .main. ","kind":"symbol","title":"callbackQueue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/callbackQueue","interfaceLanguage":"swift"}},"summary":"The queue which is used to perform callback calls. The default value is .main."},{"rawIndexableTextContent":"true if the author of the message is the currently logged-in user. ","kind":"symbol","title":"isSentByCurrentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/isSentByCurrentUser","interfaceLanguage":"swift"}},"summary":"true if the author of the message is the currently logged-in user."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"A channel query. ","kind":"symbol","title":"ChannelQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery","interfaceLanguage":"swift"}},"summary":"A channel query."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStoreProvider\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The max message length. 5000 by default. ","kind":"symbol","title":"maxMessageLength","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/maxMessageLength","interfaceLanguage":"swift"}},"summary":"The max message length. 5000 by default."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Unflags the message this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"unflag(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/unflag(completion:)","interfaceLanguage":"swift"}},"summary":"Unflags the message this controller manages."},{"rawIndexableTextContent":"The controller changed the list of observed messages.  The controller emitting the change callback. The change to the list of messages.","kind":"symbol","title":"controller(_:didChangeMessages:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/controller(_:didChangeMessages:)","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed messages."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"The date the reaction was created. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/createdAt","interfaceLanguage":"swift"}},"summary":"The date the reaction was created."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"thai","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/thai","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The user who added a member to a channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who added a member to a channel."},{"rawIndexableTextContent":"Enables assertions thrown by the Stream SDK.  Discussion When set to false, a message will be logged on console, but the assertion will not be thrown.","kind":"symbol","title":"assertionsEnabled","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/StreamRuntimeCheck\/assertionsEnabled","interfaceLanguage":"swift"}},"summary":"Enables assertions thrown by the Stream SDK."},{"rawIndexableTextContent":"ChatUserControllerDelegate uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatUserControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatUserControllerDelegate uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The author. ","kind":"symbol","title":"author","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/author","interfaceLanguage":"swift"}},"summary":"The author."},{"rawIndexableTextContent":"ChatChannelMemberController is a controller class which allows mutating and observing changes of a specific chat member. ","kind":"symbol","title":"ChatChannelMemberController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController","interfaceLanguage":"swift"}},"summary":"ChatChannelMemberController is a controller class which allows mutating and observing changes of a specific chat member."},{"rawIndexableTextContent":"When used, the backend returns messages pinned earlier then the message with the given id.  Discussion When inclusive == true the results include the message with the given id.","kind":"symbol","title":"PinnedMessagesPagination.after(_:inclusive:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/after(_:inclusive:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages pinned earlier then the message with the given id."},{"rawIndexableTextContent":"Creates a new instance of Filter.  An operator which should be used for the filter. The operator string must start with $. The “left-hand” side of the filter. Specifies the name of the field the filter should match. The “right-hand” side of the filter. Specifies the value the filter should match. Discussion Learn more about how to create simple, advanced, and custom filters in our cheat sheet. Creating filters directly using the initializer is an advanced operation and should be done only in specific cases.","kind":"symbol","title":"init(operator:key:value:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/init(operator:key:value:)","interfaceLanguage":"swift"}},"summary":"Creates a new instance of Filter."},{"rawIndexableTextContent":"A delegate protocol some Controllers use to propagate the information about controller state changes. You can use it to let users know a certain activity is happening in the background, i.e. using a non-blocking activity indicator. ","kind":"symbol","title":"DataControllerStateDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate","interfaceLanguage":"swift"}},"summary":"A delegate protocol some Controllers use to propagate the information about controller state changes. You can use it to let users know a certain activity is happening in the background, i.e. using a non-blocking activity indicator."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A struct containing information about unread counts of channels and messages. ","kind":"symbol","title":"UnreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount","interfaceLanguage":"swift"}},"summary":"A struct containing information about unread counts of channels and messages."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The queue which is used to perform callback calls ","kind":"symbol","title":"callbackQueue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Controller\/callbackQueue","interfaceLanguage":"swift"}},"summary":"The queue which is used to perform callback calls"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"UnknownNotificationContent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownNotificationContent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from CustomDebugStringConvertible.debugDescription. ","kind":"symbol","title":"debugDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/debugDescription","interfaceLanguage":"swift"}},"summary":"Inherited from CustomDebugStringConvertible.debugDescription."},{"rawIndexableTextContent":"The token that can be used when user is unknown.  Discussion Is used by anonymous token provider.","kind":"symbol","title":"anonymous","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/anonymous","interfaceLanguage":"swift"}},"summary":"The token that can be used when user is unknown."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Init an attachment file type by mime type.  a mime type.","kind":"symbol","title":"init(mimeType:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/init(mimeType:)","interfaceLanguage":"swift"}},"summary":"Init an attachment file type by mime type."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The date a channel was hidden. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The date a channel was hidden."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"Sorting options.  Overview For example: ","kind":"symbol","title":"Sorting","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting","interfaceLanguage":"swift"}},"summary":"Sorting options."},{"rawIndexableTextContent":"ChatChannel specific local caching and model serialization settings. ","kind":"symbol","title":"ChatClientConfig.ChatChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel","interfaceLanguage":"swift"}},"summary":"ChatChannel specific local caching and model serialization settings."},{"rawIndexableTextContent":"Log level for any messages to be logged. Please check this Apple Logging Article to understand different logging levels. ","kind":"symbol","title":"LogLevel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel","interfaceLanguage":"swift"}},"summary":"Log level for any messages to be logged. Please check this Apple Logging Article to understand different logging levels."},{"rawIndexableTextContent":"A channel type title. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/title","interfaceLanguage":"swift"}},"summary":"A channel type title."},{"rawIndexableTextContent":"The current user. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent\/member","interfaceLanguage":"swift"}},"summary":"The current user."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A filter key for matching moderators of a channel. ","kind":"symbol","title":"isModerator","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/isModerator","interfaceLanguage":"swift"}},"summary":"A filter key for matching moderators of a channel."},{"rawIndexableTextContent":"A special event type which is only emitted by the SDK and never the backend. This event is emitted by TypingStartCleanupMiddleware to signal that a typing event must be cleaned up, due to timeout of that event. ","kind":"symbol","title":"CleanUpTypingEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CleanUpTypingEvent","interfaceLanguage":"swift"}},"summary":"A special event type which is only emitted by the SDK and never the backend. This event is emitted by TypingStartCleanupMiddleware to signal that a typing event must be cleaned up, due to timeout of that event."},{"rawIndexableTextContent":"The flag saying that channel history was cleared. ","kind":"symbol","title":"isHistoryCleared","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent\/isHistoryCleared","interfaceLanguage":"swift"}},"summary":"The flag saying that channel history was cleared."},{"rawIndexableTextContent":"The message delivery state for message that is being sent\/edited\/deleted. ","kind":"symbol","title":"pending","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/pending","interfaceLanguage":"swift"}},"summary":"The message delivery state for message that is being sent\/edited\/deleted."},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly inserted ChatChannel instance. This instance is not linked to the controller’s query. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly inserted ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldAddNewChannelToList:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:shouldAddNewChannelToList:)-13k90","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"Inherited from LogDestination.formatters. ","kind":"symbol","title":"formatters","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/formatters","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.formatters."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"Triggered when user starts\/stops typing in a channel. ","kind":"symbol","title":"TypingEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user starts\/stops typing in a channel."},{"rawIndexableTextContent":"A  title, usually the search request used to find the gif. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A  title, usually the search request used to find the gif."},{"rawIndexableTextContent":"The channel identifier a member was added to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier a member was added to."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from ExpressibleByArrayLiteral.ArrayLiteralElement. ","kind":"symbol","title":"LazyCachedMapCollection.ArrayLiteralElement","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/ArrayLiteralElement","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByArrayLiteral.ArrayLiteralElement."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The uploading state of the attachment.  Discussion Reflects uploading progress for local attachments that require file uploading. Is nil for local attachments that don’t need to be uploaded. Becomes nil when the message with the current attachment is sent.","kind":"symbol","title":"uploadingState","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/uploadingState","interfaceLanguage":"swift"}},"summary":"The uploading state of the attachment."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.nil","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/nil","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"The message pinning information. Is nil if the message is not pinned. ","kind":"symbol","title":"pinDetails","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/pinDetails","interfaceLanguage":"swift"}},"summary":"The message pinning information. Is nil if the message is not pinned."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"AttachmentAction.ActionStyle.primary","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/primary","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/LocalCaching-swift.struct\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message that was sent. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/message","interfaceLanguage":"swift"}},"summary":"The message that was sent."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"A Boolean value that returns wether pagination is finished ","kind":"symbol","title":"hasLoadedAllPreviousReplies","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/hasLoadedAllPreviousReplies","interfaceLanguage":"swift"}},"summary":"A Boolean value that returns wether pagination is finished"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.underestimatedCount. ","kind":"symbol","title":"underestimatedCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/underestimatedCount-4b4us","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.underestimatedCount."},{"rawIndexableTextContent":"The string representation of the API key ","kind":"symbol","title":"apiKeyString","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey\/apiKeyString","interfaceLanguage":"swift"}},"summary":"The string representation of the API key"},{"rawIndexableTextContent":"Sort channels by date they were created. ","kind":"symbol","title":"ChannelListSortingKey.createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/createdAt","interfaceLanguage":"swift"}},"summary":"Sort channels by date they were created."},{"rawIndexableTextContent":"The reaction added. ","kind":"symbol","title":"reaction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/reaction","interfaceLanguage":"swift"}},"summary":"The reaction added."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatPushNotificationInfo","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Hashable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/Hashable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The channel that was deleted ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel that was deleted"},{"rawIndexableTextContent":"Represents a payload for attachments with .media type. ","kind":"symbol","title":"AudioAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .media type."},{"rawIndexableTextContent":"The default reason the ban was created. ","kind":"symbol","title":"reason","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/reason","interfaceLanguage":"swift"}},"summary":"The default reason the ban was created."},{"rawIndexableTextContent":"A wrapper object for ChatChannelMemberListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatChannelMemberListController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChatChannelMemberListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Inherited from Collection.count. ","kind":"symbol","title":"count","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/count-x9x2","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.count."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns a publisher emitting a new value every time event of the given type is observed.  Return Value A publisher emitting a new value every time event of the given type is observed. An event type that will be observed.","kind":"symbol","title":"eventPublisher(_:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/eventPublisher(_:)","interfaceLanguage":"swift"}},"summary":"Returns a publisher emitting a new value every time event of the given type is observed."},{"rawIndexableTextContent":"When a user was removed from a channel. ","kind":"symbol","title":"notificationRemovedFromChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationRemovedFromChannel","interfaceLanguage":"swift"}},"summary":"When a user was removed from a channel."},{"rawIndexableTextContent":"An attachment type all MediaAttachmentPayload instances conform to. Is set to .audio. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all MediaAttachmentPayload instances conform to. Is set to .audio."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Sort channels by unread state. When using this sorting key, every unread channel weighs the same, so they’re sorted by updatedAt ","kind":"symbol","title":"ChannelListSortingKey.hasUnread","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/hasUnread","interfaceLanguage":"swift"}},"summary":"Sort channels by unread state. When using this sorting key, every unread channel weighs the same, so they’re sorted by updatedAt"},{"rawIndexableTextContent":"The controller received a MemberEvent related to the channel it observes. ","kind":"symbol","title":"channelController(_:didReceiveMemberEvent:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/channelController(_:didReceiveMemberEvent:)","interfaceLanguage":"swift"}},"summary":"The controller received a MemberEvent related to the channel it observes."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/WebSocket\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"Filter to match channels that are not related to any team. ","kind":"symbol","title":"noTeam","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/noTeam","interfaceLanguage":"swift"}},"summary":"Filter to match channels that are not related to any team."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.ClientIsNotInActiveMode","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ClientIsNotInActiveMode","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller received a change related to users typing in the channel it observes. ","kind":"symbol","title":"channelController(_:didChangeTypingUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didChangeTypingUsers:)-5pksj","interfaceLanguage":"swift"}},"summary":"The controller received a change related to users typing in the channel it observes."},{"rawIndexableTextContent":"When provided sorts pinned messages by pinned_at field. ","kind":"symbol","title":"pinnedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/pinnedAt","interfaceLanguage":"swift"}},"summary":"When provided sorts pinned messages by pinned_at field."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An event type. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/type","interfaceLanguage":"swift"}},"summary":"An event type."},{"rawIndexableTextContent":"Matches values with the specified prefix. ","kind":"symbol","title":"FilterOperator.autocomplete","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/autocomplete","interfaceLanguage":"swift"}},"summary":"Matches values with the specified prefix."},{"rawIndexableTextContent":"Toggle for showing log level in logs ","kind":"symbol","title":"showLevel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showLevel","interfaceLanguage":"swift"}},"summary":"Toggle for showing log level in logs"},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly inserted ChatChannel instance. This instance is not linked to the controller’s query. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly inserted ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldAddNewChannelToList:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controller(_:shouldAddNewChannelToList:)","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"Inherited from Sequence.formatted(). ","kind":"symbol","title":"formatted()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formatted()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.formatted()."},{"rawIndexableTextContent":"Connects the chat client the controller represents to the chat servers.  Called when the connection is established. If the connection fails, the completion is called with an error. Discussion When the connection is established, ChatClient starts receiving chat updates.","kind":"symbol","title":"connect(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connect(completion:)","interfaceLanguage":"swift"}},"summary":"Connects the chat client the controller represents to the chat servers."},{"rawIndexableTextContent":"ChatMessageController is a controller class which allows observing and mutating a chat message entity. ","kind":"symbol","title":"ChatMessageController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController","interfaceLanguage":"swift"}},"summary":"ChatMessageController is a controller class which allows observing and mutating a chat message entity."},{"rawIndexableTextContent":"An extra data. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/extraData","interfaceLanguage":"swift"}},"summary":"An extra data."},{"rawIndexableTextContent":"This enum describes the changes to a certain item when observing it. ","kind":"symbol","title":"EntityChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange","interfaceLanguage":"swift"}},"summary":"This enum describes the changes to a certain item when observing it."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"The user who stopped being a member. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who stopped being a member."},{"rawIndexableTextContent":"Sort channel members by name.  Discussion This option is heavy for the backend and can slow down API requests’ response time. If there’s no explicit requirement for this sorting option consider using a different one.","kind":"symbol","title":"ChannelMemberListSortingKey.name","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/name","interfaceLanguage":"swift"}},"summary":"Sort channel members by name."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"slovenian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/slovenian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Determines if URL enrichment enabled to show they as attachments. Enabled by default. ","kind":"symbol","title":"urlEnrichmentEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/urlEnrichmentEnabled","interfaceLanguage":"swift"}},"summary":"Determines if URL enrichment enabled to show they as attachments. Enabled by default."},{"rawIndexableTextContent":"Returns pretty ListChange description ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/description","interfaceLanguage":"swift"}},"summary":"Returns pretty ListChange description"},{"rawIndexableTextContent":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"CurrentChatUserController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Creates a new ChatUserController for the user with the provided userId.  Return Value A new instance of ChatUserController. The user identifier.","kind":"symbol","title":"userController(userId:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/userController(userId:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChatUserController for the user with the provided userId."},{"rawIndexableTextContent":"When a user rejected a channel invitation ","kind":"symbol","title":"notificationInviteRejected","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationInviteRejected","interfaceLanguage":"swift"}},"summary":"When a user rejected a channel invitation"},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"Start watching a channel  Called when the API call is finished. Called with Error if the remote update fails. Discussion Watching a channel is defined as observing notifications about this channel. Usually you don’t need to call this function since ChannelController watches channels by default. Please check documentation for more information.","kind":"symbol","title":"startWatching(isInRecoveryMode:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/startWatching(isInRecoveryMode:completion:)","interfaceLanguage":"swift"}},"summary":"Start watching a channel"},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"Combines the provided filters and matches the values not matched by all the filters. ","kind":"symbol","title":"nor(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/nor(_:)","interfaceLanguage":"swift"}},"summary":"Combines the provided filters and matches the values not matched by all the filters."},{"rawIndexableTextContent":"The type describing message delivery status. ","kind":"symbol","title":"MessageDeliveryStatus","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus","interfaceLanguage":"swift"}},"summary":"The type describing message delivery status."},{"rawIndexableTextContent":"A command name. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/name","interfaceLanguage":"swift"}},"summary":"A command name."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.ConnectionWasNotInitiated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionWasNotInitiated","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Describes user\/channel mute details. ","kind":"symbol","title":"MuteDetails","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails","interfaceLanguage":"swift"}},"summary":"Describes user\/channel mute details."},{"rawIndexableTextContent":"The method is invoked when an event is observed.  The events controller listening for the events. The observed event.","kind":"symbol","title":"eventsController(_:didReceiveEvent:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsControllerDelegate\/eventsController(_:didReceiveEvent:)","interfaceLanguage":"swift"}},"summary":"The method is invoked when an event is observed."},{"rawIndexableTextContent":"Check if the action is cancel button. ","kind":"symbol","title":"isCancel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/isCancel","interfaceLanguage":"swift"}},"summary":"Check if the action is cancel button."},{"rawIndexableTextContent":"Entity used for logging messages. ","kind":"symbol","title":"Logger","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger","interfaceLanguage":"swift"}},"summary":"Entity used for logging messages."},{"rawIndexableTextContent":"The user the status changed for ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user the status changed for"},{"rawIndexableTextContent":"The controller will update the list of observed channels.  The controller emitting the change callback.","kind":"symbol","title":"controllerWillChangeChannels(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controllerWillChangeChannels(_:)-69i31","interfaceLanguage":"swift"}},"summary":"The controller will update the list of observed channels."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"Specifies the visibility of deleted messages. ","kind":"symbol","title":"ChatClientConfig.DeletedMessageVisibility","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility","interfaceLanguage":"swift"}},"summary":"Specifies the visibility of deleted messages."},{"rawIndexableTextContent":"The replies to the message the controller represents.  Discussion To observe changes of the replies, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"replies","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/replies","interfaceLanguage":"swift"}},"summary":"The replies to the message the controller represents."},{"rawIndexableTextContent":"Loads next channels from backend.  Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextChannels(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/loadNextChannels(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next channels from backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"content","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownNotificationContent\/content","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNotificationContent\/message","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The identified of the channel the message belongs to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/cid","interfaceLanguage":"swift"}},"summary":"The identified of the channel the message belongs to."},{"rawIndexableTextContent":"If the message was deleted, this variable contains a timestamp of that event, otherwise nil. ","kind":"symbol","title":"deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/deletedAt","interfaceLanguage":"swift"}},"summary":"If the message was deleted, this variable contains a timestamp of that event, otherwise nil."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"An item was moved from fromIndex to toIndex. Moving an item also automatically mean you should reload its UI. ","kind":"symbol","title":"ListChange.move(_:fromIndex:toIndex:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/move(_:fromIndex:toIndex:)","interfaceLanguage":"swift"}},"summary":"An item was moved from fromIndex to toIndex. Moving an item also automatically mean you should reload its UI."},{"rawIndexableTextContent":"A payload that will exposed on attachment when the message is sent. ","kind":"symbol","title":"payload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload\/payload","interfaceLanguage":"swift"}},"summary":"A payload that will exposed on attachment when the message is sent."},{"rawIndexableTextContent":"Adds new reaction to the message this controller manages.  The reaction type. The reaction score. If set to true, new reaction will replace all reactions the user has (if any) on this message. The reaction extra data. The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"addReaction(_:score:enforceUnique:extraData:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/addReaction(_:score:enforceUnique:extraData:completion:)","interfaceLanguage":"swift"}},"summary":"Adds new reaction to the message this controller manages."},{"rawIndexableTextContent":"A type-erased version of ChannelModel<CustomData>. Not intended to be used directly. ","kind":"symbol","title":"AnyChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannel","interfaceLanguage":"swift"}},"summary":"A type-erased version of ChannelModel<CustomData>. Not intended to be used directly."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionWasNotInitiated\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"A type representing a chat message. ChatMessage is an immutable snapshot of a chat message entity at the given time. ","kind":"symbol","title":"ChatMessage","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage","interfaceLanguage":"swift"}},"summary":"A type representing a chat message. ChatMessage is an immutable snapshot of a chat message entity at the given time."},{"rawIndexableTextContent":"An error message generated as a result of a failed command. It is also ephemeral, as it is not stored in the channel history and is only delivered to one user. ","kind":"symbol","title":"MessageType.error","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/error","interfaceLanguage":"swift"}},"summary":"An error message generated as a result of a failed command. It is also ephemeral, as it is not stored in the channel history and is only delivered to one user."},{"rawIndexableTextContent":"Audio ","kind":"symbol","title":"AttachmentFileType.mp4","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/mp4","interfaceLanguage":"swift"}},"summary":"Audio"},{"rawIndexableTextContent":"The item was updated. ","kind":"symbol","title":"EntityChange.update(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/update(_:)","interfaceLanguage":"swift"}},"summary":"The item was updated."},{"rawIndexableTextContent":"If the message is authored by the current user this field contains the list of channel members who read this message (excluding the current user).  Discussion For the message authored by other members this field is always empty. The readBy loades and evaluates user models. If you’re interested only in count, it’s recommended to use readByCount instead of readBy.count for better performance.","kind":"symbol","title":"readBy","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/readBy","interfaceLanguage":"swift"}},"summary":"If the message is authored by the current user this field contains the list of channel members who read this message (excluding the current user)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The method is invoked when an event is observed.  The events controller listening for the events. The observed event.","kind":"symbol","title":"eventsController(_:didReceiveEvent:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/eventsController(_:didReceiveEvent:)","interfaceLanguage":"swift"}},"summary":"The method is invoked when an event is observed."},{"rawIndexableTextContent":"If the message is a reply and this flag is true, the message should be also shown in the channel, not only in the reply thread. ","kind":"symbol","title":"showReplyInChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/showReplyInChannel","interfaceLanguage":"swift"}},"summary":"If the message is a reply and this flag is true, the message should be also shown in the channel, not only in the reply thread."},{"rawIndexableTextContent":"A wrapper object for UserListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"EventsController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for UserListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatMessageSearchControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/ChatMessageSearchControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed a change in the ChatMessage its observes. ","kind":"symbol","title":"messageController(_:didChangeMessage:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeMessage:)-1q2uh","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatMessage its observes."},{"rawIndexableTextContent":"Types conforming to this protocol automatically exposes public dataStore variable. ","kind":"symbol","title":"DataStoreProvider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStoreProvider","interfaceLanguage":"swift"}},"summary":"Types conforming to this protocol automatically exposes public dataStore variable."},{"rawIndexableTextContent":"ChatUserListController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatUserListControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatUserListController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"An attachment type. There are some predefined types on backend but any type can be introduced and sent to backend. ","kind":"symbol","title":"AttachmentType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType","interfaceLanguage":"swift"}},"summary":"An attachment type. There are some predefined types on backend but any type can be introduced and sent to backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"dateFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/dateFormatter","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"functionName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/functionName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Read states of the users for this channel.  Discussion You can use this information to show to your users information about what messages were read by certain users.","kind":"symbol","title":"reads","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/reads","interfaceLanguage":"swift"}},"summary":"Read states of the users for this channel."},{"rawIndexableTextContent":"When a member was removed from a channel. ","kind":"symbol","title":"memberRemoved","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/memberRemoved","interfaceLanguage":"swift"}},"summary":"When a member was removed from a channel."},{"rawIndexableTextContent":"A possible additional local state of the message. Applies only for the messages of the current user. ","kind":"symbol","title":"LocalMessageState","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState","interfaceLanguage":"swift"}},"summary":"A possible additional local state of the message. Applies only for the messages of the current user."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The banned user ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyBannedEvent\/user","interfaceLanguage":"swift"}},"summary":"The banned user"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.WebSocket","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/WebSocket","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The channel identifer user is unbanned at. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifer user is unbanned at."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from CodingKey.init(stringValue:). ","kind":"symbol","title":"init(stringValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/init(stringValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from CodingKey.init(stringValue:)."},{"rawIndexableTextContent":"Teams the user belongs to.  Discussion You need to enable multi-tenancy if you want to use this, else it’ll be empty. Refer to docs for more info.","kind":"symbol","title":"teams","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/teams","interfaceLanguage":"swift"}},"summary":"Teams the user belongs to."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"A file size formatter. ","kind":"symbol","title":"sizeFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/sizeFormatter","interfaceLanguage":"swift"}},"summary":"A file size formatter."},{"rawIndexableTextContent":"A URL referencing to the local file that should be uploaded. ","kind":"symbol","title":"localFileURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload\/localFileURL","interfaceLanguage":"swift"}},"summary":"A URL referencing to the local file that should be uploaded."},{"rawIndexableTextContent":"An indicator whether the message is flagged by the current user.  Discussion Please be aware that the value of this field is not persisted on the server, and is valid only locally for the current session.","kind":"symbol","title":"isFlaggedByCurrentUser","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/isFlaggedByCurrentUser","interfaceLanguage":"swift"}},"summary":"An indicator whether the message is flagged by the current user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Triggered when a channel is updated. ","kind":"symbol","title":"ChannelUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is updated."},{"rawIndexableTextContent":"Updated channel with new data.  New team. New members. New invites. New ExtraData. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"updateChannel(name:imageURL:team:members:invites:extraData:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/updateChannel(name:imageURL:team:members:invites:extraData:completion:)","interfaceLanguage":"swift"}},"summary":"Updated channel with new data."},{"rawIndexableTextContent":"Inherited from Sequence.joined(separator:). ","kind":"symbol","title":"joined(separator:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/joined(separator:)-yjdl","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.joined(separator:)."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/pagination","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChatMessageSearchController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatMessageSearchControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatMessageSearchController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly updated ChatChannel instance. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly updated ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldListUpdatedChannel:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:shouldListUpdatedChannel:)-3vn3j","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"Inherited from Sequence.lexicographicallyPrecedes(_:by:). ","kind":"symbol","title":"lexicographicallyPrecedes(_:by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lexicographicallyPrecedes(_:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.lexicographicallyPrecedes(_:by:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"OptionSet Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/OptionSet-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type representing a chat message attachment. ChatMessageAttachment<Payload> is an immutable snapshot of message attachment at the given time. ","kind":"symbol","title":"ChatMessageAttachment","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment","interfaceLanguage":"swift"}},"summary":"A type representing a chat message attachment. ChatMessageAttachment<Payload> is an immutable snapshot of message attachment at the given time."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(from:)-8o852","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"ChatChannelMemberListController is a controller class which allows observing a list of chat users based on the provided query. ","kind":"symbol","title":"ChatChannelMemberListController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController","interfaceLanguage":"swift"}},"summary":"ChatChannelMemberListController is a controller class which allows observing a list of chat users based on the provided query."},{"rawIndexableTextContent":"Triggered when a channel the current user is member of is marked as read. ","kind":"symbol","title":"NotificationMarkReadEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel the current user is member of is marked as read."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionNotSuccessful\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"The latest reactions to the message created by any user.  Discussion There can be 10 reactions at max. The latestReactions property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"latestReactions","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/latestReactions","interfaceLanguage":"swift"}},"summary":"The latest reactions to the message created by any user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"expiration","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/expiration","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.last(where:). ","kind":"symbol","title":"last(where:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/last(where:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.last(where:)."},{"rawIndexableTextContent":"Inherited from Hashable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from Hashable.hash(into:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"korean","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/korean","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Describes the ordering the replies are presented.  Discussion ⚠️ Changing this value doesn’t trigger delegate methods. You should reload your UI manually after changing the listOrdering value to reflect the changes. Further updates to the replies will be delivered using the delegate methods, as usual.","kind":"symbol","title":"listOrdering","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/listOrdering","interfaceLanguage":"swift"}},"summary":"Describes the ordering the replies are presented."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(from:)-144db","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed changes in the Messages of the observed channel. ","kind":"symbol","title":"channelController(_:didUpdateMessages:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/channelController(_:didUpdateMessages:)","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the Messages of the observed channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.zip","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/zip","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.xls","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/xls","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"A publisher emitting a new value every time an event is observed. ","kind":"symbol","title":"allEventsPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/allEventsPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time an event is observed."},{"rawIndexableTextContent":"The user who deleted the channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who deleted the channel."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the attachments of .video type.  Discussion The videoAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"videoAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/videoAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .video type."},{"rawIndexableTextContent":"The use who updated the message. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The use who updated the message."},{"rawIndexableTextContent":"Unpins the message this controller manages.  Discussion completion: A completion block with an error if the request was failed.","kind":"symbol","title":"unpin(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/unpin(completion:)","interfaceLanguage":"swift"}},"summary":"Unpins the message this controller manages."},{"rawIndexableTextContent":"A type representing a chat channel. ChatChannel is an immutable snapshot of a channel entity at the given time. ","kind":"symbol","title":"ChatChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel","interfaceLanguage":"swift"}},"summary":"A type representing a chat channel. ChatChannel is an immutable snapshot of a channel entity at the given time."},{"rawIndexableTextContent":"The channel identifer user is banned at. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifer user is banned at."},{"rawIndexableTextContent":"When a user starts watching a channel. ","kind":"symbol","title":"userStartWatching","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userStartWatching","interfaceLanguage":"swift"}},"summary":"When a user starts watching a channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"norwegian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/norwegian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"spanishMexico","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/spanishMexico","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.forEach(_:). ","kind":"symbol","title":"forEach(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/forEach(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.forEach(_:)."},{"rawIndexableTextContent":"The message which updated the channel. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent\/message","interfaceLanguage":"swift"}},"summary":"The message which updated the channel."},{"rawIndexableTextContent":"Log formatters to be applied in order before logs are outputted. Defaults to empty (no formatters). Please see LogFormatter for more info. ","kind":"symbol","title":"formatters","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/formatters","interfaceLanguage":"swift"}},"summary":"Log formatters to be applied in order before logs are outputted. Defaults to empty (no formatters). Please see LogFormatter for more info."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"A query is used for querying specific users from backend. You can specify filter, sorting and pagination. ","kind":"symbol","title":"UserListQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery","interfaceLanguage":"swift"}},"summary":"A query is used for querying specific users from backend. You can specify filter, sorting and pagination."},{"rawIndexableTextContent":"The controller observed a change in the Channel entity. ","kind":"symbol","title":"channelController(_:didUpdateChannel:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didUpdateChannel:)-7y82o","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the Channel entity."},{"rawIndexableTextContent":"Inherited from Sequence.withContiguousStorageIfAvailable(_:). ","kind":"symbol","title":"withContiguousStorageIfAvailable(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.withContiguousStorageIfAvailable(_:)."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(from:)-hi47","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from OptionSet.contains(_:). ","kind":"symbol","title":"contains(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/contains(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.contains(_:)."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isDisjoint(with:). ","kind":"symbol","title":"isDisjoint(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isDisjoint(with:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isDisjoint(with:)."},{"rawIndexableTextContent":"Create an AttachmentType from a file extension.  Discussion If we know the extension of a file, it is possible to resolve the attachment type through its extension\/mime-type.","kind":"symbol","title":"init(fileExtension:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(fileExtension:)","interfaceLanguage":"swift"}},"summary":"Create an AttachmentType from a file extension."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The unique identifier of the user. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/id-9djgb","interfaceLanguage":"swift"}},"summary":"The unique identifier of the user."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","kind":"symbol","title":"sorted(using:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/sorted(using:)-5lrze","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.sorted(using:)."},{"rawIndexableTextContent":"A number of members for the channel to be retrieved. ","kind":"symbol","title":"membersLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/membersLimit","interfaceLanguage":"swift"}},"summary":"A number of members for the channel to be retrieved."},{"rawIndexableTextContent":"The team the channel belongs to.  Discussion You need to enable multi-tenancy if you want to use this otherwise it is always nil Refer to docs for more info.","kind":"symbol","title":"team","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/team","interfaceLanguage":"swift"}},"summary":"The team the channel belongs to."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"The channel identifier the message lives in. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the message lives in."},{"rawIndexableTextContent":"Inherited from SetAlgebra.init(arrayLiteral:). ","kind":"symbol","title":"init(arrayLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/init(arrayLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.init(arrayLiteral:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"tagalog","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/tagalog","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter key for querying hidden channels. ","kind":"symbol","title":"hidden","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/hidden","interfaceLanguage":"swift"}},"summary":"A filter key for querying hidden channels."},{"rawIndexableTextContent":"Inherited from OptionSet.intersection(_:). ","kind":"symbol","title":"intersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/intersection(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.intersection(_:)."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","kind":"symbol","title":"sorted(using:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/sorted(using:)-50f8e","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.sorted(using:)."},{"rawIndexableTextContent":"The type of the channel the id belongs to. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/type","interfaceLanguage":"swift"}},"summary":"The type of the channel the id belongs to."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyBannedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"Filter to match channels containing at least one message. ","kind":"symbol","title":"nonEmpty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/nonEmpty","interfaceLanguage":"swift"}},"summary":"Filter to match channels containing at least one message."},{"rawIndexableTextContent":"Indicates whether the message is pinned or not. ","kind":"symbol","title":"isPinned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/isPinned","interfaceLanguage":"swift"}},"summary":"Indicates whether the message is pinned or not."},{"rawIndexableTextContent":"Matches values that exist\/don’t exist based on the specified boolean value. ","kind":"symbol","title":"FilterOperator.exists","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/exists","interfaceLanguage":"swift"}},"summary":"Matches values that exist\/don’t exist based on the specified boolean value."},{"rawIndexableTextContent":"If set to true, the ChatClient will try to stay connected while app is backgrounded. If set to false, websocket disconnects immediately when app is backgrounded.  Discussion This flag aims to reduce unnecessary reconnections while quick app switches, like when a user just checks a notification or another app. ChatClient starts a background task to keep the connection alive, and disconnects when background task expires. ChatClient tries to stay connected while in background up to 5 minutes. Usually, disconnection occurs around 2-3 minutes. If you’re using manual connection flow (shouldConnectAutomatically set to false), this flag is ineffective. You should handle connection manually when sending app to background or opening app from background. Default value is true","kind":"symbol","title":"staysConnectedInBackground","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/staysConnectedInBackground","interfaceLanguage":"swift"}},"summary":"If set to true, the ChatClient will try to stay connected while app is backgrounded. If set to false, websocket disconnects immediately when app is backgrounded."},{"rawIndexableTextContent":"The # of channel watchers. ","kind":"symbol","title":"watcherCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/watcherCount","interfaceLanguage":"swift"}},"summary":"The # of channel watchers."},{"rawIndexableTextContent":"Inherited from Sequence.lazy. ","kind":"symbol","title":"lazy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lazy","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.lazy."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"text","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/text","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"LogDestination Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/LogDestination-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The date of the last message in the channel. ","kind":"symbol","title":"lastMessageAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/lastMessageAt","interfaceLanguage":"swift"}},"summary":"The date of the last message in the channel."},{"rawIndexableTextContent":"The query specifying sorting and filtering for the list of channel members. ","kind":"symbol","title":"query","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/query","interfaceLanguage":"swift"}},"summary":"The query specifying sorting and filtering for the list of channel members."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"The id of the message the attachments belongs to. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/messageId","interfaceLanguage":"swift"}},"summary":"The id of the message the attachments belongs to."},{"rawIndexableTextContent":"A message. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/message","interfaceLanguage":"swift"}},"summary":"A message."},{"rawIndexableTextContent":"The current device of the user. nil if no current device is assigned. ","kind":"symbol","title":"currentDevice","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/currentDevice","interfaceLanguage":"swift"}},"summary":"The current device of the user. nil if no current device is assigned."},{"rawIndexableTextContent":"The subsystem responsible for database operations. ","kind":"symbol","title":"database","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/database","interfaceLanguage":"swift"}},"summary":"The subsystem responsible for database operations."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"Name for this channel. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/name","interfaceLanguage":"swift"}},"summary":"Name for this channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(from:)-8flex","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Triggered when a channel is deleted, this event is delivered to all channel members ","kind":"symbol","title":"NotificationChannelDeletedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is deleted, this event is delivered to all channel members"},{"rawIndexableTextContent":"A title, usually the name of the image. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A title, usually the name of the image."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"AnyChatMessageAttachment","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChatMessageAttachment","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/FetchFailed\/localizedDescription-7xswn","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.ods","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/ods","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"The controller observed a change in the ChatUser entity. ","kind":"symbol","title":"userController(_:didUpdateUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate\/userController(_:didUpdateUser:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatUser entity."},{"rawIndexableTextContent":"Inherited from ConnectionEvent.connectionId. ","kind":"symbol","title":"connectionId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HealthCheckEvent\/connectionId","interfaceLanguage":"swift"}},"summary":"Inherited from ConnectionEvent.connectionId."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"StreamRuntimeCheck","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/StreamRuntimeCheck","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"A filter key for matching the teams value. ","kind":"symbol","title":"teams","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/teams","interfaceLanguage":"swift"}},"summary":"A filter key for matching the teams value."},{"rawIndexableTextContent":"Updates the current user data.  Optionally provide a new name to be updated. Optionally provide a new image to be updated. Optionally provide new user extra data to be updated. Called when user is successfuly updated, or with error. Discussion By default all data is nil, and it won’t be updated unless a value is provided.","kind":"symbol","title":"updateUserData(name:imageURL:userExtraData:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/updateUserData(name:imageURL:userExtraData:completion:)","interfaceLanguage":"swift"}},"summary":"Updates the current user data."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"polish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/polish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(pageSize:offset:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/init(pageSize:offset:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An array of commands, e.g. \/giphy. ","kind":"symbol","title":"commands","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/commands","interfaceLanguage":"swift"}},"summary":"An array of commands, e.g. \/giphy."},{"rawIndexableTextContent":"A filter key for matching the createdAt value. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/createdAt-2nrmv","interfaceLanguage":"swift"}},"summary":"A filter key for matching the createdAt value."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"A sorting direction. ","kind":"symbol","title":"direction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/direction","interfaceLanguage":"swift"}},"summary":"A sorting direction."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"french","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/french","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Marks all channels for a user as read.  Called when the API call is finished. Called with Error if the remote update fails.","kind":"symbol","title":"markAllRead(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/markAllRead(completion:)","interfaceLanguage":"swift"}},"summary":"Marks all channels for a user as read."},{"rawIndexableTextContent":"A type alias for attachment with VideoAttachmentPayload payload type.  Discussion The ChatMessageVideoAttachment attachment will be added to the message automatically if the message was sent with attached AnyAttachmentPayload created with local URL and .video attachment type.","kind":"symbol","title":"ChatMessageVideoAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageVideoAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with VideoAttachmentPayload payload type."},{"rawIndexableTextContent":"A last message date. ","kind":"symbol","title":"ChannelCodingKeys.lastMessageAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/lastMessageAt","interfaceLanguage":"swift"}},"summary":"A last message date."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Error Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Error-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A unique identifier of a device. ","kind":"symbol","title":"DeviceId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DeviceId","interfaceLanguage":"swift"}},"summary":"A unique identifier of a device."},{"rawIndexableTextContent":"Creates an instance of AnyAttachmentPayload with the given payload.  The payload to have the message attachment with. Discussion This initializer should only be used for attachments already uploaded or not requiring uploading. Please use init(localFileURL: initializer for attachments requiring uploading. If attached to the new message the attachment with the given payload will be immediately available on ChatMessage with the uploadingState == nil since it doesn’t require prior uploading.","kind":"symbol","title":"init(payload:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload\/init(payload:)","interfaceLanguage":"swift"}},"summary":"Creates an instance of AnyAttachmentPayload with the given payload."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(source:map:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/init(source:map:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches at least one of the values specified in an array. ","kind":"symbol","title":"FilterOperator.or","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/or","interfaceLanguage":"swift"}},"summary":"Matches at least one of the values specified in an array."},{"rawIndexableTextContent":"Sort users by last activity date. ","kind":"symbol","title":"UserListSortingKey.lastActivityAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/lastActivityAt","interfaceLanguage":"swift"}},"summary":"Sort users by last activity date."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(cid:messageId:index:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/init(cid:messageId:index:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object for ChatUserController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatUserController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChatUserController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The cid of the channel the attachment belongs to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/cid","interfaceLanguage":"swift"}},"summary":"The cid of the channel the attachment belongs to."},{"rawIndexableTextContent":"The current state of the Controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the Controller."},{"rawIndexableTextContent":"Toggle for showing file name in logs ","kind":"symbol","title":"showFileName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showFileName","interfaceLanguage":"swift"}},"summary":"Toggle for showing file name in logs"},{"rawIndexableTextContent":"Determines if events are fired for connecting and disconnecting to a chat. Enabled by default. ","kind":"symbol","title":"connectEventsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/connectEventsEnabled","interfaceLanguage":"swift"}},"summary":"Determines if events are fired for connecting and disconnecting to a chat. Enabled by default."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"LogFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogFormatter","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Limit the max number of messages included in ChatChannel.latestMessages. ","kind":"symbol","title":"latestMessagesLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel\/latestMessagesLimit","interfaceLanguage":"swift"}},"summary":"Limit the max number of messages included in ChatChannel.latestMessages."},{"rawIndexableTextContent":"The total number of unread messages in the channel. ","kind":"symbol","title":"messages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/messages","interfaceLanguage":"swift"}},"summary":"The total number of unread messages in the channel."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isSubset(of:). ","kind":"symbol","title":"isSubset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isSubset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isSubset(of:)."},{"rawIndexableTextContent":"Triggered when a channel member is updated. ","kind":"symbol","title":"MemberUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel member is updated."},{"rawIndexableTextContent":"Loads a current user model with a matching id from the local data store.  Return Value If there’s a current user object in the locally cached data, returns the matching model object. If a user object doesn’t exist locally, returns nil. Discussion If the data doesn’t exist locally, it’s recommended to use controllers to fetch data from remote servers. Warning: Should be called on the main thread only.","kind":"symbol","title":"currentUser()","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore\/currentUser()","interfaceLanguage":"swift"}},"summary":"Loads a current user model with a matching id from the local data store."},{"rawIndexableTextContent":"The date the membership was updated for the last time. ","kind":"symbol","title":"memberUpdatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/memberUpdatedAt","interfaceLanguage":"swift"}},"summary":"The date the membership was updated for the last time."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSubset(of:). ","kind":"symbol","title":"isStrictSubset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isStrictSubset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isStrictSubset(of:)."},{"rawIndexableTextContent":"The read channel identifier. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/cid","interfaceLanguage":"swift"}},"summary":"The read channel identifier."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"The inviter. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/user","interfaceLanguage":"swift"}},"summary":"The inviter."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"custom","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo\/custom","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type of the message. ","kind":"symbol","title":"MessageType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType","interfaceLanguage":"swift"}},"summary":"A type of the message."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"New messages appears on the top of the list. ","kind":"symbol","title":"MessageOrdering.topToBottom","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering\/topToBottom","interfaceLanguage":"swift"}},"summary":"New messages appears on the top of the list."},{"rawIndexableTextContent":"If users are allowed to add reactions to messages. Enabled by default. ","kind":"symbol","title":"reactionsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/reactionsEnabled","interfaceLanguage":"swift"}},"summary":"If users are allowed to add reactions to messages. Enabled by default."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A filter key for matching the team value. ","kind":"symbol","title":"team","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/team","interfaceLanguage":"swift"}},"summary":"A filter key for matching the team value."},{"rawIndexableTextContent":"Creates a new ChatUserSearchController with the provided user query.  Return Value A new instance of ChatUserSearchController. The query specify the filter and sorting of the users the controller should fetch.","kind":"symbol","title":"userSearchController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/userSearchController()","interfaceLanguage":"swift"}},"summary":"Creates a new ChatUserSearchController with the provided user query."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedUploadableAttachmentType\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Loads previous messages from the backend.  ID of the last fetched message. You will get messages older than the provided ID. In case no replies are fetched you will get the first limit number of replies. Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadPreviousReplies(before:limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/loadPreviousReplies(before:limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads previous messages from the backend."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"LogConfig","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"Matches values that are less than or equal to a specified value. ","kind":"symbol","title":"FilterOperator.lessOrEqual","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/lessOrEqual","interfaceLanguage":"swift"}},"summary":"Matches values that are less than or equal to a specified value."},{"rawIndexableTextContent":"Subsystems for the logger ","kind":"symbol","title":"subsystems","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/subsystems","interfaceLanguage":"swift"}},"summary":"Subsystems for the logger"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Apply formatters to the log message to be outputted Be aware that formatters are order dependent.  Return Value Formatted log message, formatted by all formatters in order. Log details to be passed on to formatters. Log message to be formatted","kind":"symbol","title":"applyFormatters(logDetails:message:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/applyFormatters(logDetails:message:)","interfaceLanguage":"swift"}},"summary":"Apply formatters to the log message to be outputted Be aware that formatters are order dependent."},{"rawIndexableTextContent":"A type all events holding this payload have. ","kind":"symbol","title":"eventType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CustomEventPayload\/eventType","interfaceLanguage":"swift"}},"summary":"A type all events holding this payload have."},{"rawIndexableTextContent":"Mutes the channel this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"muteChannel(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/muteChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Mutes the channel this controller manages."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatPushNotificationContent.message(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent\/message(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.subscript(_:). ","kind":"symbol","title":"subscript(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/subscript(_:)-85kh6","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.subscript(_:)."},{"rawIndexableTextContent":"A link to the file. ","kind":"symbol","title":"assetURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/assetURL","interfaceLanguage":"swift"}},"summary":"A link to the file."},{"rawIndexableTextContent":"Inherited from SetAlgebra.subtracting(_:). ","kind":"symbol","title":"subtracting(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/subtracting(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.subtracting(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A user that connected using anonymous authentication. ","kind":"symbol","title":"anonymous","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/anonymous","interfaceLanguage":"swift"}},"summary":"A user that connected using anonymous authentication."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter key for matching the isAnonymous value. ","kind":"symbol","title":"isAnonymous","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/isAnonymous","interfaceLanguage":"swift"}},"summary":"A filter key for matching the isAnonymous value."},{"rawIndexableTextContent":"The APIKey unique for your chat app.  Discussion The API key can be obtained by registering on [our website](https:\/\/getstream.io\/chat\/).","kind":"symbol","title":"apiKey","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/apiKey","interfaceLanguage":"swift"}},"summary":"The APIKey unique for your chat app."},{"rawIndexableTextContent":"Inherited from LogDestination.showFunctionName. ","kind":"symbol","title":"showFunctionName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showFunctionName","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showFunctionName."},{"rawIndexableTextContent":"Set the delegate of CurrentUserController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of CurrentUserController to observe the changes in the system."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"apn","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/apn","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"An original URL that was included into the message text and then enriched. ","kind":"symbol","title":"originalURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/originalURL","interfaceLanguage":"swift"}},"summary":"An original URL that was included into the message text and then enriched."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from OptionSet.formSymmetricDifference(_:). ","kind":"symbol","title":"formSymmetricDifference(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/formSymmetricDifference(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formSymmetricDifference(_:)."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.last. ","kind":"symbol","title":"last","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/last","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.last."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChannelMemberListSortingKey.createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/createdAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A date when the message was updated last time. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/updatedAt","interfaceLanguage":"swift"}},"summary":"A date when the message was updated last time."},{"rawIndexableTextContent":"Query options. ","kind":"symbol","title":"options","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/options","interfaceLanguage":"swift"}},"summary":"Query options."},{"rawIndexableTextContent":"Matches values that are greater than a specified value. ","kind":"symbol","title":"greater(_:than:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/greater(_:than:)","interfaceLanguage":"swift"}},"summary":"Matches values that are greater than a specified value."},{"rawIndexableTextContent":"The channels matching the query. ","kind":"symbol","title":"channels","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/channels","interfaceLanguage":"swift"}},"summary":"The channels matching the query."},{"rawIndexableTextContent":"The users matching the query of this controller.  Discussion To observe changes of the users, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"users","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/users","interfaceLanguage":"swift"}},"summary":"The users matching the query of this controller."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from LogDestination.dateFormatter. ","kind":"symbol","title":"dateFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/dateFormatter","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.dateFormatter."},{"rawIndexableTextContent":"The default value representing no unread channels and messages. ","kind":"symbol","title":"noUnread","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/noUnread","interfaceLanguage":"swift"}},"summary":"The default value representing no unread channels and messages."},{"rawIndexableTextContent":"API client that handles working with content (e.g. uploading attachments) ","kind":"symbol","title":"CDNClient","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CDNClient","interfaceLanguage":"swift"}},"summary":"API client that handles working with content (e.g. uploading attachments)"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"czech","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/czech","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A RawJSON type. Used to store and operate objects of unknown structure that’s not possible to decode. https:\/\/forums.swift.org\/t\/new-unevaluated-type-for-decoder-to-allow-later-re-encoding-of-data-with-unknown-structure\/11117 ","kind":"symbol","title":"RawJSON","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON","interfaceLanguage":"swift"}},"summary":"A RawJSON type. Used to store and operate objects of unknown structure that’s not possible to decode. https:\/\/forums.swift.org\/t\/new-unevaluated-type-for-decoder-to-allow-later-re-encoding-of-data-with-unknown-structure\/11117"},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"The membership information of the current user. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/member","interfaceLanguage":"swift"}},"summary":"The membership information of the current user."},{"rawIndexableTextContent":"Additional data associated with the channel. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/extraData","interfaceLanguage":"swift"}},"summary":"Additional data associated with the channel."},{"rawIndexableTextContent":"Read-only collection that applies transformation to element on first access.  Overview Compared to LazyMapCollection does not evaluate the whole collection on count call.","kind":"symbol","title":"LazyCachedMapCollection","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection","interfaceLanguage":"swift"}},"summary":"Read-only collection that applies transformation to element on first access."},{"rawIndexableTextContent":"A publisher emitting a new value every time the connection status changes. ","kind":"symbol","title":"connectionStatusPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatusPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the connection status changes."},{"rawIndexableTextContent":"A set of channels muted by the current user.  Discussion The mutedChannels property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"mutedChannels","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/mutedChannels","interfaceLanguage":"swift"}},"summary":"A set of channels muted by the current user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"readAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/readAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Init a channel query.  a channel cid. a page size for pagination. the pagination configuration. a number of members for the channel  to be retrieved. a number of watchers for the channel to be retrieved.","kind":"symbol","title":"init(cid:pageSize:paginationParameter:membersLimit:watchersLimit:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/init(cid:pageSize:paginationParameter:membersLimit:watchersLimit:)","interfaceLanguage":"swift"}},"summary":"Init a channel query."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isEnabled(level:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/isEnabled(level:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessagesPagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When used, the backend returns messages pinned at around the given timestamp. ","kind":"symbol","title":"PinnedMessagesPagination.aroundTimestamp(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/aroundTimestamp(_:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages pinned at around the given timestamp."},{"rawIndexableTextContent":"Triggered when the current user is removed from a channel member list. ","kind":"symbol","title":"NotificationRemovedFromChannelEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent","interfaceLanguage":"swift"}},"summary":"Triggered when the current user is removed from a channel member list."},{"rawIndexableTextContent":"The message a reaction is added to. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/message","interfaceLanguage":"swift"}},"summary":"The message a reaction is added to."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionWasNotInitiated\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Created a new Token instance.  The JWT string value. It must be in valid format and contain user_id in payload.","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Created a new Token instance."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatChannelControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/ChatChannelControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"TokenProvider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TokenProvider","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter key for matching the id value. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/id","interfaceLanguage":"swift"}},"summary":"A filter key for matching the id value."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from CodingKey.init(intValue:). ","kind":"symbol","title":"init(intValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/init(intValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from CodingKey.init(intValue:)."},{"rawIndexableTextContent":"The folder ChatClient uses to store its local cache files. ","kind":"symbol","title":"localStorageFolderURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/localStorageFolderURL","interfaceLanguage":"swift"}},"summary":"The folder ChatClient uses to store its local cache files."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(prefixes:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PrefixLogFormatter\/init(prefixes:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Init an attachment file.  a file type. a file size. a mime type.","kind":"symbol","title":"init(type:size:mimeType:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/init(type:size:mimeType:)","interfaceLanguage":"swift"}},"summary":"Init an attachment file."},{"rawIndexableTextContent":"Toggle for showing date in logs ","kind":"symbol","title":"showDate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showDate","interfaceLanguage":"swift"}},"summary":"Toggle for showing date in logs"},{"rawIndexableTextContent":"Creates a new MessageController for the message with the provided id.  Return Value A new instance of MessageController. The channel identifier the message relates to. The message identifier.","kind":"symbol","title":"messageController(cid:messageId:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/messageController(cid:messageId:)","interfaceLanguage":"swift"}},"summary":"Creates a new MessageController for the message with the provided id."},{"rawIndexableTextContent":"Toggle for showing function name in logs ","kind":"symbol","title":"showFunctionName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showFunctionName","interfaceLanguage":"swift"}},"summary":"Toggle for showing function name in logs"},{"rawIndexableTextContent":"The unread counts of the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts of the current user."},{"rawIndexableTextContent":"When used, the backend returns messages pinned later than the given timestamp.  Discussion When inclusive == true the results include the message pinned at the given timestamp.","kind":"symbol","title":"PinnedMessagesPagination.later(_:inclusive:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/later(_:inclusive:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages pinned later than the given timestamp."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"wrappedValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic\/wrappedValue","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches values that are less than a specified value. ","kind":"symbol","title":"FilterOperator.less","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/less","interfaceLanguage":"swift"}},"summary":"Matches values that are less than a specified value."},{"rawIndexableTextContent":"The current result of messages. ","kind":"symbol","title":"messages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/messages","interfaceLanguage":"swift"}},"summary":"The current result of messages."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"A filter for the query (see Filter). ","kind":"symbol","title":"filter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/filter","interfaceLanguage":"swift"}},"summary":"A filter for the query (see Filter)."},{"rawIndexableTextContent":"Connects anonymous user  The completion that will be called once the first user session for the given token is setup.","kind":"symbol","title":"connectAnonymousUser(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/connectAnonymousUser(completion:)","interfaceLanguage":"swift"}},"summary":"Connects anonymous user"},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"This is the default role assigned to any member. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/member","interfaceLanguage":"swift"}},"summary":"This is the default role assigned to any member."},{"rawIndexableTextContent":"Entity for identifying which subsystem the log message comes from. ","kind":"symbol","title":"LogSubsystem","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem","interfaceLanguage":"swift"}},"summary":"Entity for identifying which subsystem the log message comes from."},{"rawIndexableTextContent":"Creates a ChatChannelController that will create a new channel with the provided members without having to specify the channel id explicitly. This is great for direct message channels because the channel should be uniquely identified by its members. If the channel for these members already exist, it will be reused.  Return Value A new instance of ChatChannelController. Members for the new channel. Must not be empty. The type of the channel. If set to true the current user will be included into the channel. Is true by default. Describes the ordering the messages are presented. The new channel name. The new channel avatar URL. Team for the new channel. Extra data for the new channel. The channel list query the channel this controller represents is part of. Discussion It’s safe to call this method for already existing channels. However, if you queried the channel before and you’re sure it exists locally, it can be faster and more convenient to use channelController(for cid: ChannelId) to create a controller for it.","kind":"symbol","title":"channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","interfaceLanguage":"swift"}},"summary":"Creates a ChatChannelController that will create a new channel with the provided members without having to specify the channel id explicitly. This is great for direct message channels because the channel should be uniquely identified by its members. If the channel for these members already exist, it will be reused."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"A title (e.g video name in case of enriched YouTube link or song name in case of Spotify link). ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A title (e.g video name in case of enriched YouTube link or song name in case of Spotify link)."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(by:). ","kind":"symbol","title":"sorted(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/sorted(by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.sorted(by:)."},{"rawIndexableTextContent":"The ID of the parent message, if the message is a reply, otherwise nil. ","kind":"symbol","title":"parentMessageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/parentMessageId","interfaceLanguage":"swift"}},"summary":"The ID of the parent message, if the message is a reply, otherwise nil."},{"rawIndexableTextContent":"A link to gif file. ","kind":"symbol","title":"previewURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/previewURL","interfaceLanguage":"swift"}},"summary":"A link to gif file."},{"rawIndexableTextContent":"The date the user info was updated the last time. ","kind":"symbol","title":"userUpdatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/userUpdatedAt","interfaceLanguage":"swift"}},"summary":"The date the user info was updated the last time."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed a change in the channel watcher list. ","kind":"symbol","title":"channelWatcherListController(_:didChangeWatchers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/channelWatcherListController(_:didChangeWatchers:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the channel watcher list."},{"rawIndexableTextContent":"Sends the stop typing event.  a completion block with an error if the request was failed. Discussion For the majority of cases, you don’t need to call sendStopTypingEvent directly. Instead, use sendKeystrokeEvent method and call it every time the user presses a key. The controller will manage sendStartTypingEvent\/sendStopTypingEvent calls automatically.","kind":"symbol","title":"sendStopTypingEvent(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStopTypingEvent(completion:)","interfaceLanguage":"swift"}},"summary":"Sends the stop typing event."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"If typing event happened in the message thread, this field contains thread root message identifier. ","kind":"symbol","title":"parentId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/parentId","interfaceLanguage":"swift"}},"summary":"If typing event happened in the message thread, this field contains thread root message identifier."},{"rawIndexableTextContent":"The number of unread messages across all channels. ","kind":"symbol","title":"messages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/messages","interfaceLanguage":"swift"}},"summary":"The number of unread messages across all channels."},{"rawIndexableTextContent":"Returns true if the channel was deleted. ","kind":"symbol","title":"isDeleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isDeleted","interfaceLanguage":"swift"}},"summary":"Returns true if the channel was deleted."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from Sequence.max(by:). ","kind":"symbol","title":"max(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/max(by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.max(by:)."},{"rawIndexableTextContent":"The ChannelId of the channel. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/cid","interfaceLanguage":"swift"}},"summary":"The ChannelId of the channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(client:content:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatRemoteNotificationHandler\/init(client:content:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An enum with possible operators to use in filters. ","kind":"symbol","title":"FilterOperator","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator","interfaceLanguage":"swift"}},"summary":"An enum with possible operators to use in filters."},{"rawIndexableTextContent":"ChatUserListController is a controller class which allows observing a list of chat users based on the provided query. ","kind":"symbol","title":"ChatUserListController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController","interfaceLanguage":"swift"}},"summary":"ChatUserListController is a controller class which allows observing a list of chat users based on the provided query."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isSuperset(of:). ","kind":"symbol","title":"isSuperset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isSuperset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isSuperset(of:)."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"The ban reason. ","kind":"symbol","title":"reason","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/reason","interfaceLanguage":"swift"}},"summary":"The ban reason."},{"rawIndexableTextContent":"Matches all values that are not equal to a specified value. ","kind":"symbol","title":"FilterOperator.notEqual","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/notEqual","interfaceLanguage":"swift"}},"summary":"Matches all values that are not equal to a specified value."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"A publisher emitting a new value every time the unread count changes.. ","kind":"symbol","title":"unreadCountPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCountPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the unread count changes.."},{"rawIndexableTextContent":"A struct representing an API key of the chat app.  Overview An API key can be obtained by registering on [our website](https:\/\/getstream.io\/chat\/trial\/).","kind":"symbol","title":"APIKey","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey","interfaceLanguage":"swift"}},"summary":"A struct representing an API key of the chat app."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Matches none of the values specified in an array. ","kind":"symbol","title":"FilterOperator.nor","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/nor","interfaceLanguage":"swift"}},"summary":"Matches none of the values specified in an array."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatUserControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/ChatUserControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly updated ChatChannel instance. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly updated ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldListUpdatedChannel:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:shouldListUpdatedChannel:)-2cl5","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"A type of the message. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/type","interfaceLanguage":"swift"}},"summary":"A type of the message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"Triggered when a member is removed from a channel. ","kind":"symbol","title":"MemberRemovedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a member is removed from a channel."},{"rawIndexableTextContent":"The controller received a change related to users typing in the channel it observes. ","kind":"symbol","title":"channelController(_:didChangeTypingUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didChangeTypingUsers:)-yv1m","interfaceLanguage":"swift"}},"summary":"The controller received a change related to users typing in the channel it observes."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent\/channel","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"The user the controller represents.  Discussion To observe changes of the chat member, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"member","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/member","interfaceLanguage":"swift"}},"summary":"The user the controller represents."},{"rawIndexableTextContent":"If you want to build your own version of Slack or something similar, start here. ","kind":"symbol","title":"ChannelType.team","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/team","interfaceLanguage":"swift"}},"summary":"If you want to build your own version of Slack or something similar, start here."},{"rawIndexableTextContent":"A publisher emitting a new value every time typing users change. ","kind":"symbol","title":"typingUsersPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/typingUsersPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time typing users change."},{"rawIndexableTextContent":"Name for the channel. ","kind":"symbol","title":"ChannelCodingKeys.name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/name","interfaceLanguage":"swift"}},"summary":"Name for the channel."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EmptyResponse\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"somali","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/somali","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The sent message. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/message","interfaceLanguage":"swift"}},"summary":"The sent message."},{"rawIndexableTextContent":"ChatConnectionController is a controller class which allows to explicitly connect\/disconnect the ChatClient and observe connection events. ","kind":"symbol","title":"ChatConnectionController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController","interfaceLanguage":"swift"}},"summary":"ChatConnectionController is a controller class which allows to explicitly connect\/disconnect the ChatClient and observe connection events."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Synchronize local data with remote. Waits for the client to connect but doesn’t initiate the connection itself. This is to make sure the fetched local data is up-to-date, since the current user data is updated through WebSocket events.  Called when the controller has finished fetching the local data and the client connection is established.","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"Synchronize local data with remote. Waits for the client to connect but doesn’t initiate the connection itself. This is to make sure the fetched local data is up-to-date, since the current user data is updated through WebSocket events."},{"rawIndexableTextContent":"An attachment type all FileAttachmentPayload instances conform to. Is set to .file. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all FileAttachmentPayload instances conform to. Is set to .file."},{"rawIndexableTextContent":"Inherited from Sequence.joined(). ","kind":"symbol","title":"joined()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/joined()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.joined()."},{"rawIndexableTextContent":"Load next set of watchers from backend.  Limit for page size. Offset is defined automatically by the controller. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextWatchers(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/loadNextWatchers(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Load next set of watchers from backend."},{"rawIndexableTextContent":"Freezes the channel.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error. Discussion Freezing a channel will disallow sending new messages and sending \/ deleting reactions. For more information, see https:\/\/getstream.io\/chat\/docs\/ios-swift\/freezing_channels\/?language=swift","kind":"symbol","title":"freezeChannel(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/freezeChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Freezes the channel."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Set the delegate of ChannelController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChannelController to observe the changes in the system."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from OptionSet.update(with:). ","kind":"symbol","title":"update(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/update(with:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.update(with:)."},{"rawIndexableTextContent":"A phantom protocol used to limit the scope of Filter.  Overview This type isn’t reflected in Filter directly, rather it’s used for providing better autocompletion and compile-time validation of Filter.","kind":"symbol","title":"FilterScope","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterScope","interfaceLanguage":"swift"}},"summary":"A phantom protocol used to limit the scope of Filter."},{"rawIndexableTextContent":"Triggered when all channels the current user is member of are marked as read. ","kind":"symbol","title":"NotificationMarkAllReadEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent","interfaceLanguage":"swift"}},"summary":"Triggered when all channels the current user is member of are marked as read."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"The channel identifier the current user was removed from. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the current user was removed from."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"isExpired","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/isExpired","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A configuration struct of the channel. It contains additional information about the channel settings. ","kind":"symbol","title":"config","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/config","interfaceLanguage":"swift"}},"summary":"A configuration struct of the channel. It contains additional information about the channel settings."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"romanian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/romanian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingLocalStorageURL\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"The updated reaction. ","kind":"symbol","title":"reaction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/reaction","interfaceLanguage":"swift"}},"summary":"The updated reaction."},{"rawIndexableTextContent":"When a member was updated. ","kind":"symbol","title":"memberUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/memberUpdated","interfaceLanguage":"swift"}},"summary":"When a member was updated."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"readAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent\/readAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When a channel was updated. ","kind":"symbol","title":"channelUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/channelUpdated","interfaceLanguage":"swift"}},"summary":"When a channel was updated."},{"rawIndexableTextContent":"EventsController is a controller class which allows to observe custom and system events. ","kind":"symbol","title":"EventsController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController","interfaceLanguage":"swift"}},"summary":"EventsController is a controller class which allows to observe custom and system events."},{"rawIndexableTextContent":"A type-erased type that wraps either a local file URL that has to be uploaded and attached to the message OR a custom payload which the message attachment should contain. ","kind":"symbol","title":"AnyAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload","interfaceLanguage":"swift"}},"summary":"A type-erased type that wraps either a local file URL that has to be uploaded and attached to the message OR a custom payload which the message attachment should contain."},{"rawIndexableTextContent":"Flag for representing hidden state for the channel. ","kind":"symbol","title":"isHidden","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isHidden","interfaceLanguage":"swift"}},"summary":"Flag for representing hidden state for the channel."},{"rawIndexableTextContent":"A number of watchers for the channel to be retrieved. ","kind":"symbol","title":"watchersLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/watchersLimit","interfaceLanguage":"swift"}},"summary":"A number of watchers for the channel to be retrieved."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(channelFilter:messageFilter:sort:pageSize:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/init(channelFilter:messageFilter:sort:pageSize:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"log","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/log","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The updated channel. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The updated channel."},{"rawIndexableTextContent":"If the member is banned from the channel, this field contains the date when the ban expires.  Discussion Learn more about banning in the documentation.","kind":"symbol","title":"banExpiresAt","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/banExpiresAt","interfaceLanguage":"swift"}},"summary":"If the member is banned from the channel, this field contains the date when the ban expires."},{"rawIndexableTextContent":"Deleted message by current user are visible, other deleted messages are hidden. ","kind":"symbol","title":"ChatClientConfig.DeletedMessageVisibility.visibleForCurrentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility\/visibleForCurrentUser","interfaceLanguage":"swift"}},"summary":"Deleted message by current user are visible, other deleted messages are hidden."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The reaction state is unknown ","kind":"symbol","title":"LocalReactionState.unknown","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/unknown","interfaceLanguage":"swift"}},"summary":"The reaction state is unknown"},{"rawIndexableTextContent":"A bounding protocol for all events that have unread counts. ","kind":"symbol","title":"HasUnreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HasUnreadCount","interfaceLanguage":"swift"}},"summary":"A bounding protocol for all events that have unread counts."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Pinned messages present on the channel.  Discussion This field contains only the pinned messages of the channel. You can get all existing messages in the channel by creating and using a ChatChannelController for this channel id. The pinnedMessages property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"pinnedMessages","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/pinnedMessages","interfaceLanguage":"swift"}},"summary":"Pinned messages present on the channel."},{"rawIndexableTextContent":"Limit the max number of members included in ChatChannel.lastActiveMembers. ","kind":"symbol","title":"lastActiveMembersLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel\/lastActiveMembersLimit","interfaceLanguage":"swift"}},"summary":"Limit the max number of members included in ChatChannel.lastActiveMembers."},{"rawIndexableTextContent":"An image. ","kind":"symbol","title":"assetURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/assetURL","interfaceLanguage":"swift"}},"summary":"An image."},{"rawIndexableTextContent":"The controller failed to fetch remote data. ","kind":"symbol","title":"DataController.State.remoteDataFetchFailed(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/remoteDataFetchFailed(_:)","interfaceLanguage":"swift"}},"summary":"The controller failed to fetch remote data."},{"rawIndexableTextContent":"Filter to match channels containing members with specified user ids. ","kind":"symbol","title":"containMembers(userIds:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/containMembers(userIds:)","interfaceLanguage":"swift"}},"summary":"Filter to match channels containing members with specified user ids."},{"rawIndexableTextContent":"A filter key for matching the createdAt value. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/createdAt-9ilb8","interfaceLanguage":"swift"}},"summary":"A filter key for matching the createdAt value."},{"rawIndexableTextContent":"An error code. ","kind":"symbol","title":"code","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/code","interfaceLanguage":"swift"}},"summary":"An error code."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userArray","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/userArray","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unknown\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"firebase","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/firebase","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The device identifier. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device\/id","interfaceLanguage":"swift"}},"summary":"The device identifier."},{"rawIndexableTextContent":"Additional data associated with the message. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/extraData","interfaceLanguage":"swift"}},"summary":"Additional data associated with the message."},{"rawIndexableTextContent":"The identifier of the read channel. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of the read channel."},{"rawIndexableTextContent":"The unread counts for the channel. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts for the channel."},{"rawIndexableTextContent":"The channel message is supposed to be shown in channel preview.  Discussion The previewMessage can differ from latestMessages.first (or even not be included into latestMessages) because the preview message is the last non-deleted message sent to the channel.","kind":"symbol","title":"previewMessage","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/previewMessage","interfaceLanguage":"swift"}},"summary":"The channel message is supposed to be shown in channel preview."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Creates a new APIKey from the provided string. Fails, if the string is empty.  Discussion The apiKeyString must be a non-empty value, otherwise an assertion failure is raised.","kind":"symbol","title":"init(_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey\/init(_:)","interfaceLanguage":"swift"}},"summary":"Creates a new APIKey from the provided string. Fails, if the string is empty."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatChannelWatcherListControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/ChatChannelWatcherListControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A publisher emitting a new value every time the list of the users matching the query changes. ","kind":"symbol","title":"usersChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/usersChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the list of the users matching the query changes."},{"rawIndexableTextContent":"The unread counts. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts."},{"rawIndexableTextContent":"A list of devices associcated with the user. ","kind":"symbol","title":"devices","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/devices","interfaceLanguage":"swift"}},"summary":"A list of devices associcated with the user."},{"rawIndexableTextContent":"A namespace for the FilterKeys suitable to be used for UserListQuery. This scope is not aware of any extra data types. ","kind":"symbol","title":"AnyUserListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyUserListFilterScope","interfaceLanguage":"swift"}},"summary":"A namespace for the FilterKeys suitable to be used for UserListQuery. This scope is not aware of any extra data types."},{"rawIndexableTextContent":"The date when the device for created. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device\/createdAt","interfaceLanguage":"swift"}},"summary":"The date when the device for created."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Backend specified types. ","kind":"symbol","title":"image","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/image","interfaceLanguage":"swift"}},"summary":"Backend specified types."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The current user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent\/user","interfaceLanguage":"swift"}},"summary":"The current user."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.lastIndex(where:). ","kind":"symbol","title":"lastIndex(where:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lastIndex(where:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.lastIndex(where:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.array(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/array(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionScore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/reactionScore","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.allSatisfy(_:). ","kind":"symbol","title":"allSatisfy(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/allSatisfy(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.allSatisfy(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"If set to true the ChatClient will automatically establish a web-socket connection to listen to the updates when reloadUserIfNeeded is called.  Discussion If set to false the connection won’t be established automatically but has to be initiated manually by calling connect. Is true by default.","kind":"symbol","title":"shouldConnectAutomatically","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/shouldConnectAutomatically","interfaceLanguage":"swift"}},"summary":"If set to true the ChatClient will automatically establish a web-socket connection to listen to the updates when reloadUserIfNeeded is called."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"The date when the channel was updated. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/updatedAt","interfaceLanguage":"swift"}},"summary":"The date when the channel was updated."},{"rawIndexableTextContent":"A dictionary containing the entire event JSON. ","kind":"symbol","title":"payload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/payload","interfaceLanguage":"swift"}},"summary":"A dictionary containing the entire event JSON."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"Good defaults for building something like your own version of Twitch. ","kind":"symbol","title":"ChannelType.gaming","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/gaming","interfaceLanguage":"swift"}},"summary":"Good defaults for building something like your own version of Twitch."},{"rawIndexableTextContent":"Triggered when a new member is added to a channel. ","kind":"symbol","title":"MemberAddedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a new member is added to a channel."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"This enum describes the changes of the given collections of items. ","kind":"symbol","title":"ListChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange","interfaceLanguage":"swift"}},"summary":"This enum describes the changes of the given collections of items."},{"rawIndexableTextContent":"The channel the current user was added to. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel the current user was added to."},{"rawIndexableTextContent":"Inherited from SetAlgebra.init(_:). ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/init(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.init(_:)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"The identifier of the user this controller observes. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/userId","interfaceLanguage":"swift"}},"summary":"The identifier of the user this controller observes."},{"rawIndexableTextContent":"Matches values by performing text search with the specified value. ","kind":"symbol","title":"query(_:text:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/query(_:text:)","interfaceLanguage":"swift"}},"summary":"Matches values by performing text search with the specified value."},{"rawIndexableTextContent":"A namespace for the FilterKeys suitable to be used for ChannelMemberListQuery. This scope is not aware of any extra data types. ","kind":"symbol","title":"AnyMemberListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMemberListFilterScope","interfaceLanguage":"swift"}},"summary":"A namespace for the FilterKeys suitable to be used for ChannelMemberListQuery. This scope is not aware of any extra data types."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"tamil","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/tamil","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The security application group ID to use for the local storage. This is needed if you want to share offline storage between your chat application and extensions. More information is available here and here ","kind":"symbol","title":"applicationGroupIdentifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/applicationGroupIdentifier","interfaceLanguage":"swift"}},"summary":"The security application group ID to use for the local storage. This is needed if you want to share offline storage between your chat application and extensions. More information is available here and here"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Set the delegate of UserListController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of UserListController to observe the changes in the system."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A number of messages inside each channel. ","kind":"symbol","title":"messagesLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/messagesLimit","interfaceLanguage":"swift"}},"summary":"A number of messages inside each channel."},{"rawIndexableTextContent":"Creates a new MessageSearchController with the provided message query.  Return Value A new instance of MessageSearchController. The query specify the filter of the messages the controller should fetch.","kind":"symbol","title":"messageSearchController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/messageSearchController()","interfaceLanguage":"swift"}},"summary":"Creates a new MessageSearchController with the provided message query."},{"rawIndexableTextContent":"ChannelId this query handles. If id part is missing then it’s impossible to create valid ChannelId. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/cid","interfaceLanguage":"swift"}},"summary":"ChannelId this query handles. If id part is missing then it’s impossible to create valid ChannelId."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Performs Swift.assert and stops program execution if condition evaluated to false. In RELEASE builds only logs the failure.  The condition to test. A custom message to log if condition is evaluated to false.","kind":"symbol","title":"assert(_:_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/assert(_:_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Performs Swift.assert and stops program execution if condition evaluated to false. In RELEASE builds only logs the failure."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The identifier of deleted channel. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of deleted channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo\/id","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The channel a message is sent to. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel a message is sent to."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Inherited from LocalizedError.errorDescription. ","kind":"symbol","title":"errorDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/errorDescription-9yy1y","interfaceLanguage":"swift"}},"summary":"Inherited from LocalizedError.errorDescription."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from SetAlgebra.subtracting(_:). ","kind":"symbol","title":"subtracting(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/subtracting(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.subtracting(_:)."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidToken\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from SetAlgebra.subtract(_:). ","kind":"symbol","title":"subtract(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/subtract(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.subtract(_:)."},{"rawIndexableTextContent":"The typing users related to the channel. ","kind":"symbol","title":"typingUsers","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/typingUsers","interfaceLanguage":"swift"}},"summary":"The typing users related to the channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(apiKey:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/init(apiKey:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"Matches any of the values specified in an array. ","kind":"symbol","title":"in(_:values:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/in(_:values:)","interfaceLanguage":"swift"}},"summary":"Matches any of the values specified in an array."},{"rawIndexableTextContent":"Returns the attachments of .image type.  Discussion The imageAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"imageAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/imageAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .image type."},{"rawIndexableTextContent":"A filter key for matching the lastActiveAt value. ","kind":"symbol","title":"lastActiveAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/lastActiveAt","interfaceLanguage":"swift"}},"summary":"A filter key for matching the lastActiveAt value."},{"rawIndexableTextContent":"Creates a new message locally and schedules it for send.  Text of the message. Pins the new message. nil if should not be pinned. A flag indicating whether the message is a silent message. Silent messages are special messages that don’t increase the unread messages count nor mark a channel as unread. An array of the attachments for the message. Note: can be built-in types, custom attachment types conforming to AttachmentEnvelope protocol and ChatMessageAttachmentSeeds. An id of the message new message quotes. (inline reply) Additional extra data of the message object. Called when saving the message to the local DB finishes.","kind":"symbol","title":"createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)","interfaceLanguage":"swift"}},"summary":"Creates a new message locally and schedules it for send."},{"rawIndexableTextContent":"Invite members to a channel. They can then accept or decline the invitation  Set of ids of users to be invited to the channel Called when the API call is finished. Called with Error if the remote update fails.","kind":"symbol","title":"inviteMembers(userIds:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/inviteMembers(userIds:completion:)","interfaceLanguage":"swift"}},"summary":"Invite members to a channel. They can then accept or decline the invitation"},{"rawIndexableTextContent":"An attachment type all LinkAttachmentPayload instances conform to. Is set to .linkPreview. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all LinkAttachmentPayload instances conform to. Is set to .linkPreview."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.UnsupportedUploadableAttachmentType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedUploadableAttachmentType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Basic pagination with pageSize and offset. Used everywhere except ChannelQuery. (See MessagesPagination) ","kind":"symbol","title":"Pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination","interfaceLanguage":"swift"}},"summary":"Basic pagination with pageSize and offset. Used everywhere except ChannelQuery. (See MessagesPagination)"},{"rawIndexableTextContent":"The total number of online members watching this channel. ","kind":"symbol","title":"watcherCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/watcherCount","interfaceLanguage":"swift"}},"summary":"The total number of online members watching this channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent\/deletedAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"queryText(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/queryText(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The user who updated a member. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who updated a member."},{"rawIndexableTextContent":"Hidden flag. ","kind":"symbol","title":"ChannelCodingKeys.hidden","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/hidden","interfaceLanguage":"swift"}},"summary":"Hidden flag."},{"rawIndexableTextContent":"A link to the image. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/imageURL","interfaceLanguage":"swift"}},"summary":"A link to the image."},{"rawIndexableTextContent":"Controller observed a change in the channel member list. ","kind":"symbol","title":"memberListController(_:didChangeMembers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/memberListController(_:didChangeMembers:)","interfaceLanguage":"swift"}},"summary":"Controller observed a change in the channel member list."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"users","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/users","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:). ","kind":"symbol","title":"split(separator:maxSplits:omittingEmptySubsequences:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/split(separator:maxSplits:omittingEmptySubsequences:)-17egy","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:)."},{"rawIndexableTextContent":"A filter key for matching the image value. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/imageURL-4r7i8","interfaceLanguage":"swift"}},"summary":"A filter key for matching the image value."},{"rawIndexableTextContent":"Says whether the channel is muted by the current user.  Discussion The isMuted property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"isMuted","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isMuted","interfaceLanguage":"swift"}},"summary":"Says whether the channel is muted by the current user."},{"rawIndexableTextContent":"The user who updated the channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who updated the channel."},{"rawIndexableTextContent":"Inherited from LogDestination.showThreadName. ","kind":"symbol","title":"showThreadName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showThreadName","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showThreadName."},{"rawIndexableTextContent":"Args for the command. ","kind":"symbol","title":"args","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/args","interfaceLanguage":"swift"}},"summary":"Args for the command."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hindi","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/hindi","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The user who removed the current user from channel members. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who removed the current user from channel members."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingToken\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"The hidden channel identifier. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent\/cid","interfaceLanguage":"swift"}},"summary":"The hidden channel identifier."},{"rawIndexableTextContent":"The channel identifier a message was deleted from. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier a message was deleted from."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(languageCode:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/init(languageCode:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Describes the flow of the messages in the list ","kind":"symbol","title":"MessageOrdering","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering","interfaceLanguage":"swift"}},"summary":"Describes the flow of the messages in the list"},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unexpected\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"All deleted messages are always hidden. ","kind":"symbol","title":"ChatClientConfig.DeletedMessageVisibility.alwaysHidden","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility\/alwaysHidden","interfaceLanguage":"swift"}},"summary":"All deleted messages are always hidden."},{"rawIndexableTextContent":"Log a warning message.  Message to be logged Function of the caller File of the caller Line number of the caller","kind":"symbol","title":"warning(_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/warning(_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Log a warning message."},{"rawIndexableTextContent":"A type alias for attachment with GiphyAttachmentPayload payload type.  Discussion The ephemeral message containing ChatMessageGiphyAttachment attachment will be created when \/giphy command is used.","kind":"symbol","title":"ChatMessageGiphyAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageGiphyAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with GiphyAttachmentPayload payload type."},{"rawIndexableTextContent":"Describes the possible states of the client connection to the servers. ","kind":"symbol","title":"ConnectionStatus","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus","interfaceLanguage":"swift"}},"summary":"Describes the possible states of the client connection to the servers."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"dictionary(with:forKey:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/dictionary(with:forKey:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new ChannelListController with the provided channel query and filter block.  Return Value A new instance of ChatChannelListController The query specify the filter and sorting of the channels the controller should fetch. A block that determines whether the channels belongs to this controller. Discussion When passing filter, make sure the runtime logic matches the one expected by the filter passed in the query object. If they don’t match, there can be jumps when loading the list.","kind":"symbol","title":"channelListController(query:filter:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelListController(query:filter:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChannelListController with the provided channel query and filter block."},{"rawIndexableTextContent":"Enabled for channel members with a role of moderator or admin. The default timeout in minutes until the ban is automatically expired. The default reason the ban was created. ","kind":"symbol","title":"BanEnabling.enabledForModerators(timeoutInMinutes:reason:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/enabledForModerators(timeoutInMinutes:reason:)","interfaceLanguage":"swift"}},"summary":"Enabled for channel members with a role of moderator or admin. The default timeout in minutes until the ban is automatically expired. The default reason the ban was created."},{"rawIndexableTextContent":"The identifier of a channel a message is sent to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of a channel a message is sent to."},{"rawIndexableTextContent":"The controller observed a change in the UnreadCount. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUserUnreadCount:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/currentUserController(_:didChangeCurrentUserUnreadCount:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the UnreadCount."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"AnyMessageSearchFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMessageSearchFilterScope","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Identifier of the Logger. Will be visible if a destination has showIdentifiers enabled. ","kind":"symbol","title":"identifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/identifier","interfaceLanguage":"swift"}},"summary":"Identifier of the Logger. Will be visible if a destination has showIdentifiers enabled."},{"rawIndexableTextContent":"Add users to the channel as members.  Users Id to add to a channel. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"addMembers(userIds:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/addMembers(userIds:completion:)","interfaceLanguage":"swift"}},"summary":"Add users to the channel as members."},{"rawIndexableTextContent":"Inherited from Sequence.starts(with:by:). ","kind":"symbol","title":"starts(with:by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/starts(with:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.starts(with:by:)."},{"rawIndexableTextContent":"true if the channel has read events enabled. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areReadEventsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReadEventsEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel has read events enabled. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showThreadName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showThreadName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A title, usually the name of the video. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A title, usually the name of the video."},{"rawIndexableTextContent":"A unique identifier of the message. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/id","interfaceLanguage":"swift"}},"summary":"A unique identifier of the message."},{"rawIndexableTextContent":"Limit the max number of watchers included in ChatChannel.lastActiveWatchers. ","kind":"symbol","title":"lastActiveWatchersLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel\/lastActiveWatchersLimit","interfaceLanguage":"swift"}},"summary":"Limit the max number of watchers included in ChatChannel.lastActiveWatchers."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"The entire list of reactions to the message left by the current user.  Discussion The currentUserReactions property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"currentUserReactions","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/currentUserReactions","interfaceLanguage":"swift"}},"summary":"The entire list of reactions to the message left by the current user."},{"rawIndexableTextContent":"Loads the given number of pinned messages based on pagination parameter in the current channel.  The number of pinned messages to load. Equals to 25 by default. The sorting options. By default, results are sorted descending by pinned_at field. The pagination parameter. If nil is provided, most recently pinned messages are fetched. The completion to be called on callbackQueue when request is completed.","kind":"symbol","title":"loadPinnedMessages(pageSize:sorting:pagination:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPinnedMessages(pageSize:sorting:pagination:completion:)","interfaceLanguage":"swift"}},"summary":"Loads the given number of pinned messages based on pagination parameter in the current channel."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"The controller changed the list of observed channels.  The controller emitting the change callback. The change to the list of channels.\\","kind":"symbol","title":"controller(_:didChangeChannels:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:didChangeChannels:)-2yop2","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed channels."},{"rawIndexableTextContent":"Triggered when current user mutes\/unmutes a user. ","kind":"symbol","title":"NotificationMutesUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when current user mutes\/unmutes a user."},{"rawIndexableTextContent":"Sort messages by their updated_at dates. ","kind":"symbol","title":"MessageSearchSortingKey.updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/updatedAt","interfaceLanguage":"swift"}},"summary":"Sort messages by their updated_at dates."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates new ChannelWatcherListQuery instance.  The channel identifier. Pagination parameters for fetching watchers. Defaults to fetching first 30 watchers.","kind":"symbol","title":"init(cid:pagination:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery\/init(cid:pagination:)","interfaceLanguage":"swift"}},"summary":"Creates new ChannelWatcherListQuery instance."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isDisjoint(with:). ","kind":"symbol","title":"isDisjoint(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isDisjoint(with:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isDisjoint(with:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"subscript(dynamicMember:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/subscript(dynamicMember:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Set the delegate of ChatUserController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatUserController to observe the changes in the system."},{"rawIndexableTextContent":"Triggered a new reaction is added. ","kind":"symbol","title":"ReactionNewEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent","interfaceLanguage":"swift"}},"summary":"Triggered a new reaction is added."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"identifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/identifier","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/deletedAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Process the log details before outputting the log.  Log details to be processed.","kind":"symbol","title":"process(logDetails:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/process(logDetails:)","interfaceLanguage":"swift"}},"summary":"Process the log details before outputting the log."},{"rawIndexableTextContent":"Audio ","kind":"symbol","title":"AttachmentFileType.mp3","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/mp3","interfaceLanguage":"swift"}},"summary":"Audio"},{"rawIndexableTextContent":"An option to enable ban users. ","kind":"symbol","title":"BanEnabling","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling","interfaceLanguage":"swift"}},"summary":"An option to enable ban users."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"Destinations for this logger. See LogDestination protocol for details. ","kind":"symbol","title":"destinations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/destinations","interfaceLanguage":"swift"}},"summary":"Destinations for this logger. See LogDestination protocol for details."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingToken\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"The item was deleted or it no longer matches the predicate of the observer. ","kind":"symbol","title":"EntityChange.remove(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/remove(_:)","interfaceLanguage":"swift"}},"summary":"The item was deleted or it no longer matches the predicate of the observer."},{"rawIndexableTextContent":"When a member was added to a channel. ","kind":"symbol","title":"memberAdded","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/memberAdded","interfaceLanguage":"swift"}},"summary":"When a member was added to a channel."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from Collection.firstIndex(of:). ","kind":"symbol","title":"firstIndex(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/firstIndex(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.firstIndex(of:)."},{"rawIndexableTextContent":"Inherited from Collection.makeIterator(). ","kind":"symbol","title":"makeIterator()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/makeIterator()","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.makeIterator()."},{"rawIndexableTextContent":"Creates ImageAttachmentPayload instance.  Discussion Use this initializer if the attachment is already uploaded and you have the remote URLs.","kind":"symbol","title":"init(title:imageRemoteURL:imagePreviewRemoteURL:extraData:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/init(title:imageRemoteURL:imagePreviewRemoteURL:extraData:)","interfaceLanguage":"swift"}},"summary":"Creates ImageAttachmentPayload instance."},{"rawIndexableTextContent":"Creates a new ChannelListController with the provided channel query.  Return Value A new instance of ChatChannelListController. The query specify the filter and sorting of the channels the controller should fetch.    \/\/\/","kind":"symbol","title":"channelListController(query:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelListController(query:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChannelListController with the provided channel query."},{"rawIndexableTextContent":"The channel identifier the message lives in. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the message lives in."},{"rawIndexableTextContent":"Inherited from ChatChannelControllerDelegate.userController(_:didUpdateUser:). ","kind":"symbol","title":"userController(_:didUpdateUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/userController(_:didUpdateUser:)","interfaceLanguage":"swift"}},"summary":"Inherited from ChatChannelControllerDelegate.userController(_:didUpdateUser:)."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.docx","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/docx","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"A wrapper object for ChannelListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatChannelController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChannelListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"The client is in the process of connecting to the remote servers. ","kind":"symbol","title":"ConnectionStatus.connecting","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/connecting","interfaceLanguage":"swift"}},"summary":"The client is in the process of connecting to the remote servers."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The root object representing a Stream Chat.  Overview Typically, an app contains just one instance of ChatClient. However, it’s possible to have multiple instances if your use case requires it (i.e. more than one window with different workspaces in a Slack-like app).","kind":"symbol","title":"ChatClient","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient","interfaceLanguage":"swift"}},"summary":"The root object representing a Stream Chat."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed a change in the CurrentChatUser entity. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate\/currentUserController(_:didChangeCurrentUser:)-9y5i0","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the CurrentChatUser entity."},{"rawIndexableTextContent":"When a new message was added on a channel. ","kind":"symbol","title":"messageNew","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/messageNew","interfaceLanguage":"swift"}},"summary":"When a new message was added on a channel."},{"rawIndexableTextContent":"An item was removed from the given index. ","kind":"symbol","title":"ListChange.remove(_:index:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/remove(_:index:)","interfaceLanguage":"swift"}},"summary":"An item was removed from the given index."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"serbian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/serbian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"If ReadEvents options is disabled the value is always nil. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HasUnreadCount\/unreadCount","interfaceLanguage":"swift"}},"summary":"If ReadEvents options is disabled the value is always nil."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"When a user stops watching a channel. ","kind":"symbol","title":"userStopWatching","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userStopWatching","interfaceLanguage":"swift"}},"summary":"When a user stops watching a channel."},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly inserted ChatChannel instance. This instance is not linked to the controller’s query. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly inserted ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldAddNewChannelToList:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:shouldAddNewChannelToList:)-26dw7","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"The current user. ","kind":"symbol","title":"currentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent\/currentUser","interfaceLanguage":"swift"}},"summary":"The current user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Good defaults for building something like your own version of Intercom or Drift. ","kind":"symbol","title":"ChannelType.commerce","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/commerce","interfaceLanguage":"swift"}},"summary":"Good defaults for building something like your own version of Intercom or Drift."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"Unfreezes the channel.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error. Discussion Freezing a channel will disallow sending new messages and sending \/ deleting reactions. For more information, see https:\/\/getstream.io\/chat\/docs\/ios-swift\/freezing_channels\/?language=swift","kind":"symbol","title":"unfreezeChannel(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/unfreezeChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Unfreezes the channel."},{"rawIndexableTextContent":"Loads a message model with a matching id from the local data store.  Return Value If there’s a message object in the locally cached data matching the provided id, returns the matching model object. If a user object doesn’t exist locally, returns nil. An id of a message. Discussion If the data doesn’t exist locally, it’s recommended to use controllers to fetch data from remote servers. Warning: Should be called on the main thread only.","kind":"symbol","title":"message(id:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore\/message(id:)","interfaceLanguage":"swift"}},"summary":"Loads a message model with a matching id from the local data store."},{"rawIndexableTextContent":"Specifies maximum attachment size in bytes. ","kind":"symbol","title":"maxAttachmentSize","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CDNClient\/maxAttachmentSize","interfaceLanguage":"swift"}},"summary":"Specifies maximum attachment size in bytes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.doc","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/doc","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"level","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/level","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Uploads the given file to CDN and returns the file URL.  Local URL of the file. Upload progress callback Completion to be called when upload finishes, or errors.  Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"uploadFile(localFileURL:progress:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadFile(localFileURL:progress:completion:)","interfaceLanguage":"swift"}},"summary":"Uploads the given file to CDN and returns the file URL."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Decodes extra data as an instance of the given type.  Return Value Extra data of the given type or nil if decoding fails. The type an extra data should be decoded as.","kind":"symbol","title":"extraData(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/extraData(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes extra data as an instance of the given type."},{"rawIndexableTextContent":"Creates a new ChatChannelController for the channel with the provided id.  Return Value A new instance of ChatChannelController. The id of the channel this controller represents. The channel list query the channel this controller represents is part of. Describes the ordering the messages are presented.","kind":"symbol","title":"channelController(for:channelListQuery:messageOrdering:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(for:channelListQuery:messageOrdering:)-97hq4","interfaceLanguage":"swift"}},"summary":"Creates a new ChatChannelController for the channel with the provided id."},{"rawIndexableTextContent":"CurrentChatUserController is a controller class which allows observing and mutating the currently logged-in user of ChatClient. ","kind":"symbol","title":"CurrentChatUserController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController","interfaceLanguage":"swift"}},"summary":"CurrentChatUserController is a controller class which allows observing and mutating the currently logged-in user of ChatClient."},{"rawIndexableTextContent":"The controller changed the list of observed users.  The controller emitting the change callback. The change to the list of users.","kind":"symbol","title":"controller(_:didChangeUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/controller(_:didChangeUsers:)","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed users."},{"rawIndexableTextContent":"Sensible defaults in case you want to build livestream chat like Instagram Livestream or Periscope. ","kind":"symbol","title":"ChannelType.livestream","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/livestream","interfaceLanguage":"swift"}},"summary":"Sensible defaults in case you want to build livestream chat like Instagram Livestream or Periscope."},{"rawIndexableTextContent":"A filter key for matching the updatedAt value. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/updatedAt-5qf7j","interfaceLanguage":"swift"}},"summary":"A filter key for matching the updatedAt value."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"The query specifying and filtering the list of channels. ","kind":"symbol","title":"query","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/query","interfaceLanguage":"swift"}},"summary":"The query specifying and filtering the list of channels."},{"rawIndexableTextContent":"Executes the provided action on the message this controller manages.  The action to take. The completion. Will be called on a callbackQueue when the operation is finished. If operation fails, the completion is called with the error.","kind":"symbol","title":"dispatchEphemeralMessageAction(_:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/dispatchEphemeralMessageAction(_:completion:)","interfaceLanguage":"swift"}},"summary":"Executes the provided action on the message this controller manages."},{"rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:by:). ","kind":"symbol","title":"elementsEqual(_:by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/elementsEqual(_:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.elementsEqual(_:by:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ReactionNotificationContent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"AttachmentAction.ActionType.button","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/button","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"The # of channel watchers ","kind":"symbol","title":"watcherCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/watcherCount","interfaceLanguage":"swift"}},"summary":"The # of channel watchers"},{"rawIndexableTextContent":"Sort messages by their relevance to the query.  Discussion This sorting key will not take effect on iOS SDK. We suggest using other sorting keys for now.","kind":"symbol","title":"MessageSearchSortingKey.relevance","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/relevance","interfaceLanguage":"swift"}},"summary":"Sort messages by their relevance to the query."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Inherited from Sequence.enumerated(). ","kind":"symbol","title":"enumerated()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/enumerated()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.enumerated()."},{"rawIndexableTextContent":"A sorting for the query (see Sorting). ","kind":"symbol","title":"sort","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/sort","interfaceLanguage":"swift"}},"summary":"A sorting for the query (see Sorting)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.difference(from:by:). ","kind":"symbol","title":"difference(from:by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/difference(from:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.difference(from:by:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller is created but no data fetched. ","kind":"symbol","title":"DataController.State.initialized","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/initialized","interfaceLanguage":"swift"}},"summary":"The controller is created but no data fetched."},{"rawIndexableTextContent":"Loads previous messages from backend.  ID of the last fetched message. You will get messages older than the provided ID. Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadPreviousMessages(before:limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPreviousMessages(before:limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads previous messages from backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showDate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showDate","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Basic destination for outputting messages to console. ","kind":"symbol","title":"ConsoleLogDestination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConsoleLogDestination","interfaceLanguage":"swift"}},"summary":"Basic destination for outputting messages to console."},{"rawIndexableTextContent":"If the channel was truncated, this field contains the date of the truncation. ","kind":"symbol","title":"truncatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/truncatedAt","interfaceLanguage":"swift"}},"summary":"If the channel was truncated, this field contains the date of the truncation."},{"rawIndexableTextContent":"Creates a new instance of ChatClientConfig.  The string with API key of the chat app the ChatClient connects to. Discussion ⚠️ The provided apiKeyString must be non-empty, otherwise an assertion failure is triggered.","kind":"symbol","title":"init(apiKeyString:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/init(apiKeyString:)","interfaceLanguage":"swift"}},"summary":"Creates a new instance of ChatClientConfig."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Location-swift.struct\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The message is waiting to be sent. ","kind":"symbol","title":"LocalMessageState.pendingSend","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/pendingSend","interfaceLanguage":"swift"}},"summary":"The message is waiting to be sent."},{"rawIndexableTextContent":"A filter key for matching the isInvisible value. ","kind":"symbol","title":"isInvisible","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/isInvisible","interfaceLanguage":"swift"}},"summary":"A filter key for matching the isInvisible value."},{"rawIndexableTextContent":"The channel members. ","kind":"symbol","title":"watchers","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/watchers","interfaceLanguage":"swift"}},"summary":"The channel members."},{"rawIndexableTextContent":"Inherited from Collection.subscript(_:). ","kind":"symbol","title":"subscript(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/subscript(_:)-l5o6","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.subscript(_:)."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unknown\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"A Boolean value indicating wether it is an hard delete or not. ","kind":"symbol","title":"isHardDelete","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/isHardDelete","interfaceLanguage":"swift"}},"summary":"A Boolean value indicating wether it is an hard delete or not."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"An attachment type all GiphyAttachmentPayload instances conform to. Is set to .giphy. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all GiphyAttachmentPayload instances conform to. Is set to .giphy."},{"rawIndexableTextContent":"Video ","kind":"symbol","title":"AttachmentFileType.wmv","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/wmv","interfaceLanguage":"swift"}},"summary":"Video"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Loads a user model with a matching id from the local data store.  Return Value If there’s a user object in the locally cached data matching the provided id, returns the matching model object. If a user object doesn’t exist locally, returns nil. An id of a user. Discussion If the data doesn’t exist locally, it’s recommended to use controllers to fetch data from remote servers. Warning: Should be called on the main thread only.","kind":"symbol","title":"user(id:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore\/user(id:)","interfaceLanguage":"swift"}},"summary":"Loads a user model with a matching id from the local data store."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Unflags the user this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"unflag(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/unflag(completion:)","interfaceLanguage":"swift"}},"summary":"Unflags the user this controller manages."},{"rawIndexableTextContent":"An attachment action style, e.g. primary button. ","kind":"symbol","title":"AttachmentAction.ActionStyle","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle","interfaceLanguage":"swift"}},"summary":"An attachment action style, e.g. primary button."},{"rawIndexableTextContent":"Writes a given message to the desired output. By minimum, subclasses should implement this function, since it handles outputting the message. ","kind":"symbol","title":"write(message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConsoleLogDestination\/write(message:)","interfaceLanguage":"swift"}},"summary":"Writes a given message to the desired output. By minimum, subclasses should implement this function, since it handles outputting the message."},{"rawIndexableTextContent":"Image ","kind":"symbol","title":"AttachmentFileType.gif","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/gif","interfaceLanguage":"swift"}},"summary":"Image"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"A publisher emitting a new value every time the message changes. ","kind":"symbol","title":"messageChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/messageChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the message changes."},{"rawIndexableTextContent":"Inherited from LocalizedError.failureReason. ","kind":"symbol","title":"failureReason","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/failureReason","interfaceLanguage":"swift"}},"summary":"Inherited from LocalizedError.failureReason."},{"rawIndexableTextContent":"The user who started\/stopped watching a channel ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who started\/stopped watching a channel"},{"rawIndexableTextContent":"Use this log level if you want to see if something is not 100% right. ","kind":"symbol","title":"LogLevel.warning","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/warning","interfaceLanguage":"swift"}},"summary":"Use this log level if you want to see if something is not 100% right."},{"rawIndexableTextContent":"A user the event is triggered for. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/userId","interfaceLanguage":"swift"}},"summary":"A user the event is triggered for."},{"rawIndexableTextContent":"A channel config. ","kind":"symbol","title":"ChannelConfig","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig","interfaceLanguage":"swift"}},"summary":"A channel config."},{"rawIndexableTextContent":"Triggered when a new message is sent to channel. ","kind":"symbol","title":"MessageNewEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a new message is sent to channel."},{"rawIndexableTextContent":"An event type. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/type","interfaceLanguage":"swift"}},"summary":"An event type."},{"rawIndexableTextContent":"Triggered when a user starts\/stops watching a channel ","kind":"symbol","title":"UserWatchingEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a user starts\/stops watching a channel"},{"rawIndexableTextContent":"An operator used for the filter. ","kind":"symbol","title":"operator","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/operator","interfaceLanguage":"swift"}},"summary":"An operator used for the filter."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"subsystems","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/subsystems-543j0","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"russian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/russian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches values that are greater than a specified value. ","kind":"symbol","title":"greaterOrEqual(_:than:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/greaterOrEqual(_:than:)","interfaceLanguage":"swift"}},"summary":"Matches values that are greater than a specified value."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CleanUpTypingEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed a change in the ChatMessage its observes. ","kind":"symbol","title":"messageController(_:didChangeMessage:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeMessage:)-3j13u","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatMessage its observes."},{"rawIndexableTextContent":"The inviter. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/user","interfaceLanguage":"swift"}},"summary":"The inviter."},{"rawIndexableTextContent":"A sorting for the query (see Sorting). ","kind":"symbol","title":"sort","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/sort","interfaceLanguage":"swift"}},"summary":"A sorting for the query (see Sorting)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller changed the list of observed users.  The controller emitting the change callback. The change to the list of users.","kind":"symbol","title":"controller(_:didChangeUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate\/controller(_:didChangeUsers:)-3mzs","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed users."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"ChatUserController is a controller class which allows mutating and observing changes of a specific chat user.  Overview ChatUserController objects are lightweight, and they can be used for both, continuous data change observations, and for quick user actions (like mute\/unmute).","kind":"symbol","title":"ChatUserController","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController","interfaceLanguage":"swift"}},"summary":"ChatUserController is a controller class which allows mutating and observing changes of a specific chat user."},{"rawIndexableTextContent":"Creates a new ChannelEventsController that can be used to listen to system events and for sending custom events into a channel the current controller manages.  Return Value A new instance of ChannelEventsController.","kind":"symbol","title":"eventsController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/eventsController()","interfaceLanguage":"swift"}},"summary":"Creates a new ChannelEventsController that can be used to listen to system events and for sending custom events into a channel the current controller manages."},{"rawIndexableTextContent":"The controller observed a change in the UnreadCount. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUserUnreadCount:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate\/currentUserController(_:didChangeCurrentUserUnreadCount:)-6khhe","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the UnreadCount."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isSuperset(of:). ","kind":"symbol","title":"isSuperset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isSuperset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isSuperset(of:)."},{"rawIndexableTextContent":"An attachment file type. ","kind":"symbol","title":"AttachmentFileType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType","interfaceLanguage":"swift"}},"summary":"An attachment file type."},{"rawIndexableTextContent":"The channel identifier a member was updated in. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier a member was updated in."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"The current user. ","kind":"symbol","title":"currentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent\/currentUser","interfaceLanguage":"swift"}},"summary":"The current user."},{"rawIndexableTextContent":"Inherited from Collection.split(separator:maxSplits:omittingEmptySubsequences:). ","kind":"symbol","title":"split(separator:maxSplits:omittingEmptySubsequences:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/split(separator:maxSplits:omittingEmptySubsequences:)-9ljdk","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.split(separator:maxSplits:omittingEmptySubsequences:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/rawValue","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"A pagination. ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery\/pagination","interfaceLanguage":"swift"}},"summary":"A pagination."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.map(_:). ","kind":"symbol","title":"map(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/map(_:)-xnre","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.map(_:)."},{"rawIndexableTextContent":"When a message was added to a channel (when clients that are not currently watching the channel). ","kind":"symbol","title":"notificationMessageNew","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationMessageNew","interfaceLanguage":"swift"}},"summary":"When a message was added to a channel (when clients that are not currently watching the channel)."},{"rawIndexableTextContent":"Image ","kind":"symbol","title":"AttachmentFileType.jpeg","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/jpeg","interfaceLanguage":"swift"}},"summary":"Image"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The attachment is currently being uploaded. The progress in [0, 1] range. ","kind":"symbol","title":"LocalAttachmentState.uploading(progress:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/uploading(progress:)","interfaceLanguage":"swift"}},"summary":"The attachment is currently being uploaded. The progress in [0, 1] range."},{"rawIndexableTextContent":"Inherited from LocalizedError.recoverySuggestion. ","kind":"symbol","title":"recoverySuggestion","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/recoverySuggestion","interfaceLanguage":"swift"}},"summary":"Inherited from LocalizedError.recoverySuggestion."},{"rawIndexableTextContent":"When a message was updated. ","kind":"symbol","title":"messageUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/messageUpdated","interfaceLanguage":"swift"}},"summary":"When a message was updated."},{"rawIndexableTextContent":"Inherited from LogDestination.showDate. ","kind":"symbol","title":"showDate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showDate","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showDate."},{"rawIndexableTextContent":"Triggered when a channel is truncated. ","kind":"symbol","title":"ChannelTruncatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is truncated."},{"rawIndexableTextContent":"The current connection status of the client.  Discussion To observe changes of the connection status, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"connectionStatus","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatus","interfaceLanguage":"swift"}},"summary":"The current connection status of the client."},{"rawIndexableTextContent":"Sort messages by their id. ","kind":"symbol","title":"MessageSearchSortingKey.id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/id","interfaceLanguage":"swift"}},"summary":"Sort messages by their id."},{"rawIndexableTextContent":"A type representing a chat user. ChatUser is an immutable snapshot of a chat user entity at the given time. ","kind":"symbol","title":"ChatUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser","interfaceLanguage":"swift"}},"summary":"A type representing a chat user. ChatUser is an immutable snapshot of a chat user entity at the given time."},{"rawIndexableTextContent":"A sorting key protocol. ","kind":"symbol","title":"SortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/SortingKey","interfaceLanguage":"swift"}},"summary":"A sorting key protocol."},{"rawIndexableTextContent":"Sort channels by number of members. ","kind":"symbol","title":"ChannelListSortingKey.memberCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/memberCount","interfaceLanguage":"swift"}},"summary":"Sort channels by number of members."},{"rawIndexableTextContent":"Triggered when user is updated ","kind":"symbol","title":"UserUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user is updated"},{"rawIndexableTextContent":"Inherited from Error.localizedDescription. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/localizedDescription-7usqx","interfaceLanguage":"swift"}},"summary":"Inherited from Error.localizedDescription."},{"rawIndexableTextContent":"A text, usually description of the link content. ","kind":"symbol","title":"text","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/text","interfaceLanguage":"swift"}},"summary":"A text, usually description of the link content."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"A type that represents the supported push providers. ","kind":"symbol","title":"PushProvider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider","interfaceLanguage":"swift"}},"summary":"A type that represents the supported push providers."},{"rawIndexableTextContent":"The file and line number which emitted the error. ","kind":"symbol","title":"location","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/location-swift.property","interfaceLanguage":"swift"}},"summary":"The file and line number which emitted the error."},{"rawIndexableTextContent":"The identifier of deleted channel. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of deleted channel."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"An indicator whether the user is flagged by the current user.  Discussion Please be aware that the value of this field is not persisted on the server, and is valid only locally for the current session.","kind":"symbol","title":"isFlaggedByCurrentUser","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/isFlaggedByCurrentUser","interfaceLanguage":"swift"}},"summary":"An indicator whether the user is flagged by the current user."},{"rawIndexableTextContent":"The channel identifier a member was removed from. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier a member was removed from."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The use who added a reaction. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/user","interfaceLanguage":"swift"}},"summary":"The use who added a reaction."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChannelReadEvent, this event tells that User has mark read all messages in channel. ","kind":"symbol","title":"ChannelReadEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelReadEvent","interfaceLanguage":"swift"}},"summary":"ChannelReadEvent, this event tells that User has mark read all messages in channel."},{"rawIndexableTextContent":"The deleted message. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/message","interfaceLanguage":"swift"}},"summary":"The deleted message."},{"rawIndexableTextContent":"Actions when gif is not sent yet. (e.g. Shuffle) ","kind":"symbol","title":"actions","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/actions","interfaceLanguage":"swift"}},"summary":"Actions when gif is not sent yet. (e.g. Shuffle)"},{"rawIndexableTextContent":"Fetches the most updated devices and syncs with the local database.  Called when the devices are synced successfully, or with error.","kind":"symbol","title":"synchronizeDevices(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronizeDevices(completion:)","interfaceLanguage":"swift"}},"summary":"Fetches the most updated devices and syncs with the local database."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"When a user was updated. ","kind":"symbol","title":"userUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userUpdated","interfaceLanguage":"swift"}},"summary":"When a user was updated."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"A name. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/name","interfaceLanguage":"swift"}},"summary":"A name."},{"rawIndexableTextContent":"The channel matching the ChannelId. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/channel","interfaceLanguage":"swift"}},"summary":"The channel matching the ChannelId."},{"rawIndexableTextContent":"Creates a ChatChannelController that will create a new channel, if the channel doesn’t exist already.  Return Value A new instance of ChatChannelController. The ChannelId for the new channel. The new channel name. The new channel avatar URL. Team for new channel. Ds for the new channel members. If set to true the current user will be included into the channel. Is true by default. Describes the ordering the messages are presented. IDs for the new channel invitees. Extra data for the new channel. The channel list query the channel this controller represents is part of. Discussion It’s safe to call this method for already existing channels. However, if you queried the channel before and you’re sure it exists locally, it can be faster and more convenient to use channelController(for cid: ChannelId) to create a controller for it. ClientError.CurrentUserDoesNotExist if there is no currently logged-in user.","kind":"symbol","title":"channelController(createChannelWithId:name:imageURL:team:members:isCurrentUserMember:messageOrdering:invites:extraData:channelListQuery:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(createChannelWithId:name:imageURL:team:members:isCurrentUserMember:messageOrdering:invites:extraData:channelListQuery:)","interfaceLanguage":"swift"}},"summary":"Creates a ChatChannelController that will create a new channel, if the channel doesn’t exist already."},{"rawIndexableTextContent":"For the message authored by the current user this field contains number of channel members who has read this message (excluding the current user).  Discussion For the message authored by other channel members this field always returns 0.","kind":"symbol","title":"readByCount","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/readByCount","interfaceLanguage":"swift"}},"summary":"For the message authored by the current user this field contains number of channel members who has read this message (excluding the current user)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessagePinDetails","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(id:name:imageURL:extraData:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo\/init(id:name:imageURL:extraData:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Searches messages for the given text.  The message text. Called when the controller has finished fetching remote data. If the data fetching fails, the error variable contains more details about the problem. Discussion When this function is called, messages property of this controller will refresh with new messages matching the text. The delegate function didChangeMessages will also be called. Currently, no local data will be searched, only remote data will be queried.","kind":"symbol","title":"search(text:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/search(text:completion:)","interfaceLanguage":"swift"}},"summary":"Searches messages for the given text."},{"rawIndexableTextContent":"ChatChannelWatcherListController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatChannelWatcherListControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatChannelWatcherListController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"When a user is invited to a channel ","kind":"symbol","title":"notificationInvited","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationInvited","interfaceLanguage":"swift"}},"summary":"When a user is invited to a channel"},{"rawIndexableTextContent":"Toggle for showing identifier in logs ","kind":"symbol","title":"showIdentifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showIdentifier","interfaceLanguage":"swift"}},"summary":"Toggle for showing identifier in logs"},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"An attachment action type, e.g. button. ","kind":"symbol","title":"AttachmentAction.ActionType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType","interfaceLanguage":"swift"}},"summary":"An attachment action type, e.g. button."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The client is connected to the remote server. ","kind":"symbol","title":"ConnectionStatus.connected","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/connected","interfaceLanguage":"swift"}},"summary":"The client is connected to the remote server."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"NotificationInviteRejected","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejected","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.subscript(_:). ","kind":"symbol","title":"subscript(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/subscript(_:)-2lnpb","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.subscript(_:)."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isEmpty. ","kind":"symbol","title":"isEmpty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isEmpty","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isEmpty."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/file","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter for the query (see Filter). ","kind":"symbol","title":"filter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery\/filter","interfaceLanguage":"swift"}},"summary":"A filter for the query (see Filter)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RandomAccessCollection.index(after:). ","kind":"symbol","title":"index(after:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/index(after:)","interfaceLanguage":"swift"}},"summary":"Inherited from RandomAccessCollection.index(after:)."},{"rawIndexableTextContent":"The controller observed changes in the Messages of the observed channel. ","kind":"symbol","title":"channelController(_:didUpdateMessages:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didUpdateMessages:)-9eaba","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the Messages of the observed channel."},{"rawIndexableTextContent":"This role allows users to perform more advanced actions. This role should be granted only to staff users ","kind":"symbol","title":"admin","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/admin","interfaceLanguage":"swift"}},"summary":"This role allows users to perform more advanced actions. This role should be granted only to staff users"},{"rawIndexableTextContent":"The message delivery state for message failed to be sent\/edited\/deleted. ","kind":"symbol","title":"failed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/failed","interfaceLanguage":"swift"}},"summary":"The message delivery state for message failed to be sent\/edited\/deleted."},{"rawIndexableTextContent":"ChatUserSearchController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatUserSearchControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatUserSearchController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"The reaction type. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/type","interfaceLanguage":"swift"}},"summary":"The reaction type."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/rawValue","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The updated member. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/member","interfaceLanguage":"swift"}},"summary":"The updated member."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionScore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/reactionScore","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"write(message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/write(message:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"georgian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/georgian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"When a channel was deleted. ","kind":"symbol","title":"channelDeleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/channelDeleted","interfaceLanguage":"swift"}},"summary":"When a channel was deleted."},{"rawIndexableTextContent":"ChatChannelListController is a controller class which allows observing a list of chat channels based on the provided query. ","kind":"symbol","title":"ChatChannelListController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController","interfaceLanguage":"swift"}},"summary":"ChatChannelListController is a controller class which allows observing a list of chat channels based on the provided query."},{"rawIndexableTextContent":"The file itself. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/file","interfaceLanguage":"swift"}},"summary":"The file itself."},{"rawIndexableTextContent":"Specifies the visibility of deleted messages. By default, all deleted messages are visible with their content hidden. ","kind":"symbol","title":"deletedMessagesVisibility","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/deletedMessagesVisibility","interfaceLanguage":"swift"}},"summary":"Specifies the visibility of deleted messages. By default, all deleted messages are visible with their content hidden."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.reversed(). ","kind":"symbol","title":"reversed()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/reversed()","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.reversed()."},{"rawIndexableTextContent":"Sort channels by date they were updated. ","kind":"symbol","title":"ChannelListSortingKey.updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/updatedAt","interfaceLanguage":"swift"}},"summary":"Sort channels by date they were updated."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A link to the audio. ","kind":"symbol","title":"audioURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/audioURL","interfaceLanguage":"swift"}},"summary":"A link to the audio."},{"rawIndexableTextContent":"Controls whether the chat shows how far you’ve read. Enabled by default. ","kind":"symbol","title":"readEventsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/readEventsEnabled","interfaceLanguage":"swift"}},"summary":"Controls whether the chat shows how far you’ve read. Enabled by default."},{"rawIndexableTextContent":"Returns an attachment matching self but payload casted to Any. ","kind":"symbol","title":"asAnyAttachment","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/asAnyAttachment","interfaceLanguage":"swift"}},"summary":"Returns an attachment matching self but payload casted to Any."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"Inherited from OptionSet.formIntersection(_:). ","kind":"symbol","title":"formIntersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/formIntersection(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formIntersection(_:)."},{"rawIndexableTextContent":"A publisher emitting a new value every time member event received. ","kind":"symbol","title":"memberEventPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/memberEventPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time member event received."},{"rawIndexableTextContent":"The type is designed to store the JWT and the user it is related to. ","kind":"symbol","title":"Token","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token","interfaceLanguage":"swift"}},"summary":"The type is designed to store the JWT and the user it is related to."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from MemberEvent.memberUserId. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"Inherited from MemberEvent.memberUserId."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showFileName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showFileName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Triggered when user status changes (eg. online, offline, away, etc.) ","kind":"symbol","title":"UserPresenceChangedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user status changes (eg. online, offline, away, etc.)"},{"rawIndexableTextContent":"A raw value of the channel type. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/rawValue","interfaceLanguage":"swift"}},"summary":"A raw value of the channel type."},{"rawIndexableTextContent":"This is the default role assigned to any user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/user","interfaceLanguage":"swift"}},"summary":"This is the default role assigned to any user."},{"rawIndexableTextContent":"Inherited from Sequence.reduce(_:_:). ","kind":"symbol","title":"reduce(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/reduce(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.reduce(_:_:)."},{"rawIndexableTextContent":"When a message reaction deleted. ","kind":"symbol","title":"reactionDeleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/reactionDeleted","interfaceLanguage":"swift"}},"summary":"When a message reaction deleted."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Deleting of the reaction failed and cannot be fulfilled ","kind":"symbol","title":"LocalReactionState.deletingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/deletingFailed","interfaceLanguage":"swift"}},"summary":"Deleting of the reaction failed and cannot be fulfilled"},{"rawIndexableTextContent":"Toggle for showing line number in logs ","kind":"symbol","title":"showLineNumber","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/showLineNumber","interfaceLanguage":"swift"}},"summary":"Toggle for showing line number in logs"},{"rawIndexableTextContent":"The type of the channel. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/type","interfaceLanguage":"swift"}},"summary":"The type of the channel."},{"rawIndexableTextContent":"The base url for StreamChat data center located in Sydney. ","kind":"symbol","title":"sydney","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/sydney","interfaceLanguage":"swift"}},"summary":"The base url for StreamChat data center located in Sydney."},{"rawIndexableTextContent":"Pins a message.  The date when the message will be unpinned.","kind":"symbol","title":"expirationDate(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/expirationDate(_:)","interfaceLanguage":"swift"}},"summary":"Pins a message."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"A struct representing base URL for ChatClient. ","kind":"symbol","title":"BaseURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL","interfaceLanguage":"swift"}},"summary":"A struct representing base URL for ChatClient."},{"rawIndexableTextContent":"A message generated by a system event, like updating the channel or muting a user. ","kind":"symbol","title":"MessageType.system","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/system","interfaceLanguage":"swift"}},"summary":"A message generated by a system event, like updating the channel or muting a user."},{"rawIndexableTextContent":"If the message was created by a specific \/ command, the arguments of the command are stored in this variable. ","kind":"symbol","title":"arguments","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/arguments","interfaceLanguage":"swift"}},"summary":"If the message was created by a specific \/ command, the arguments of the command are stored in this variable."},{"rawIndexableTextContent":"When a channel was hidden. ","kind":"symbol","title":"channelHidden","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/channelHidden","interfaceLanguage":"swift"}},"summary":"When a channel was hidden."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The ChannelQuery this controller observes. ","kind":"symbol","title":"channelQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelQuery","interfaceLanguage":"swift"}},"summary":"The ChannelQuery this controller observes."},{"rawIndexableTextContent":"Inherited from LogDestination.showFileName. ","kind":"symbol","title":"showFileName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showFileName","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showFileName."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"The unbanned user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent\/user","interfaceLanguage":"swift"}},"summary":"The unbanned user."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unexpected\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"Inherited from OptionSet.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.init(rawValue:)."},{"rawIndexableTextContent":"Inherited from Error.localizedDescription. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/FetchFailed\/localizedDescription-4hzgh","interfaceLanguage":"swift"}},"summary":"Inherited from Error.localizedDescription."},{"rawIndexableTextContent":"The banned user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/user","interfaceLanguage":"swift"}},"summary":"The banned user."},{"rawIndexableTextContent":"The user that pinned the message ","kind":"symbol","title":"pinnedBy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails\/pinnedBy","interfaceLanguage":"swift"}},"summary":"The user that pinned the message"},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from CodingKey.debugDescription. ","kind":"symbol","title":"debugDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/debugDescription","interfaceLanguage":"swift"}},"summary":"Inherited from CodingKey.debugDescription."},{"rawIndexableTextContent":"Disabled for everyone. ","kind":"symbol","title":"BanEnabling.disabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/disabled","interfaceLanguage":"swift"}},"summary":"Disabled for everyone."},{"rawIndexableTextContent":"A filter key for matching the image value. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/imageURL-9l0v5","interfaceLanguage":"swift"}},"summary":"A filter key for matching the image value."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An attachment file type (see AttachmentFileType). ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/type","interfaceLanguage":"swift"}},"summary":"An attachment file type (see AttachmentFileType)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns true when the channel is a direct-message channel. A “direct message” channel is created when client sends only the user id’s for the channel and not an explicit cid, so backend creates a cid based on member’s ids ","kind":"symbol","title":"isDirectMessageChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/isDirectMessageChannel","interfaceLanguage":"swift"}},"summary":"Returns true when the channel is a direct-message channel. A “direct message” channel is created when client sends only the user id’s for the channel and not an explicit cid, so backend creates a cid based on member’s ids"},{"rawIndexableTextContent":"The identifier of a channel this controller observes. Will be nil when we want to create direct message channel and id is not yet generated by backend. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of a channel this controller observes. Will be nil when we want to create direct message channel and id is not yet generated by backend."},{"rawIndexableTextContent":"Inherited from Sequence.formatted(_:). ","kind":"symbol","title":"formatted(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formatted(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.formatted(_:)."},{"rawIndexableTextContent":"The attachment type. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/type","interfaceLanguage":"swift"}},"summary":"The attachment type."},{"rawIndexableTextContent":"Represents a payload for attachments with .media type. ","kind":"symbol","title":"VideoAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .media type."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"The number of channels with unread messages. ","kind":"symbol","title":"channels","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/channels","interfaceLanguage":"swift"}},"summary":"The number of channels with unread messages."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"ChatChannelMemberListController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatChannelMemberListControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatChannelMemberListController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"The controller observed a change in the ChatChannelMember entity. ","kind":"symbol","title":"memberController(_:didUpdateMember:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate\/memberController(_:didUpdateMember:)-5gzr8","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatChannelMember entity."},{"rawIndexableTextContent":"Inherited from Collection.startIndex. ","kind":"symbol","title":"startIndex","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/startIndex","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.startIndex."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo\/imageURL","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Connects authorized user  User info that is passed to the connect endpoint for user creation Authorization token for the user. The completion that will be called once the first user session for the given token is setup.","kind":"symbol","title":"connectUser(userInfo:token:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/connectUser(userInfo:token:completion:)","interfaceLanguage":"swift"}},"summary":"Connects authorized user"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"process(logDetails:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/process(logDetails:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"EventsController uses this protocol to communicate events to the delegate. ","kind":"symbol","title":"EventsControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsControllerDelegate","interfaceLanguage":"swift"}},"summary":"EventsController uses this protocol to communicate events to the delegate."},{"rawIndexableTextContent":"Keys that you can use to sort Message search results. ","kind":"symbol","title":"MessageSearchSortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey","interfaceLanguage":"swift"}},"summary":"Keys that you can use to sort Message search results."},{"rawIndexableTextContent":"ChannelReadEvent, this event tells that User has mark read all messages in channel. ","kind":"symbol","title":"MessageReadEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent","interfaceLanguage":"swift"}},"summary":"ChannelReadEvent, this event tells that User has mark read all messages in channel."},{"rawIndexableTextContent":"The cid of the deleted channel ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The cid of the deleted channel"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from LogDestination.showLineNumber. ","kind":"symbol","title":"showLineNumber","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showLineNumber","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showLineNumber."},{"rawIndexableTextContent":"Inherited from Sequence.reduce(into:_:). ","kind":"symbol","title":"reduce(into:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/reduce(into:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.reduce(into:_:)."},{"rawIndexableTextContent":"Inherited from CodingKey.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CodingKey.description."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"dutch","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/dutch","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"dari","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/dari","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Loads reactions from the backend given an offset and a limit.  The reactions page size. The starting position from the desired range to be fetched. The completion is called when the network request is finished. It is called with the reactions if the request succeeds or error if the request fails.","kind":"symbol","title":"loadReactions(limit:offset:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/loadReactions(limit:offset:completion:)","interfaceLanguage":"swift"}},"summary":"Loads reactions from the backend given an offset and a limit."},{"rawIndexableTextContent":"Inherited from Collection.Index. ","kind":"symbol","title":"LazyCachedMapCollection.Index","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/Index","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.Index."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"The unread messages and channels count for the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread messages and channels count for the current user."},{"rawIndexableTextContent":"An event type. ","kind":"symbol","title":"EventType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType","interfaceLanguage":"swift"}},"summary":"An event type."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showLineNumber","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showLineNumber","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RandomAccessCollection.index(before:). ","kind":"symbol","title":"index(before:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/index(before:)","interfaceLanguage":"swift"}},"summary":"Inherited from RandomAccessCollection.index(before:)."},{"rawIndexableTextContent":"The controller observed changes in the reactions of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReactions:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/messageController(_:didChangeReactions:)","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the reactions of the observed ChatMessage."},{"rawIndexableTextContent":"Channel id this query handles. ","kind":"symbol","title":"id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/id","interfaceLanguage":"swift"}},"summary":"Channel id this query handles."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"Update the value safely.  a block with changes. It should return a new value.","kind":"symbol","title":"mutate(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic\/mutate(_:)","interfaceLanguage":"swift"}},"summary":"Update the value safely."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Loads next members from backend.  The page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextMembers(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/loadNextMembers(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next members from backend."},{"rawIndexableTextContent":"true if the channel has reactions enabled. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areReactionsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReactionsEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel has reactions enabled. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"The time when the mute was updated. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails\/updatedAt","interfaceLanguage":"swift"}},"summary":"The time when the mute was updated."},{"rawIndexableTextContent":"True if the sorting in ascending order, otherwise false. ","kind":"symbol","title":"isAscending","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/isAscending","interfaceLanguage":"swift"}},"summary":"True if the sorting in ascending order, otherwise false."},{"rawIndexableTextContent":"This role allows the member to perform more advanced actions. This role should be granted only to staff users. ","kind":"symbol","title":"admin","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/admin","interfaceLanguage":"swift"}},"summary":"This role allows the member to perform more advanced actions. This role should be granted only to staff users."},{"rawIndexableTextContent":"The config object of the ChatClient instance.  Discussion This value can’t be mutated and can only be set when initializing a new ChatClient instance.","kind":"symbol","title":"config","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/config","interfaceLanguage":"swift"}},"summary":"The config object of the ChatClient instance."},{"rawIndexableTextContent":"Creates VideoAttachmentPayload instance.  Discussion Use this initializer if the attachment is already uploaded and you have the remote URLs.","kind":"symbol","title":"init(title:videoRemoteURL:file:extraData:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/init(title:videoRemoteURL:file:extraData:)","interfaceLanguage":"swift"}},"summary":"Creates VideoAttachmentPayload instance."},{"rawIndexableTextContent":"Triggered when a reaction is updated. ","kind":"symbol","title":"ReactionUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a reaction is updated."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.formIndex(before:). ","kind":"symbol","title":"formIndex(before:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formIndex(before:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.formIndex(before:)."},{"rawIndexableTextContent":"Inherited from SetAlgebra.init(arrayLiteral:). ","kind":"symbol","title":"init(arrayLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.init(arrayLiteral:)."},{"rawIndexableTextContent":"The type of the channel is custom.  Discussion Only small letters, underscore and numbers should be used","kind":"symbol","title":"ChannelType.custom(_:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/custom(_:)","interfaceLanguage":"swift"}},"summary":"The type of the channel is custom."},{"rawIndexableTextContent":"Video ","kind":"symbol","title":"AttachmentFileType.avi","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/avi","interfaceLanguage":"swift"}},"summary":"Video"},{"rawIndexableTextContent":"A wrapper object for ChatChannelMemberController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatChannelMemberController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChatChannelMemberController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Searches users for the given query.  Search query. Called when the controller has finished fetching remote data. If the data fetching fails, the error variable contains more details about the problem. Discussion When this function is called, users property of this controller will refresh with new users matching the term. The delegate function didChangeUsers will also be called. Currently, no local data will be searched, only remote data will be queried.","kind":"symbol","title":"search(query:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/search(query:completion:)","interfaceLanguage":"swift"}},"summary":"Searches users for the given query."},{"rawIndexableTextContent":"Inherited from Sequence.contains(where:). ","kind":"symbol","title":"contains(where:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/contains(where:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.contains(where:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a new CurrentUserController instance.  Return Value A new instance of CurrentChatUserController.","kind":"symbol","title":"currentUserController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/currentUserController()","interfaceLanguage":"swift"}},"summary":"Creates a new CurrentUserController instance."},{"rawIndexableTextContent":"A flag indicating whether the message is a silent message.  Discussion Silent messages are special messages that don’t increase the unread messages count nor mark a channel as unread.","kind":"symbol","title":"isSilent","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/isSilent","interfaceLanguage":"swift"}},"summary":"A flag indicating whether the message is a silent message."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"The ban expiration date. ","kind":"symbol","title":"expiredAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/expiredAt","interfaceLanguage":"swift"}},"summary":"The ban expiration date."},{"rawIndexableTextContent":"Channel mute details. If nil the channel is not muted by the current user.  Discussion The muteDetails property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"muteDetails","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/muteDetails","interfaceLanguage":"swift"}},"summary":"Channel mute details. If nil the channel is not muted by the current user."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Init a users query.  a users filter. Empty filter will return all users. a sorting list for users. a page size for pagination.","kind":"symbol","title":"init(filter:sort:pageSize:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery\/init(filter:sort:pageSize:)","interfaceLanguage":"swift"}},"summary":"Init a users query."},{"rawIndexableTextContent":"A channel identifier the event is observed in. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/cid","interfaceLanguage":"swift"}},"summary":"A channel identifier the event is observed in."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"Encapsulates the components of a log message. ","kind":"symbol","title":"LogDetails","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails","interfaceLanguage":"swift"}},"summary":"Encapsulates the components of a log message."},{"rawIndexableTextContent":"Configured for apps such as WhatsApp or Facebook Messenger. ","kind":"symbol","title":"ChannelType.messaging","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/messaging","interfaceLanguage":"swift"}},"summary":"Configured for apps such as WhatsApp or Facebook Messenger."},{"rawIndexableTextContent":"The controller will update the list of observed channels.  The controller emitting the change callback.","kind":"symbol","title":"controllerWillChangeChannels(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controllerWillChangeChannels(_:)","interfaceLanguage":"swift"}},"summary":"The controller will update the list of observed channels."},{"rawIndexableTextContent":"true if the channel has typing events enabled. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areTypingEventsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areTypingEventsEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel has typing events enabled. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"A channel identifier the members should be fetched for. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/cid","interfaceLanguage":"swift"}},"summary":"A channel identifier the members should be fetched for."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.pdf","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/pdf","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"azerbaijani","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/azerbaijani","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Creates FileAttachmentPayload instance.  Discussion Use this initializer if the attachment is already uploaded and you have the remote URLs.","kind":"symbol","title":"init(title:assetRemoteURL:file:extraData:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/init(title:assetRemoteURL:file:extraData:)","interfaceLanguage":"swift"}},"summary":"Creates FileAttachmentPayload instance."},{"rawIndexableTextContent":"Init a channels query.  a channels filter. a sorting list for channels. a page size for pagination. a number of messages for the channel to be retrieved.","kind":"symbol","title":"init(filter:sort:pageSize:messagesLimit:membersLimit:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/init(filter:sort:pageSize:messagesLimit:membersLimit:)","interfaceLanguage":"swift"}},"summary":"Init a channels query."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"When used, the backend returns messages pinned earlier then the message with the given id.  Discussion When inclusive == true the results include the message with the given id.","kind":"symbol","title":"PinnedMessagesPagination.before(_:inclusive:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/before(_:inclusive:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages pinned earlier then the message with the given id."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"HealthCheckEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HealthCheckEvent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An indicator whether the user is banned. ","kind":"symbol","title":"isBanned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/isBanned","interfaceLanguage":"swift"}},"summary":"An indicator whether the user is banned."},{"rawIndexableTextContent":"Filter on ids greater than or equal to the given value. ","kind":"symbol","title":"PaginationParameter.greaterThanOrEqual(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/greaterThanOrEqual(_:)","interfaceLanguage":"swift"}},"summary":"Filter on ids greater than or equal to the given value."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When the total count of unread messages (across all channels the user is a member) changes (when clients from the user affected by the change). ","kind":"symbol","title":"notificationMarkRead","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationMarkRead","interfaceLanguage":"swift"}},"summary":"When the total count of unread messages (across all channels the user is a member) changes (when clients from the user affected by the change)."},{"rawIndexableTextContent":"The current user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/user","interfaceLanguage":"swift"}},"summary":"The current user."},{"rawIndexableTextContent":"CurrentChatUserController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"CurrentChatUserControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate","interfaceLanguage":"swift"}},"summary":"CurrentChatUserController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The messages matching the query of this controller.  Discussion To observe changes of the messages, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"messages","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/messages","interfaceLanguage":"swift"}},"summary":"The messages matching the query of this controller."},{"rawIndexableTextContent":"Stops program execution with Swift.assertionFailure. In RELEASE builds only logs the failure.  A custom message to log if condition is evaluated to false.","kind":"symbol","title":"assertionFailure(_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/assertionFailure(_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Stops program execution with Swift.assertionFailure. In RELEASE builds only logs the failure."},{"rawIndexableTextContent":"Mutes the user this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"mute(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/mute(completion:)","interfaceLanguage":"swift"}},"summary":"Mutes the user this controller manages."},{"rawIndexableTextContent":"Truncates the channel this controller manages.  If true, skips sending push notification to channel members. If true, messages are deleted instead of hiding. A system message to be added via truncation. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error. Discussion Removes all of the messages of the channel but doesn’t affect the channel data or members.","kind":"symbol","title":"truncateChannel(skipPush:hardDelete:systemMessage:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/truncateChannel(skipPush:hardDelete:systemMessage:completion:)","interfaceLanguage":"swift"}},"summary":"Truncates the channel this controller manages."},{"rawIndexableTextContent":"Creates a new instance of ChatClient.  The config object for the Client. See ChatClientConfig for all configuration options. In case of token expiration this closure is used to obtain a new token","kind":"symbol","title":"init(config:tokenProvider:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/init(config:tokenProvider:)","interfaceLanguage":"swift"}},"summary":"Creates a new instance of ChatClient."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RandomAccessCollection Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/RandomAccessCollection-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"An HTTP status code. ","kind":"symbol","title":"statusCode","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/statusCode","interfaceLanguage":"swift"}},"summary":"An HTTP status code."},{"rawIndexableTextContent":"Set the delegate of ChatMessageSearchController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatMessageSearchController to observe the changes in the system."},{"rawIndexableTextContent":"The channel identifier the current user was invited to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the current user was invited to."},{"rawIndexableTextContent":"The event timestamp ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp"},{"rawIndexableTextContent":"A publisher emitting a new value every time the user changes. ","kind":"symbol","title":"userChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/userChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the user changes."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"Disconnects the chat client from the chat servers. No further updates from the servers are received. ","kind":"symbol","title":"disconnect()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/disconnect()","interfaceLanguage":"swift"}},"summary":"Disconnects the chat client from the chat servers. No further updates from the servers are received."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Inherited from OptionSet.intersection(_:). ","kind":"symbol","title":"intersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/intersection(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.intersection(_:)."},{"rawIndexableTextContent":"Sets the user token to the client, this method is only needed to perform API calls without connecting as a user. You should only use this in special cases like a notification service or other background process ","kind":"symbol","title":"setToken(token:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/setToken(token:)","interfaceLanguage":"swift"}},"summary":"Sets the user token to the client, this method is only needed to perform API calls without connecting as a user. You should only use this in special cases like a notification service or other background process"},{"rawIndexableTextContent":"Log a debug message.  Message to be logged Function of the caller File of the caller Line number of the caller","kind":"symbol","title":"debug(_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/debug(_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Log a debug message."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The channel watchers matching the query. To observe the watcher list changes, set your class as a delegate of this controller or use the provided Combine publishers. ","kind":"symbol","title":"watchers","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/watchers","interfaceLanguage":"swift"}},"summary":"The channel watchers matching the query. To observe the watcher list changes, set your class as a delegate of this controller or use the provided Combine publishers."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hebrew","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/hebrew","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns true is the ban is enabled for the channel.  a channel.","kind":"symbol","title":"isEnabled(for:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/isEnabled(for:)","interfaceLanguage":"swift"}},"summary":"Returns true is the ban is enabled for the channel."},{"rawIndexableTextContent":"The “left-hand” side of the filter. Specifies the name of the field the filter should match. Some operators like and or or, don’t require the key value to be present. ","kind":"symbol","title":"key","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/key","interfaceLanguage":"swift"}},"summary":"The “left-hand” side of the filter. Specifies the name of the field the filter should match. Some operators like and or or, don’t require the key value to be present."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A unique identifier of a message. ","kind":"symbol","title":"MessageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageId","interfaceLanguage":"swift"}},"summary":"A unique identifier of a message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/reactionType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The unread counts of the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts of the current user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hausa","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/hausa","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message a reaction is added to. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent\/message","interfaceLanguage":"swift"}},"summary":"The message a reaction is added to."},{"rawIndexableTextContent":"ChatUserSearchController is a controller class which allows observing a list of chat users based on the provided query. ","kind":"symbol","title":"ChatUserSearchController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController","interfaceLanguage":"swift"}},"summary":"ChatUserSearchController is a controller class which allows observing a list of chat users based on the provided query."},{"rawIndexableTextContent":"Controller observed a change in the channel member list. ","kind":"symbol","title":"memberListController(_:didChangeMembers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate\/memberListController(_:didChangeMembers:)-398mm","interfaceLanguage":"swift"}},"summary":"Controller observed a change in the channel member list."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.UnsupportedEventType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedEventType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"estonian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/estonian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches values by performing text search with the specified value. ","kind":"symbol","title":"FilterOperator.query","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/query","interfaceLanguage":"swift"}},"summary":"Matches values by performing text search with the specified value."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A command in a message, e.g. \/giphy. ","kind":"symbol","title":"Command","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command","interfaceLanguage":"swift"}},"summary":"A command in a message, e.g. \/giphy."},{"rawIndexableTextContent":"true if the member if banned from the channel.  Discussion Learn more about banning in the documentation.","kind":"symbol","title":"isBannedFromChannel","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/isBannedFromChannel","interfaceLanguage":"swift"}},"summary":"true if the member if banned from the channel."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"A flag indicating whether the message is a shadowed message.  Discussion Shadowed message are special messages that are sent from shadow banned users.","kind":"symbol","title":"isShadowed","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/isShadowed","interfaceLanguage":"swift"}},"summary":"A flag indicating whether the message is a shadowed message."},{"rawIndexableTextContent":"Inherited from Error.localizedDescription. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Inherited from Error.localizedDescription."},{"rawIndexableTextContent":"A Boolean value that returns wether pagination is finished ","kind":"symbol","title":"hasLoadedAllPreviousChannels","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/hasLoadedAllPreviousChannels","interfaceLanguage":"swift"}},"summary":"A Boolean value that returns wether pagination is finished"},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"The last time the user has read the channel. ","kind":"symbol","title":"lastReadAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead\/lastReadAt","interfaceLanguage":"swift"}},"summary":"The last time the user has read the channel."},{"rawIndexableTextContent":"When someone else from channel has muted someone. ","kind":"symbol","title":"notificationChannelMutesUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationChannelMutesUpdated","interfaceLanguage":"swift"}},"summary":"When someone else from channel has muted someone."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.min(by:). ","kind":"symbol","title":"min(by:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/min(by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.min(by:)."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"Inherited from Collection.count. ","kind":"symbol","title":"count","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/count-4sl88","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.count."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Text ","kind":"symbol","title":"AttachmentFileType.rtf","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/rtf","interfaceLanguage":"swift"}},"summary":"Text"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The type that describes a message reaction type.  Overview The reaction has underlaying type String what gives the flexibility to choose the way how the reaction will be displayed in the application. Common examples are: “like”, “love”, “smile”, etc.","kind":"symbol","title":"MessageReactionType","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType","interfaceLanguage":"swift"}},"summary":"The type that describes a message reaction type."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChannelCodingKeys.memberCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/memberCount","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"When a user presence changed, e.g. online, offline, away. ","kind":"symbol","title":"userPresenceChanged","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userPresenceChanged","interfaceLanguage":"swift"}},"summary":"When a user presence changed, e.g. online, offline, away."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"originalLanguage","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload\/originalLanguage","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"The membership information of the current user. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/member","interfaceLanguage":"swift"}},"summary":"The membership information of the current user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller changed the list of observed users.  The controller emitting the change callback. The change to the list of users.","kind":"symbol","title":"controller(_:didChangeUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate\/controller(_:didChangeUsers:)-12q4i","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed users."},{"rawIndexableTextContent":"The identifier of tge user this controller observes. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/userId","interfaceLanguage":"swift"}},"summary":"The identifier of tge user this controller observes."},{"rawIndexableTextContent":"Quoted message.  Discussion If message is inline reply this property will contain the message quoted by this reply.","kind":"symbol","title":"quotedMessage","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/quotedMessage","interfaceLanguage":"swift"}},"summary":"Quoted message."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"TranslationLanguage","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns max possible attachment size in bytes. The value is taken from custom maxAttachmentSize type custom CDNClient type. The default value is 20 MiB. ","kind":"symbol","title":"maxAttachmentSize","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/maxAttachmentSize","interfaceLanguage":"swift"}},"summary":"Returns max possible attachment size in bytes. The value is taken from custom maxAttachmentSize type custom CDNClient type. The default value is 20 MiB."},{"rawIndexableTextContent":"Inherited from LogDestination.isEnabled(level:). ","kind":"symbol","title":"isEnabled(level:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/isEnabled(level:)","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.isEnabled(level:)."},{"rawIndexableTextContent":"The controller observed a change in the ChatChannelMember entity. ","kind":"symbol","title":"memberController(_:didUpdateMember:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate\/memberController(_:didUpdateMember:)-6fzlv","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatChannelMember entity."},{"rawIndexableTextContent":"A publisher emitting a new value every time the list of the replies of the message has changes. ","kind":"symbol","title":"repliesChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/repliesChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the list of the replies of the message has changes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CurrentChatUserControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/CurrentChatUserControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An unexpected error. ","kind":"symbol","title":"ClientError.Unexpected","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unexpected","interfaceLanguage":"swift"}},"summary":"An unexpected error."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The base class for controllers which represent and control a data entity. Not meant to be used directly. ","kind":"symbol","title":"DataController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController","interfaceLanguage":"swift"}},"summary":"The base class for controllers which represent and control a data entity. Not meant to be used directly."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"An event creation date. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"An event creation date."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The inviter. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/user","interfaceLanguage":"swift"}},"summary":"The inviter."},{"rawIndexableTextContent":"Destinations for the default logger. Please see LogDestination. Defaults to only ConsoleLogDestination, which only prints the messages.  Discussion Other options in ChatClientConfig.Logging will not take affect if this is changed.","kind":"symbol","title":"destinations","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/destinations","interfaceLanguage":"swift"}},"summary":"Destinations for the default logger. Please see LogDestination. Defaults to only ConsoleLogDestination, which only prints the messages."},{"rawIndexableTextContent":"The user who read the channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead\/user","interfaceLanguage":"swift"}},"summary":"The user who read the channel."},{"rawIndexableTextContent":"Sending of the message failed after multiple of tries. The system is not trying to send this message anymore. ","kind":"symbol","title":"LocalMessageState.sendingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/sendingFailed","interfaceLanguage":"swift"}},"summary":"Sending of the message failed after multiple of tries. The system is not trying to send this message anymore."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidChannelId\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"greek","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/greek","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The unread counts of the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts of the current user."},{"rawIndexableTextContent":"Set the delegate of ChatMemberController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatMemberController to observe the changes in the system."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CodingKey Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/CodingKey-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The currently logged-in user. nil if the connection hasn’t been fully established yet, or the connection wasn’t successful. ","kind":"symbol","title":"currentUser","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUser","interfaceLanguage":"swift"}},"summary":"The currently logged-in user. nil if the connection hasn’t been fully established yet, or the connection wasn’t successful."},{"rawIndexableTextContent":"Pins a message.  The amount of seconds the message will be pinned.","kind":"symbol","title":"expirationTime(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/expirationTime(_:)","interfaceLanguage":"swift"}},"summary":"Pins a message."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from SetAlgebra.subtract(_:). ","kind":"symbol","title":"subtract(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/subtract(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.subtract(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showLevel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showLevel","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"giphy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/giphy","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:). ","kind":"symbol","title":"elementsEqual(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/elementsEqual(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.elementsEqual(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"persian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/persian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Application custom types. ","kind":"symbol","title":"linkPreview","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/linkPreview","interfaceLanguage":"swift"}},"summary":"Application custom types."},{"rawIndexableTextContent":"The user who sent a message. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who sent a message."},{"rawIndexableTextContent":"Image (avatar) url for this user. ","kind":"symbol","title":"imageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/imageURL","interfaceLanguage":"swift"}},"summary":"Image (avatar) url for this user."},{"rawIndexableTextContent":"An extra-data-specific namespace for the FilterKeys suitable to be used for ChannelListQuery. ","kind":"symbol","title":"ChannelListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListFilterScope","interfaceLanguage":"swift"}},"summary":"An extra-data-specific namespace for the FilterKeys suitable to be used for ChannelListQuery."},{"rawIndexableTextContent":"The flag saying if watching was started or stopped ","kind":"symbol","title":"isStarted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/isStarted","interfaceLanguage":"swift"}},"summary":"The flag saying if watching was started or stopped"},{"rawIndexableTextContent":"Inherited from Collection.randomElement(using:). ","kind":"symbol","title":"randomElement(using:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/randomElement(using:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.randomElement(using:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"lineNumber","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/lineNumber","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"A filter key for matching the type value. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/type","interfaceLanguage":"swift"}},"summary":"A filter key for matching the type value."},{"rawIndexableTextContent":"The deleted reaction. ","kind":"symbol","title":"reaction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/reaction","interfaceLanguage":"swift"}},"summary":"The deleted reaction."},{"rawIndexableTextContent":"Inherited from LogFormatter.format(logDetails:message:). ","kind":"symbol","title":"format(logDetails:message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PrefixLogFormatter\/format(logDetails:message:)","interfaceLanguage":"swift"}},"summary":"Inherited from LogFormatter.format(logDetails:message:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(content:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownNotificationContent\/init(content:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.InvalidToken","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidToken","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Returns the attachments of .file type.  Discussion The fileAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"fileAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/fileAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .file type."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"vietnamese","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/vietnamese","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"A type alias for attachment with ImageAttachmentPayload payload type.  Discussion The ChatMessageImageAttachment attachment will be added to the message automatically if the message was sent with attached AnyAttachmentPayload created with local URL and .image attachment type.","kind":"symbol","title":"ChatMessageImageAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageImageAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with ImageAttachmentPayload payload type."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"The current state of the Controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the Controller."},{"rawIndexableTextContent":"Syncing of the message failed after multiple of tries. The system is not trying to sync this message anymore. ","kind":"symbol","title":"LocalMessageState.syncingFailed","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/syncingFailed","interfaceLanguage":"swift"}},"summary":"Syncing of the message failed after multiple of tries. The system is not trying to sync this message anymore."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"authorId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/authorId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(cid:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/init(cid:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"AttachmentAction.ActionStyle.default","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/default","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageFilter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/messageFilter","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"LocalizedError Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/LocalizedError-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type, e.g. button. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/type","interfaceLanguage":"swift"}},"summary":"A type, e.g. button."},{"rawIndexableTextContent":"A temporary message which is only delivered to one user. It is not stored in the channel history. Ephemeral messages are normally used by commands (e.g. \/giphy) to prompt messages or request for actions. ","kind":"symbol","title":"MessageType.ephemeral","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/ephemeral","interfaceLanguage":"swift"}},"summary":"A temporary message which is only delivered to one user. It is not stored in the channel history. Ephemeral messages are normally used by commands (e.g. \/giphy) to prompt messages or request for actions."},{"rawIndexableTextContent":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:). ","kind":"symbol","title":"init(stringLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(stringLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByStringLiteral.init(stringLiteral:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Decodes extra data as an instance of the given type.  Return Value Extra data of the given type or nil if decoding fails. The type an extra data should be decoded as.","kind":"symbol","title":"extraData(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/extraData(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes extra data as an instance of the given type."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"A wrapper object for UserListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatUserListController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for UserListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Enables message thread replies. Enabled by default. ","kind":"symbol","title":"repliesEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/repliesEnabled","interfaceLanguage":"swift"}},"summary":"Enables message thread replies. Enabled by default."},{"rawIndexableTextContent":"A type alias for attachment with FileAttachmentPayload payload type.  Discussion The ChatMessageFileAttachment attachment will be added to the message automatically if the message was sent with attached AnyAttachmentPayload created with local URL and .file attachment type.","kind":"symbol","title":"ChatMessageFileAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageFileAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with FileAttachmentPayload payload type."},{"rawIndexableTextContent":"The date the user was added to the channel. ","kind":"symbol","title":"memberCreatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/memberCreatedAt","interfaceLanguage":"swift"}},"summary":"The date the user was added to the channel."},{"rawIndexableTextContent":"The total number of reactions. ","kind":"symbol","title":"totalReactionsCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/totalReactionsCount","interfaceLanguage":"swift"}},"summary":"The total number of reactions."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"A dictionary containing the entire event JSON. ","kind":"symbol","title":"payload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/payload","interfaceLanguage":"swift"}},"summary":"A dictionary containing the entire event JSON."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Synchronizes the channel’s watchers with the backend.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"synchronize(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/synchronize(_:)","interfaceLanguage":"swift"}},"summary":"Synchronizes the channel’s watchers with the backend."},{"rawIndexableTextContent":"The position of the attachment within the message. The first attachment index is 0, then 1, etc. ","kind":"symbol","title":"index","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/index","interfaceLanguage":"swift"}},"summary":"The position of the attachment within the message. The first attachment index is 0, then 1, etc."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ukrainian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/ukrainian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Hashable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from Hashable.hash(into:)."},{"rawIndexableTextContent":"Matches values that are greater than a specified value. ","kind":"symbol","title":"FilterOperator.greater","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/greater","interfaceLanguage":"swift"}},"summary":"Matches values that are greater than a specified value."},{"rawIndexableTextContent":"The users matching the query. ","kind":"symbol","title":"users","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/users","interfaceLanguage":"swift"}},"summary":"The users matching the query."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatPushNotificationContent.reaction(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent\/reaction(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message is currently being synced ","kind":"symbol","title":"LocalMessageState.syncing","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/syncing","interfaceLanguage":"swift"}},"summary":"The message is currently being synced"},{"rawIndexableTextContent":"Inherited from Collection.prefix(through:). ","kind":"symbol","title":"prefix(through:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/prefix(through:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.prefix(through:)."},{"rawIndexableTextContent":"The identified of the message this controllers represents. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/messageId","interfaceLanguage":"swift"}},"summary":"The identified of the message this controllers represents."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.MissingLocalStorageURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingLocalStorageURL","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hiddenAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent\/hiddenAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Number of members inside each channel. ","kind":"symbol","title":"membersLimit","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/membersLimit","interfaceLanguage":"swift"}},"summary":"Number of members inside each channel."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/extraData","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Location-swift.struct\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"A type alias for attachment with AudioAttachmentPayload payload type.  Discussion The ChatMessageAudioAttachment attachment will be added to the message automatically if the message was sent with attached AnyAttachmentPayload created with local URL and .audio attachment type.","kind":"symbol","title":"ChatMessageAudioAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAudioAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with AudioAttachmentPayload payload type."},{"rawIndexableTextContent":"UserListSortingKey is keys by which you can get sorted users after query. ","kind":"symbol","title":"UserListSortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey","interfaceLanguage":"swift"}},"summary":"UserListSortingKey is keys by which you can get sorted users after query."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatUserListControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/ChatUserListControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.starts(with:). ","kind":"symbol","title":"starts(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/starts(with:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.starts(with:)."},{"rawIndexableTextContent":"The controller changed the list of observed messages.  The controller emitting the change callback. The change to the list of messages.","kind":"symbol","title":"controller(_:didChangeMessages:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate\/controller(_:didChangeMessages:)","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed messages."},{"rawIndexableTextContent":"Triggered when user is removed from global ban. ","kind":"symbol","title":"UserGloballyUnbannedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyUnbannedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user is removed from global ban."},{"rawIndexableTextContent":"An extra data. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/extraData","interfaceLanguage":"swift"}},"summary":"An extra data."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatPushNotificationContent.unknown(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent\/unknown(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"Inherited from Sequence.compactMap(_:). ","kind":"symbol","title":"compactMap(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/compactMap(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.compactMap(_:)."},{"rawIndexableTextContent":"Inherited from OptionSet.remove(_:). ","kind":"symbol","title":"remove(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/remove(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.remove(_:)."},{"rawIndexableTextContent":"When a user is added to a channel. ","kind":"symbol","title":"notificationAddedToChannel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationAddedToChannel","interfaceLanguage":"swift"}},"summary":"When a user is added to a channel."},{"rawIndexableTextContent":"Updates local state of attachment with provided id to be enqueued by attachment uploader.  The attachment identifier. The completion. Will be called on a callbackQueue when the database operation is finished. If operation fails, the completion will be called with an error.","kind":"symbol","title":"restartFailedAttachmentUploading(with:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/restartFailedAttachmentUploading(with:completion:)","interfaceLanguage":"swift"}},"summary":"Updates local state of attachment with provided id to be enqueued by attachment uploader."},{"rawIndexableTextContent":"Inherited from Collection.subscript(_:). ","kind":"symbol","title":"subscript(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/subscript(_:)-8x7kz","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.subscript(_:)."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(). ","kind":"symbol","title":"sorted()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/sorted()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.sorted()."},{"rawIndexableTextContent":"The controller observed a change in connection status. ","kind":"symbol","title":"connectionController(_:didUpdateConnectionStatus:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionControllerDelegate\/connectionController(_:didUpdateConnectionStatus:)-f9lt","interfaceLanguage":"swift"}},"summary":"The controller observed a change in connection status."},{"rawIndexableTextContent":"Loads the next page of reactions starting from the current fetched reactions.  The reactions page size. The completion is called when the network request is finished. If the request fails, the completion will be called with an error, if it succeeds it is called without an error and the delegate is notified of reactions changes.","kind":"symbol","title":"loadNextReactions(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/loadNextReactions(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads the next page of reactions starting from the current fetched reactions."},{"rawIndexableTextContent":"A protocol custom event payload must conform to. ","kind":"symbol","title":"CustomEventPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CustomEventPayload","interfaceLanguage":"swift"}},"summary":"A protocol custom event payload must conform to."},{"rawIndexableTextContent":"Hide the channel this controller manages from queryChannels for the user until a message is added.  Flag to remove channel history (false by default) The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"hideChannel(clearHistory:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/hideChannel(clearHistory:completion:)","interfaceLanguage":"swift"}},"summary":"Hide the channel this controller manages from queryChannels for the user until a message is added."},{"rawIndexableTextContent":"Creates new ChannelMemberListQuery instance.  The channel identifier. The members filter. Empty filter will return all users. The sorting for members list. The page size for pagination.","kind":"symbol","title":"init(cid:filter:sort:pageSize:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/init(cid:filter:sort:pageSize:)","interfaceLanguage":"swift"}},"summary":"Creates new ChannelMemberListQuery instance."},{"rawIndexableTextContent":"Contains the number of replies for this message. ","kind":"symbol","title":"replyCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/replyCount","interfaceLanguage":"swift"}},"summary":"Contains the number of replies for this message."},{"rawIndexableTextContent":"Inherited from Collection.isEmpty. ","kind":"symbol","title":"isEmpty","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/isEmpty","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.isEmpty."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"A new item was inserted on the given index path. ","kind":"symbol","title":"ListChange.insert(_:index:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/insert(_:index:)","interfaceLanguage":"swift"}},"summary":"A new item was inserted on the given index path."},{"rawIndexableTextContent":"A type representing the uploading state for attachments that require prior uploading. ","kind":"symbol","title":"AttachmentUploadingState","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState","interfaceLanguage":"swift"}},"summary":"A type representing the uploading state for attachments that require prior uploading."},{"rawIndexableTextContent":"The channel identifier the message was sent to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the message was sent to."},{"rawIndexableTextContent":"The reactions the message controller observes. ","kind":"symbol","title":"reactions","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/reactions","interfaceLanguage":"swift"}},"summary":"The reactions the message controller observes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A title, usually the name of the file. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A title, usually the name of the file."},{"rawIndexableTextContent":"A list of users that are mentioned in this message.  Discussion The mentionedUsers property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"mentionedUsers","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/mentionedUsers","interfaceLanguage":"swift"}},"summary":"A list of users that are mentioned in this message."},{"rawIndexableTextContent":"The uploading state. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState\/state","interfaceLanguage":"swift"}},"summary":"The uploading state."},{"rawIndexableTextContent":"Inherited from OptionSet.remove(_:). ","kind":"symbol","title":"remove(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/remove(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.remove(_:)."},{"rawIndexableTextContent":"The channel a message was sent to. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel a message was sent to."},{"rawIndexableTextContent":"Inherited from OptionSet.insert(_:). ","kind":"symbol","title":"insert(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/insert(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.insert(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A query options. ","kind":"symbol","title":"options","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/options","interfaceLanguage":"swift"}},"summary":"A query options."},{"rawIndexableTextContent":"A protocol to which all controllers conform to.  Overview This protocol is not meant to be adopted by your custom types.","kind":"symbol","title":"Controller","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Controller","interfaceLanguage":"swift"}},"summary":"A protocol to which all controllers conform to."},{"rawIndexableTextContent":"The channel a message was deleted from. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel a message was deleted from."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"memberUserId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberEvent\/memberUserId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message delivery state for message that is successfully sent. ","kind":"symbol","title":"sent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/sent","interfaceLanguage":"swift"}},"summary":"The message delivery state for message that is successfully sent."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"hasAttachmentsOfType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/hasAttachmentsOfType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userController(_:didUpdateUser:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/userController(_:didUpdateUser:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"bulgarian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/bulgarian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChannelEventsController is a controller class which allows to observe channel events and send custom events. ","kind":"symbol","title":"ChannelEventsController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelEventsController","interfaceLanguage":"swift"}},"summary":"ChannelEventsController is a controller class which allows to observe channel events and send custom events."},{"rawIndexableTextContent":"The channel the controller represents.  Discussion To observe changes of the channel, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"channel","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/channel","interfaceLanguage":"swift"}},"summary":"The channel the controller represents."},{"rawIndexableTextContent":"Inherited from OptionSet.symmetricDifference(_:). ","kind":"symbol","title":"symmetricDifference(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/symmetricDifference(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.symmetricDifference(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Loads next messages.  Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextMessages(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/loadNextMessages(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next messages."},{"rawIndexableTextContent":"Deletes the reaction from the message this controller manages.  The reaction type. The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"deleteReaction(_:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/deleteReaction(_:completion:)","interfaceLanguage":"swift"}},"summary":"Deletes the reaction from the message this controller manages."},{"rawIndexableTextContent":"A pagination for messages (see MessagesPagination). ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/pagination","interfaceLanguage":"swift"}},"summary":"A pagination for messages (see MessagesPagination)."},{"rawIndexableTextContent":"A publisher emitting a new value every time the list of the messages matching the query changes. ","kind":"symbol","title":"messagesChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/messagesChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the list of the messages matching the query changes."},{"rawIndexableTextContent":"The base url for StreamChat data center located in Dublin. ","kind":"symbol","title":"dublin","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/dublin","interfaceLanguage":"swift"}},"summary":"The base url for StreamChat data center located in Dublin."},{"rawIndexableTextContent":"A protocol to which all values that can be used as Filter values conform.  Overview Only types representing text, numbers, booleans, dates, and other filters can be on the “right-hand” side of Filter.","kind":"symbol","title":"FilterValue","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterValue","interfaceLanguage":"swift"}},"summary":"A protocol to which all values that can be used as Filter values conform."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/ChatChannel\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Init an attachment action.  a name. a value. a style. a type. a text.","kind":"symbol","title":"init(name:value:style:type:text:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/init(name:value:style:type:text:)","interfaceLanguage":"swift"}},"summary":"Init an attachment action."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.xz","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/xz","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"Channel type this query handles. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/type","interfaceLanguage":"swift"}},"summary":"Channel type this query handles."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"Represents a payload for attachments with .image type. ","kind":"symbol","title":"ImageAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .image type."},{"rawIndexableTextContent":"The channel member. ","kind":"symbol","title":"member","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/member","interfaceLanguage":"swift"}},"summary":"The channel member."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"swahili","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/swahili","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Creates a Token instance from the provided rawValue if it’s valid.  The token string in JWT format. Discussion ClientError.InvalidToken will be thrown if token string is invalid.","kind":"symbol","title":"init(rawValue:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Creates a Token instance from the provided rawValue if it’s valid."},{"rawIndexableTextContent":"Triggered when a channel is hidden. ","kind":"symbol","title":"ChannelHiddenEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a channel is hidden."},{"rawIndexableTextContent":"Triggered when user is banned not in a specific channel but globally. ","kind":"symbol","title":"UserGloballyBannedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyBannedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user is banned not in a specific channel but globally."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStoreProvider\/client","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The message delivery status. Always returns nil when the message is authored by another user. Always returns nil when the message is system\/error\/ephemeral\/deleted. ","kind":"symbol","title":"deliveryStatus","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/deliveryStatus","interfaceLanguage":"swift"}},"summary":"The message delivery status. Always returns nil when the message is authored by another user. Always returns nil when the message is system\/error\/ephemeral\/deleted."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controllers already fetched local data if any. ","kind":"symbol","title":"DataController.State.localDataFetched","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/localDataFetched","interfaceLanguage":"swift"}},"summary":"The controllers already fetched local data if any."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"ChannelMemberListSortingKey describes the keys by which you can get sorted channel members after query. ","kind":"symbol","title":"ChannelMemberListSortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey","interfaceLanguage":"swift"}},"summary":"ChannelMemberListSortingKey describes the keys by which you can get sorted channel members after query."},{"rawIndexableTextContent":"The user who truncated a channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who truncated a channel."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object for ChatChannelWatcherListController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatChannelWatcherListController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for ChatChannelWatcherListController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.dictionary(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/dictionary(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A local state of the attachment. Applies only for attachments linked to the new messages sent from current device. ","kind":"symbol","title":"LocalAttachmentState","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState","interfaceLanguage":"swift"}},"summary":"A local state of the attachment. Applies only for attachments linked to the new messages sent from current device."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"chineseTraditional","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/chineseTraditional","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Translates the message to the given language. The translated message will be returned via didChangeMessage delegate callback. Translation will be in message.translations[language]  The language message text should be translated to. The completion. Will be called on a callbackQueue when the operation is finished. If operation fails, the completion is called with the error.","kind":"symbol","title":"translate(to:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/translate(to:completion:)","interfaceLanguage":"swift"}},"summary":"Translates the message to the given language. The translated message will be returned via didChangeMessage delegate callback. Translation will be in message.translations[language]"},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"The channel identifier the current user has rejected an intivation to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the current user has rejected an intivation to."},{"rawIndexableTextContent":"Matches all the values specified in an array. ","kind":"symbol","title":"FilterOperator.and","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/and","interfaceLanguage":"swift"}},"summary":"Matches all the values specified in an array."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatChannelListControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/ChatChannelListControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An underlying error. ","kind":"symbol","title":"underlyingError","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/underlyingError","interfaceLanguage":"swift"}},"summary":"An underlying error."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"english","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/english","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChatConnectionController uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatConnectionControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatConnectionController uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"A filter key for matching the frozen value. ","kind":"symbol","title":"frozen","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/frozen","interfaceLanguage":"swift"}},"summary":"A filter key for matching the frozen value."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Called when the observed controller changed it’s state.  The controller the change is related to. The new state of the controller.","kind":"symbol","title":"controller(_:didChangeState:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/controller(_:didChangeState:)","interfaceLanguage":"swift"}},"summary":"Called when the observed controller changed it’s state."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Advanced settings for the local caching and model serialization. ","kind":"symbol","title":"ChatClientConfig.LocalCaching","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/LocalCaching-swift.struct","interfaceLanguage":"swift"}},"summary":"Advanced settings for the local caching and model serialization."},{"rawIndexableTextContent":"The channel identifier the current user has become a member of. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the current user has become a member of."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Searches users for the given term.  Search term. If empty string or nil, all users are fetched. Called when the controller has finished fetching remote data. If the data fetching fails, the error variable contains more details about the problem. Discussion When this function is called, users property of this controller will refresh with new users matching the term. The delegate function didChangeUsers will also be called. Currently, no local data will be searched, only remote data will be queried.","kind":"symbol","title":"search(term:completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/search(term:completion:)","interfaceLanguage":"swift"}},"summary":"Searches users for the given term."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"provider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice\/provider","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.string(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/string(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Flags the user this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"flag(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/flag(completion:)","interfaceLanguage":"swift"}},"summary":"Flags the user this controller manages."},{"rawIndexableTextContent":"Inherited from CustomDebugStringConvertible.debugDescription. ","kind":"symbol","title":"debugDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery\/debugDescription","interfaceLanguage":"swift"}},"summary":"Inherited from CustomDebugStringConvertible.debugDescription."},{"rawIndexableTextContent":"Sort users by ban status. ","kind":"symbol","title":"UserListSortingKey.isBanned","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/isBanned","interfaceLanguage":"swift"}},"summary":"Sort users by ban status."},{"rawIndexableTextContent":"A sorting for the query (see Sorting). ","kind":"symbol","title":"sort","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery\/sort","interfaceLanguage":"swift"}},"summary":"A sorting for the query (see Sorting)."},{"rawIndexableTextContent":"Inherited from OptionSet.insert(_:). ","kind":"symbol","title":"insert(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/insert(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.insert(_:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"Loads next messages from backend.  ID of the current first message. You will get messages newer than the provided ID. Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextMessages(after:limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadNextMessages(after:limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next messages from backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"markAllRead(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/markAllRead(completion:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"A created date. ","kind":"symbol","title":"ChannelCodingKeys.createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/createdAt","interfaceLanguage":"swift"}},"summary":"A created date."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"OptionSet Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/OptionSet-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"true if typing event happened in the message thread. ","kind":"symbol","title":"isThread","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/isThread","interfaceLanguage":"swift"}},"summary":"true if typing event happened in the message thread."},{"rawIndexableTextContent":"Inherited from ChatUserListControllerDelegate.memberListController(_:didChangeMembers:). ","kind":"symbol","title":"memberListController(_:didChangeMembers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/memberListController(_:didChangeMembers:)","interfaceLanguage":"swift"}},"summary":"Inherited from ChatUserListControllerDelegate.memberListController(_:didChangeMembers:)."},{"rawIndexableTextContent":"The token which can be used during the development.  Discussion Is used by development(userId:) token provider.","kind":"symbol","title":"development(userId:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/development(userId:)","interfaceLanguage":"swift"}},"summary":"The token which can be used during the development."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"malay","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/malay","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Triggered when the current user rejects an invite to a channel. ","kind":"symbol","title":"NotificationInviteRejectedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when the current user rejects an invite to a channel."},{"rawIndexableTextContent":"Base class for log destinations. Already implements basic functionaly to allow easy destination implementation. Extending this class, instead of implementing LogDestination is easier (and recommended) for creating new destinations. ","kind":"symbol","title":"BaseLogDestination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination","interfaceLanguage":"swift"}},"summary":"Base class for log destinations. Already implements basic functionaly to allow easy destination implementation. Extending this class, instead of implementing LogDestination is easier (and recommended) for creating new destinations."},{"rawIndexableTextContent":"Init an attachment file type by a file extension.  a file extension.","kind":"symbol","title":"init(ext:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/init(ext:)","interfaceLanguage":"swift"}},"summary":"Init an attachment file type by a file extension."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type representing a chat channel member. ChatChannelMember is an immutable snapshot of a channel entity at the given time. ","kind":"symbol","title":"ChatChannelMember","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember","interfaceLanguage":"swift"}},"summary":"A type representing a chat channel member. ChatChannelMember is an immutable snapshot of a channel entity at the given time."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.number(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/number(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Unbans the channel member.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"unban(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/unban(completion:)","interfaceLanguage":"swift"}},"summary":"Unbans the channel member."},{"rawIndexableTextContent":"The use who deleted a reaction. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/user","interfaceLanguage":"swift"}},"summary":"The use who deleted a reaction."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"The current state of the controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/state-swift.property","interfaceLanguage":"swift"}},"summary":"The current state of the controller."},{"rawIndexableTextContent":"Sends the start typing event.  a completion block with an error if the request was failed. Discussion For the majority of cases, you don’t need to call sendStartTypingEvent directly. Instead, use sendKeystrokeEvent method and call it every time the user presses a key. The controller will manage sendStartTypingEvent\/sendStopTypingEvent calls automatically.","kind":"symbol","title":"sendStartTypingEvent(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStartTypingEvent(completion:)","interfaceLanguage":"swift"}},"summary":"Sends the start typing event."},{"rawIndexableTextContent":"Inherited from LogDestination.showIdentifier. ","kind":"symbol","title":"showIdentifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showIdentifier","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showIdentifier."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"A filter key for matching the isOnline value. ","kind":"symbol","title":"isOnline","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/isOnline","interfaceLanguage":"swift"}},"summary":"A filter key for matching the isOnline value."},{"rawIndexableTextContent":"The controller observed a change in the Channel entity. ","kind":"symbol","title":"channelController(_:didUpdateChannel:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate\/channelController(_:didUpdateChannel:)-34fpl","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the Channel entity."},{"rawIndexableTextContent":"Writes a given message to the desired output. By minimum, subclasses should implement this function, since it handles outputting the message. ","kind":"symbol","title":"write(message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/write(message:)","interfaceLanguage":"swift"}},"summary":"Writes a given message to the desired output. By minimum, subclasses should implement this function, since it handles outputting the message."},{"rawIndexableTextContent":"Lazily apply transformation to sequence ","kind":"symbol","title":"lazyCachedMap(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lazyCachedMap(_:)","interfaceLanguage":"swift"}},"summary":"Lazily apply transformation to sequence"},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.ppt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/ppt","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"memberListController(_:didChangeMembers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate\/memberListController(_:didChangeMembers:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"Init sorting options.  a sorting key. a direction of the sorting.","kind":"symbol","title":"init(key:isAscending:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/init(key:isAscending:)","interfaceLanguage":"swift"}},"summary":"Init sorting options."},{"rawIndexableTextContent":"A title, usually the name of the audio. ","kind":"symbol","title":"title","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/title","interfaceLanguage":"swift"}},"summary":"A title, usually the name of the audio."},{"rawIndexableTextContent":"The subsystem responsible for offline support. ","kind":"symbol","title":"offlineSupport","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/offlineSupport","interfaceLanguage":"swift"}},"summary":"The subsystem responsible for offline support."},{"rawIndexableTextContent":"The number of reactions per reaction type. ","kind":"symbol","title":"reactionCounts","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/reactionCounts","interfaceLanguage":"swift"}},"summary":"The number of reactions per reaction type."},{"rawIndexableTextContent":"Init with a custom server URL.  an URL","kind":"symbol","title":"init(url:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/init(url:)","interfaceLanguage":"swift"}},"summary":"Init with a custom server URL."},{"rawIndexableTextContent":"Triggered when a new message is sent to a channel the current user is member of. ","kind":"symbol","title":"NotificationMessageNewEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a new message is sent to a channel the current user is member of."},{"rawIndexableTextContent":"The controller observed a change in the Channel entity. ","kind":"symbol","title":"channelController(_:didUpdateChannel:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/channelController(_:didUpdateChannel:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the Channel entity."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"A set of message ids flagged by the user.  Discussion Please be aware that the value of this field is not persisted on the server, and is valid only locally for the current session.","kind":"symbol","title":"flaggedMessageIDs","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser\/flaggedMessageIDs","interfaceLanguage":"swift"}},"summary":"A set of message ids flagged by the user."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionNotSuccessful\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"If set to true, ChatClient resets the local cache on the start.  Discussion You should set shouldFlushLocalStorageOnStart = true every time the changes in your code makes the local cache invalid.","kind":"symbol","title":"shouldFlushLocalStorageOnStart","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/shouldFlushLocalStorageOnStart","interfaceLanguage":"swift"}},"summary":"If set to true, ChatClient resets the local cache on the start."},{"rawIndexableTextContent":"Inherited from LogDestination.level. ","kind":"symbol","title":"level","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/level","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.level."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.InvalidChannelId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidChannelId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"arabic","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/arabic","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A type representing a unique identifier of a ChatChannel.  Overview It reflects channel’s type and a unique id.","kind":"symbol","title":"ChannelId","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId","interfaceLanguage":"swift"}},"summary":"A type representing a unique identifier of a ChatChannel."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedEventType\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Text ","kind":"symbol","title":"AttachmentFileType.txt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/txt","interfaceLanguage":"swift"}},"summary":"Text"},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"handleNotification(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatRemoteNotificationHandler\/handleNotification(completion:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"level","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/level","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"The id of the channel ","kind":"symbol","title":"ChannelCodingKeys.id","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/id","interfaceLanguage":"swift"}},"summary":"The id of the channel"},{"rawIndexableTextContent":"Date when the message got pinned ","kind":"symbol","title":"pinnedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails\/pinnedAt","interfaceLanguage":"swift"}},"summary":"Date when the message got pinned"},{"rawIndexableTextContent":"Includes all query options: state, watch and presence. ","kind":"symbol","title":"all","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/all","interfaceLanguage":"swift"}},"summary":"Includes all query options: state, watch and presence."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller observed a change in the UnreadCount. ","kind":"symbol","title":"currentUserController(_:didChangeCurrentUserUnreadCount:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate\/currentUserController(_:didChangeCurrentUserUnreadCount:)-3db5d","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the UnreadCount."},{"rawIndexableTextContent":"When a message reaction was added. ","kind":"symbol","title":"reactionNew","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/reactionNew","interfaceLanguage":"swift"}},"summary":"When a message reaction was added."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"The channel identifier the message is sent to. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier the message is sent to."},{"rawIndexableTextContent":"The controller changed the list of observed users.  The controller emitting the change callback. The change to the list of users.","kind":"symbol","title":"controller(_:didChangeUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate\/controller(_:didChangeUsers:)-8rr6d","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed users."},{"rawIndexableTextContent":"Inherited from OptionSet.contains(_:). ","kind":"symbol","title":"contains(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/contains(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.contains(_:)."},{"rawIndexableTextContent":"Triggered when current user is invited to a channel. ","kind":"symbol","title":"NotificationInvitedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when current user is invited to a channel."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The team the channel belongs to. ","kind":"symbol","title":"ChannelCodingKeys.team","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/team","interfaceLanguage":"swift"}},"summary":"The team the channel belongs to."},{"rawIndexableTextContent":"Inherited from Collection.formIndex(_:offsetBy:limitedBy:). ","kind":"symbol","title":"formIndex(_:offsetBy:limitedBy:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formIndex(_:offsetBy:limitedBy:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.formIndex(_:offsetBy:limitedBy:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"threadName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/threadName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Set the delegate of ChatMessageController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatMessageController to observe the changes in the system."},{"rawIndexableTextContent":"When a channel is visible. ","kind":"symbol","title":"channelVisible","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/channelVisible","interfaceLanguage":"swift"}},"summary":"When a channel is visible."},{"rawIndexableTextContent":"A channel created date. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/createdAt","interfaceLanguage":"swift"}},"summary":"A channel created date."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ClientIsNotInActiveMode\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The reactions to the message created by any user. ","kind":"symbol","title":"reactionScores","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/reactionScores","interfaceLanguage":"swift"}},"summary":"The reactions to the message created by any user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"set","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/set","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A list of currently typing users. ","kind":"symbol","title":"currentlyTypingUsers","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/currentlyTypingUsers","interfaceLanguage":"swift"}},"summary":"A list of currently typing users."},{"rawIndexableTextContent":"The message is a reply to another message. Use the parentMessageId variable of the message to get the parent message data. ","kind":"symbol","title":"MessageType.reply","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/reply","interfaceLanguage":"swift"}},"summary":"The message is a reply to another message. Use the parentMessageId variable of the message to get the parent message data."},{"rawIndexableTextContent":"The overall attachment count by attachment type. ","kind":"symbol","title":"attachmentCounts","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/attachmentCounts","interfaceLanguage":"swift"}},"summary":"The overall attachment count by attachment type."},{"rawIndexableTextContent":"The user matching the userId. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class\/user","interfaceLanguage":"swift"}},"summary":"The user matching the userId."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"deviceId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice\/deviceId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"","kind":"symbol","title":"StreamChat","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat","interfaceLanguage":"swift"}},"summary":""},{"rawIndexableTextContent":"If the message was created by a specific \/ command, the command is saved in this variable. ","kind":"symbol","title":"command","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/command","interfaceLanguage":"swift"}},"summary":"If the message was created by a specific \/ command, the command is saved in this variable."},{"rawIndexableTextContent":"A user created by. ","kind":"symbol","title":"ChannelCodingKeys.createdBy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/createdBy","interfaceLanguage":"swift"}},"summary":"A user created by."},{"rawIndexableTextContent":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:). ","kind":"symbol","title":"init(unicodeScalarLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/init(unicodeScalarLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByUnicodeScalarLiteral.init(unicodeScalarLiteral:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"An author, usually the link origin. (e.g. YouTube, Spotify) ","kind":"symbol","title":"author","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/author","interfaceLanguage":"swift"}},"summary":"An author, usually the link origin. (e.g. YouTube, Spotify)"},{"rawIndexableTextContent":"A formatted file size. ","kind":"symbol","title":"sizeString","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/sizeString","interfaceLanguage":"swift"}},"summary":"A formatted file size."},{"rawIndexableTextContent":"The channel identifier a user started\/stopped watching ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier a user started\/stopped watching"},{"rawIndexableTextContent":"ChatMessageSearchController is a controller class which allows observing a list of messages based on the provided query. ","kind":"symbol","title":"ChatMessageSearchController","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController","interfaceLanguage":"swift"}},"summary":"ChatMessageSearchController is a controller class which allows observing a list of messages based on the provided query."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"New messages appear on the bottom of the list. ","kind":"symbol","title":"MessageOrdering.bottomToTop","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering\/bottomToTop","interfaceLanguage":"swift"}},"summary":"New messages appear on the bottom of the list."},{"rawIndexableTextContent":"Inherited from Sequence.shuffled(using:). ","kind":"symbol","title":"shuffled(using:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/shuffled(using:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.shuffled(using:)."},{"rawIndexableTextContent":"The video itself. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/file","interfaceLanguage":"swift"}},"summary":"The video itself."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"bengali","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/bengali","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"format(logDetails:message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogFormatter\/format(logDetails:message:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataControllerStateDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class\/DataControllerStateDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(from:)-nruk","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(from:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A list of members of this channel.  Discussion Array is sorted and the most recently active members will be first. This list doesn’t have to contain all members of the channel. To access the full list of members, create a ChatChannelMemberListController for this channel and use it to query all channel members. This property will contain no more than ChatClientConfig.channel.lastActiveMembersLimit members.","kind":"symbol","title":"lastActiveMembers","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/lastActiveMembers","interfaceLanguage":"swift"}},"summary":"A list of members of this channel."},{"rawIndexableTextContent":"ChatChannelController is a controller class which allows mutating and observing changes of a specific chat channel.  Overview ChatChannelController objects are lightweight, and they can be used for both, continuous data change observations (like getting new messages in the channel), and for quick channel mutations (like adding a member to a channel).","kind":"symbol","title":"ChatChannelController","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController","interfaceLanguage":"swift"}},"summary":"ChatChannelController is a controller class which allows mutating and observing changes of a specific chat channel."},{"rawIndexableTextContent":"When a user accepted a channel invitation ","kind":"symbol","title":"notificationInviteAccepted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationInviteAccepted","interfaceLanguage":"swift"}},"summary":"When a user accepted a channel invitation"},{"rawIndexableTextContent":"Inherited from Sequence.shuffled(). ","kind":"symbol","title":"shuffled()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/shuffled()","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.shuffled()."},{"rawIndexableTextContent":"Set the delegate of ChatChannelMemberListController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChatChannelMemberListController to observe the changes in the system."},{"rawIndexableTextContent":"If the member rejected a channel invitation, this field contains date of when the invitation was rejected, otherwise it’s nil. ","kind":"symbol","title":"inviteRejectedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/inviteRejectedAt","interfaceLanguage":"swift"}},"summary":"If the member rejected a channel invitation, this field contains date of when the invitation was rejected, otherwise it’s nil."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"subsystems","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/subsystems-2p80o","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"ChannelId this query handles. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery\/cid","interfaceLanguage":"swift"}},"summary":"ChannelId this query handles."},{"rawIndexableTextContent":"Flags the message this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"flag(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/flag(completion:)","interfaceLanguage":"swift"}},"summary":"Flags the message this controller manages."},{"rawIndexableTextContent":"A protocol for any MemberEvent where it has a member, and channel payload. ","kind":"symbol","title":"MemberEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberEvent","interfaceLanguage":"swift"}},"summary":"A protocol for any MemberEvent where it has a member, and channel payload."},{"rawIndexableTextContent":"A list of latest 25 replies to this message.  Discussion The latestReplies property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"latestReplies","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/latestReplies","interfaceLanguage":"swift"}},"summary":"A list of latest 25 replies to this message."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The unread counts of the current user. ","kind":"symbol","title":"unreadCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread counts of the current user."},{"rawIndexableTextContent":"Date when the message was created on the server. This date can differ from locallyCreatedAt. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/createdAt","interfaceLanguage":"swift"}},"summary":"Date when the message was created on the server. This date can differ from locallyCreatedAt."},{"rawIndexableTextContent":"Creates a Push Device for APN Push Notifications.  Return Value The Push Device details. The device token obtained via didRegisterForRemoteNotificationsWithDeviceToken function in AppDelegate.","kind":"symbol","title":"apn(token:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice\/apn(token:)","interfaceLanguage":"swift"}},"summary":"Creates a Push Device for APN Push Notifications."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The flag saying if typing is started\/stopped. ","kind":"symbol","title":"isTyping","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/isTyping","interfaceLanguage":"swift"}},"summary":"The flag saying if typing is started\/stopped."},{"rawIndexableTextContent":"A filter key for matching the lastMessageAt value. ","kind":"symbol","title":"lastMessageAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/lastMessageAt","interfaceLanguage":"swift"}},"summary":"A filter key for matching the lastMessageAt value."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"The identifier of a user who initiated a ban. ","kind":"symbol","title":"ownerId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent\/ownerId","interfaceLanguage":"swift"}},"summary":"The identifier of a user who initiated a ban."},{"rawIndexableTextContent":"The query specifying and filtering the list of users. ","kind":"symbol","title":"query","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/query","interfaceLanguage":"swift"}},"summary":"The query specifying and filtering the list of users."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Sequence Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/Sequence-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The time when the mute action was taken. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails\/createdAt","interfaceLanguage":"swift"}},"summary":"The time when the mute action was taken."},{"rawIndexableTextContent":"Pagination parameters ","kind":"symbol","title":"PaginationParameter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter","interfaceLanguage":"swift"}},"summary":"Pagination parameters"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"applyFormatters(logDetails:message:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/applyFormatters(logDetails:message:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Triggered when a message is updated. ","kind":"symbol","title":"MessageUpdatedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a message is updated."},{"rawIndexableTextContent":"A description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command\/description","interfaceLanguage":"swift"}},"summary":"A description."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Encodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/Encodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"Disables slow mode for the channel  Called when the API call is finished. Called with Error if the remote update fails. Discussion For more information, please check documentation.","kind":"symbol","title":"disableSlowMode(completion:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/disableSlowMode(completion:)","interfaceLanguage":"swift"}},"summary":"Disables slow mode for the channel"},{"rawIndexableTextContent":"Decodes extra data as an instance of the given type.  Return Value Extra data of the given type or nil if decoding fails. The type an extra data should be decoded as.","kind":"symbol","title":"extraData(ofType:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/extraData(ofType:)","interfaceLanguage":"swift"}},"summary":"Decodes extra data as an instance of the given type."},{"rawIndexableTextContent":"The controller observed changes in the replies of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReplies:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/messageController(_:didChangeReplies:)","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the replies of the observed ChatMessage."},{"rawIndexableTextContent":"Inherited from Sequence.contains(_:). ","kind":"symbol","title":"contains(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/contains(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.contains(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"MessageNotificationContent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNotificationContent","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The messages related to the channel. ","kind":"symbol","title":"messages","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/messages","interfaceLanguage":"swift"}},"summary":"The messages related to the channel."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"CustomStringConvertible Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/CustomStringConvertible-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Returns the attachments of .giphy type.  Discussion The giphyAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"giphyAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/giphyAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .giphy type."},{"rawIndexableTextContent":"Video ","kind":"symbol","title":"AttachmentFileType.webm","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/webm","interfaceLanguage":"swift"}},"summary":"Video"},{"rawIndexableTextContent":"Output level for the logger. ","kind":"symbol","title":"level","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/level","interfaceLanguage":"swift"}},"summary":"Output level for the logger."},{"rawIndexableTextContent":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI. ","kind":"symbol","title":"observableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/observableObject-swift.property","interfaceLanguage":"swift"}},"summary":"A wrapper object that exposes the controller variables in the form of ObservableObject to be used in SwiftUI."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"albanian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/albanian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"swedish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/swedish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByArrayLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/ExpressibleByArrayLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The reaction is being deleted ","kind":"symbol","title":"LocalReactionState.deleting","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/deleting","interfaceLanguage":"swift"}},"summary":"The reaction is being deleted"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Matches none of the values specified in an array. ","kind":"symbol","title":"FilterOperator.notIn","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator\/notIn","interfaceLanguage":"swift"}},"summary":"Matches none of the values specified in an array."},{"rawIndexableTextContent":"A pagination. ","kind":"symbol","title":"pagination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery\/pagination","interfaceLanguage":"swift"}},"summary":"A pagination."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ObservableObject Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/ObservableObject-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A unique identifier of team. ","kind":"symbol","title":"TeamId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TeamId","interfaceLanguage":"swift"}},"summary":"A unique identifier of team."},{"rawIndexableTextContent":"A link for displaying an attachment. Can be different from the original link, depends on the enriching rules. ","kind":"symbol","title":"titleLink","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload\/titleLink","interfaceLanguage":"swift"}},"summary":"A link for displaying an attachment. Can be different from the original link, depends on the enriching rules."},{"rawIndexableTextContent":"A publisher emitting a new value every time the channel members change. ","kind":"symbol","title":"membersChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/membersChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the channel members change."},{"rawIndexableTextContent":"The current state of the Controller. ","kind":"symbol","title":"state","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/state","interfaceLanguage":"swift"}},"summary":"The current state of the Controller."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"loggerIdentifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/loggerIdentifier","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Checks if this destination is enabled for the given level and subsystems.  Return Value true if destination is enabled for the given level, else false Log level to be checked Log subsystems to be checked","kind":"symbol","title":"isEnabled(level:subsystems:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/isEnabled(level:subsystems:)","interfaceLanguage":"swift"}},"summary":"Checks if this destination is enabled for the given level and subsystems."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"When used, the backend returns messages pinned earlier than the given timestamp.  Discussion When inclusive == true the results include the message pinned at the given timestamp.","kind":"symbol","title":"PinnedMessagesPagination.earlier(_:inclusive:)","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination\/earlier(_:inclusive:)","interfaceLanguage":"swift"}},"summary":"When used, the backend returns messages pinned earlier than the given timestamp."},{"rawIndexableTextContent":"A query type used for fetching a channel’s watchers from the backend.  Overview Learn more about watchers in our documentation here","kind":"symbol","title":"ChannelWatcherListQuery","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery","interfaceLanguage":"swift"}},"summary":"A query type used for fetching a channel’s watchers from the backend."},{"rawIndexableTextContent":"The identifier of the channel the user is member of. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/cid","interfaceLanguage":"swift"}},"summary":"The identifier of the channel the user is member of."},{"rawIndexableTextContent":"A link to the image preview. ","kind":"symbol","title":"imagePreviewURL","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload\/imagePreviewURL","interfaceLanguage":"swift"}},"summary":"A link to the image preview."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"video","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/video","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"The base url for StreamChat data center located in Singapore. ","kind":"symbol","title":"singapore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/singapore","interfaceLanguage":"swift"}},"summary":"The base url for StreamChat data center located in Singapore."},{"rawIndexableTextContent":"An item was updated at the given index. An update change is also automatically generated by moving an item. ","kind":"symbol","title":"ListChange.update(_:index:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/update(_:index:)","interfaceLanguage":"swift"}},"summary":"An item was updated at the given index. An update change is also automatically generated by moving an item."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter key for matching the memberCount value. ","kind":"symbol","title":"memberCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/memberCount","interfaceLanguage":"swift"}},"summary":"A filter key for matching the memberCount value."},{"rawIndexableTextContent":"A publisher emitting a new value every time the member changes. ","kind":"symbol","title":"memberChangePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/memberChangePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the member changes."},{"rawIndexableTextContent":"An Event object representing an event in the chat system. ","kind":"symbol","title":"Event","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Event","interfaceLanguage":"swift"}},"summary":"An Event object representing an event in the chat system."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"A publisher emitting a new value every time a reaction changes. ","kind":"symbol","title":"reactionsPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/reactionsPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time a reaction changes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Pins a message with infinite expiration. ","kind":"symbol","title":"noExpiration","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/noExpiration","interfaceLanguage":"swift"}},"summary":"Pins a message with infinite expiration."},{"rawIndexableTextContent":"Logger instance to be used by StreamChat.  Discussion Other options in LogConfig will not take affect if this is changed.","kind":"symbol","title":"logger","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/logger","interfaceLanguage":"swift"}},"summary":"Logger instance to be used by StreamChat."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Log a message to all enabled destinations. See  Logger.destinations for customizing the output.  Log level for this message Function of the caller File of the caller Line number of the caller Message to be logged","kind":"symbol","title":"log(_:functionName:fileName:lineNumber:message:subsystems:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/log(_:functionName:fileName:lineNumber:message:subsystems:)","interfaceLanguage":"swift"}},"summary":"Log a message to all enabled destinations. See  Logger.destinations for customizing the output."},{"rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType\/rawValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.rawValue."},{"rawIndexableTextContent":"The message that current controller observes. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/message","interfaceLanguage":"swift"}},"summary":"The message that current controller observes."},{"rawIndexableTextContent":"The controller observed a change in the ChatChannelMember entity. ","kind":"symbol","title":"memberController(_:didUpdateMember:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/memberController(_:didUpdateMember:)","interfaceLanguage":"swift"}},"summary":"The controller observed a change in the ChatChannelMember entity."},{"rawIndexableTextContent":"Deletes the message this controller manages.  A Boolean value to determine if the message will be delete permanently on the backend. By default it is false. The recommend approach is to always do a soft delete (hard = false). You can control the UI Visibility of the deleted message in the client side. If you hard delete the message, the message will be permanently loss since it will be erased from the backend’s database. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"deleteMessage(hard:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/deleteMessage(hard:completion:)","interfaceLanguage":"swift"}},"summary":"Deletes the message this controller manages."},{"rawIndexableTextContent":"Inherited from LogDestination.showLevel. ","kind":"symbol","title":"showLevel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/showLevel","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.showLevel."},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.lastIndex(of:). ","kind":"symbol","title":"lastIndex(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lastIndex(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.lastIndex(of:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A regular message created in the channel. ","kind":"symbol","title":"MessageType.regular","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/regular","interfaceLanguage":"swift"}},"summary":"A regular message created in the channel."},{"rawIndexableTextContent":"The user which is the author of the message.  Discussion The author property is loaded and evaluated lazily to maintain high performance.","kind":"symbol","title":"author","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/author","interfaceLanguage":"swift"}},"summary":"The user which is the author of the message."},{"rawIndexableTextContent":"Creates a new ChannelId value.  A type of the channel the ChannelId represents. An id of the channel the ChannelId represents.","kind":"symbol","title":"init(type:id:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/init(type:id:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChannelId value."},{"rawIndexableTextContent":"A callback queue on which delegate methods are invoked. ","kind":"symbol","title":"callbackQueue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController\/callbackQueue","interfaceLanguage":"swift"}},"summary":"A callback queue on which delegate methods are invoked."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:). ","kind":"symbol","title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.split(maxSplits:omittingEmptySubsequences:whereSeparator:)."},{"rawIndexableTextContent":"Filter on ids greater than the given value. ","kind":"symbol","title":"PaginationParameter.greaterThan(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/greaterThan(_:)","interfaceLanguage":"swift"}},"summary":"Filter on ids greater than the given value."},{"rawIndexableTextContent":"The channel members. ","kind":"symbol","title":"members","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class\/members","interfaceLanguage":"swift"}},"summary":"The channel members."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.tar","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/tar","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Log an error message.  Message to be logged Function of the caller File of the caller Line number of the caller","kind":"symbol","title":"error(_:subsystems:functionName:fileName:lineNumber:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger\/error(_:subsystems:functionName:fileName:lineNumber:)","interfaceLanguage":"swift"}},"summary":"Log an error message."},{"rawIndexableTextContent":"Inherited from LogDestination.subsystems. ","kind":"symbol","title":"subsystems","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/subsystems-x86n","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.subsystems."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/LocalCaching-swift.struct\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The channel the current user has rejected an intivation to. ","kind":"symbol","title":"channel","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent\/channel","interfaceLanguage":"swift"}},"summary":"The channel the current user has rejected an intivation to."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"eventType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo\/eventType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A query type used for fetching channel members from the backend. ","kind":"symbol","title":"ChannelMemberListQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery","interfaceLanguage":"swift"}},"summary":"A query type used for fetching channel members from the backend."},{"rawIndexableTextContent":"Returns the attachments of .audio type.  Discussion The audioAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"audioAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/audioAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .audio type."},{"rawIndexableTextContent":"Delete the channel this controller manages.  The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"deleteChannel(completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/deleteChannel(completion:)","interfaceLanguage":"swift"}},"summary":"Delete the channel this controller manages."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isSubset(of:). ","kind":"symbol","title":"isSubset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/isSubset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isSubset(of:)."},{"rawIndexableTextContent":"The controller fetched remote data. ","kind":"symbol","title":"DataController.State.remoteDataFetched","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/remoteDataFetched","interfaceLanguage":"swift"}},"summary":"The controller fetched remote data."},{"rawIndexableTextContent":"A mime type. ","kind":"symbol","title":"mimeType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/mimeType","interfaceLanguage":"swift"}},"summary":"A mime type."},{"rawIndexableTextContent":"The text of the message. ","kind":"symbol","title":"text","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/text","interfaceLanguage":"swift"}},"summary":"The text of the message."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/localizedDescription-6cwqn","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"If the member accepted a channel invitation, this field contains date of when the invitation was accepted, otherwise it’s nil. ","kind":"symbol","title":"inviteAcceptedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember\/inviteAcceptedAt","interfaceLanguage":"swift"}},"summary":"If the member accepted a channel invitation, this field contains date of when the invitation was accepted, otherwise it’s nil."},{"rawIndexableTextContent":"The number of unread messages that mention the current user. ","kind":"symbol","title":"mentions","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/mentions","interfaceLanguage":"swift"}},"summary":"The number of unread messages that mention the current user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(message:channel:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent\/init(message:channel:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"MemberEvent Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent\/MemberEvent-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Identifier for the logger. Defaults to empty. ","kind":"symbol","title":"identifier","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/identifier","interfaceLanguage":"swift"}},"summary":"Identifier for the logger. Defaults to empty."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/WebSocket\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"The default sorting is by the last massage date or a channel created date. The same as by updatedDate. ","kind":"symbol","title":"ChannelListSortingKey.default","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey\/default","interfaceLanguage":"swift"}},"summary":"The default sorting is by the last massage date or a channel created date. The same as by updatedDate."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.xlsx","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/xlsx","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"The attachment is successfully uploaded. ","kind":"symbol","title":"LocalAttachmentState.uploaded","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState\/uploaded","interfaceLanguage":"swift"}},"summary":"The attachment is successfully uploaded."},{"rawIndexableTextContent":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:). ","kind":"symbol","title":"init(extendedGraphemeClusterLiteral:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token\/init(extendedGraphemeClusterLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from ExpressibleByExtendedGraphemeClusterLiteral.init(extendedGraphemeClusterLiteral:)."},{"rawIndexableTextContent":"A page size. ","kind":"symbol","title":"pageSize","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination\/pageSize","interfaceLanguage":"swift"}},"summary":"A page size."},{"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSubset(of:). ","kind":"symbol","title":"isStrictSubset(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/isStrictSubset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isStrictSubset(of:)."},{"rawIndexableTextContent":"Represents a payload for attachments with .linkPreview type. ","kind":"symbol","title":"LinkAttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload","interfaceLanguage":"swift"}},"summary":"Represents a payload for attachments with .linkPreview type."},{"rawIndexableTextContent":"true if the channel supports uploading files\/images. Defaults to false if the channel doesn’t exist yet. ","kind":"symbol","title":"areUploadsEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/areUploadsEnabled","interfaceLanguage":"swift"}},"summary":"true if the channel supports uploading files\/images. Defaults to false if the channel doesn’t exist yet."},{"rawIndexableTextContent":"The item was created or the recent changes to it make it match the predicate of the observer. ","kind":"symbol","title":"EntityChange.create(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange\/create(_:)","interfaceLanguage":"swift"}},"summary":"The item was created or the recent changes to it make it match the predicate of the observer."},{"rawIndexableTextContent":"Inherited from Sequence.compare(_:_:). ","kind":"symbol","title":"compare(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/compare(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.compare(_:_:)."},{"rawIndexableTextContent":"A namespace for the FilterKeys suitable to be used for ChannelListQuery. This scope is not aware of any extra data types. ","kind":"symbol","title":"AnyChannelListFilterScope","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannelListFilterScope","interfaceLanguage":"swift"}},"summary":"A namespace for the FilterKeys suitable to be used for ChannelListQuery. This scope is not aware of any extra data types."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Advanced settings for the local caching and model serialization. ","kind":"symbol","title":"localCaching","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/localCaching-swift.property","interfaceLanguage":"swift"}},"summary":"Advanced settings for the local caching and model serialization."},{"rawIndexableTextContent":"The unbanned user. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyUnbannedEvent\/user","interfaceLanguage":"swift"}},"summary":"The unbanned user."},{"rawIndexableTextContent":"Name for this user. ","kind":"symbol","title":"name","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/name","interfaceLanguage":"swift"}},"summary":"Name for this user."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByUnicodeScalarLiteral-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"A type of attachment that will be created when the message is sent. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"A type of attachment that will be created when the message is sent."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Creates a new ChatChannelController for the channel with the provided channel query.  Return Value A new instance of ChatChannelController. The ChannelQuery this controller represents The channel list query the channel this controller represents is part of. Describes the ordering the messages are presented.","kind":"symbol","title":"channelController(for:channelListQuery:messageOrdering:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(for:channelListQuery:messageOrdering:)-5scph","interfaceLanguage":"swift"}},"summary":"Creates a new ChatChannelController for the channel with the provided channel query."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Collection Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/Collection-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"line","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Location-swift.struct\/line","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Filter is used to specify the details about which elements should be returned from a specific query.  Overview Learn more about how to create simple, advanced, and custom filters in our cheat sheet.","kind":"symbol","title":"Filter","headings":["Overview"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter","interfaceLanguage":"swift"}},"summary":"Filter is used to specify the details about which elements should be returned from a specific query."},{"rawIndexableTextContent":"Inherited from Collection.suffix(from:). ","kind":"symbol","title":"suffix(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/suffix(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.suffix(from:)."},{"rawIndexableTextContent":"An unknown error. ","kind":"symbol","title":"ClientError.Unknown","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Unknown","interfaceLanguage":"swift"}},"summary":"An unknown error."},{"rawIndexableTextContent":"Destination types this logger will use.  Discussion Logger will initialize the destinations with its own parameters. If you want full control on the parameters, use destinations directly, where you can pass parameters to destination initializers yourself.","kind":"symbol","title":"destinationTypes","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/destinationTypes","interfaceLanguage":"swift"}},"summary":"Destination types this logger will use."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"SetAlgebra Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/SetAlgebra-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.formIndex(after:). ","kind":"symbol","title":"formIndex(after:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/formIndex(after:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.formIndex(after:)."},{"rawIndexableTextContent":"Allows to inject a custom API client for uploading attachments, if not specified StreamCDNClient is used ","kind":"symbol","title":"customCDNClient","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/customCDNClient","interfaceLanguage":"swift"}},"summary":"Allows to inject a custom API client for uploading attachments, if not specified StreamCDNClient is used"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CleanUpTypingEvent\/cid","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"RawRepresentable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/RawRepresentable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The use who updated a reaction. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/user","interfaceLanguage":"swift"}},"summary":"The use who updated a reaction."},{"rawIndexableTextContent":"Inherited from RawRepresentable.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.init(rawValue:)."},{"rawIndexableTextContent":"Initialize the log destination with given parameters.  Identifier for this destination. Will be shown on the logs if showIdentifier is true Output level for this destination. Messages will only be shown if their output level is higher than this. Toggle for showing date in logs DateFormatter instance for formatting the date in logs. Defaults to ISO8601 formatter. Log formatters to be applied in order before logs are outputted. Defaults to empty (no formatters). Please see LogFormatter for more info. Toggle for showing log level in logs Toggle for showing identifier in logs Toggle for showing thread name in logs Toggle for showing file name in logs Toggle for showing line number in logs Toggle for showing function name in logs","kind":"symbol","title":"init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConsoleLogDestination\/init(identifier:level:subsystems:showDate:dateFormatter:formatters:showLevel:showIdentifier:showThreadName:showFileName:showLineNumber:showFunctionName:)","interfaceLanguage":"swift"}},"summary":"Initialize the log destination with given parameters."},{"rawIndexableTextContent":"When a channel was deleted ","kind":"symbol","title":"notificationChannelDeleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/notificationChannelDeleted","interfaceLanguage":"swift"}},"summary":"When a channel was deleted"},{"rawIndexableTextContent":"The controller observed changes in the reactions of the observed ChatMessage. ","kind":"symbol","title":"messageController(_:didChangeReactions:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate\/messageController(_:didChangeReactions:)-9vjj5","interfaceLanguage":"swift"}},"summary":"The controller observed changes in the reactions of the observed ChatMessage."},{"rawIndexableTextContent":"Flag for setting a ChatClient instance in connection-less mode. A connection-less client is not able to connect to websocket and will not receive websocket events. It can still observe and mutate database. This flag is automatically set to false for app extensions Warning: There should be at max 1 active client at the same time, else it can lead to undefined behavior. ","kind":"symbol","title":"isClientInActiveMode","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/isClientInActiveMode","interfaceLanguage":"swift"}},"summary":"Flag for setting a ChatClient instance in connection-less mode. A connection-less client is not able to connect to websocket and will not receive websocket events. It can still observe and mutate database. This flag is automatically set to false for app extensions Warning: There should be at max 1 active client at the same time, else it can lead to undefined behavior."},{"rawIndexableTextContent":"In case of token expiration this property is used to obtain a new token ","kind":"symbol","title":"tokenProvider","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/tokenProvider","interfaceLanguage":"swift"}},"summary":"In case of token expiration this property is used to obtain a new token"},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"latvian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/latvian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"finnish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/finnish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"File ","kind":"symbol","title":"AttachmentFileType.generic","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/generic","interfaceLanguage":"swift"}},"summary":"File"},{"rawIndexableTextContent":"Inherited from Sequence.publisher. ","kind":"symbol","title":"publisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/publisher","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.publisher."},{"rawIndexableTextContent":"Set the delegate of UserListController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of UserListController to observe the changes in the system."},{"rawIndexableTextContent":"The web socket is disconnecting. ","kind":"symbol","title":"ConnectionStatus.disconnecting","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus\/disconnecting","interfaceLanguage":"swift"}},"summary":"The web socket is disconnecting."},{"rawIndexableTextContent":"The channel members matching the query. To observe the member list changes, set your class as a delegate of this controller or use the provided Combine publishers. ","kind":"symbol","title":"members","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/members","interfaceLanguage":"swift"}},"summary":"The channel members matching the query. To observe the member list changes, set your class as a delegate of this controller or use the provided Combine publishers."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"reactionType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/reactionType","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The raw value of the key. This value should match the “encodable” key for the given object. ","kind":"symbol","title":"rawValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/rawValue","interfaceLanguage":"swift"}},"summary":"The raw value of the key. This value should match the “encodable” key for the given object."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"showFunctionName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/showFunctionName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Creates a Push Device for Firebase Push Notifications.  Return Value The Push Device details. The FCM token.","kind":"symbol","title":"firebase(token:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice\/firebase(token:)","interfaceLanguage":"swift"}},"summary":"Creates a Push Device for Firebase Push Notifications."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"spanish","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/spanish","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Sequence.filter(_:). ","kind":"symbol","title":"filter(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/filter(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.filter(_:)."},{"rawIndexableTextContent":"The date the user was created. ","kind":"symbol","title":"userCreatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/userCreatedAt","interfaceLanguage":"swift"}},"summary":"The date the user was created."},{"rawIndexableTextContent":"DataStore provide access to all locally available model objects based on their id. ","kind":"symbol","title":"dataStore","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/dataStore","interfaceLanguage":"swift"}},"summary":"DataStore provide access to all locally available model objects based on their id."},{"rawIndexableTextContent":"When a channel was marked as read. ","kind":"symbol","title":"messageRead","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/messageRead","interfaceLanguage":"swift"}},"summary":"When a channel was marked as read."},{"rawIndexableTextContent":"The channel the typing event happened. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel the typing event happened."},{"rawIndexableTextContent":"The default value representing no unread messages. ","kind":"symbol","title":"noUnread","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/noUnread","interfaceLanguage":"swift"}},"summary":"The default value representing no unread messages."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"SetAlgebra Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/SetAlgebra-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from OptionSet.init(rawValue:). ","kind":"symbol","title":"init(rawValue:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/init(rawValue:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.init(rawValue:)."},{"rawIndexableTextContent":"Creates a new ChatChannelMemberListController with the provided query.  Return Value A new instance of ChatChannelMemberListController. The query specify the filter and sorting options for members the controller should fetch.","kind":"symbol","title":"memberListController(query:)","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/memberListController(query:)","interfaceLanguage":"swift"}},"summary":"Creates a new ChatChannelMemberListController with the provided query."},{"rawIndexableTextContent":"Inherited from OptionSet.formIntersection(_:). ","kind":"symbol","title":"formIntersection(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/formIntersection(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formIntersection(_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"RawJSON.bool(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON\/bool(_:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Controls if messages should be searchable (this is a premium feature). Disabled by default. ","kind":"symbol","title":"searchEnabled","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig\/searchEnabled","interfaceLanguage":"swift"}},"summary":"Controls if messages should be searchable (this is a premium feature). Disabled by default."},{"rawIndexableTextContent":"Members. ","kind":"symbol","title":"ChannelCodingKeys.members","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/members","interfaceLanguage":"swift"}},"summary":"Members."},{"rawIndexableTextContent":"A protocol an attachment payload type has to conform in order it can be attached to\/exposed on the message. ","kind":"symbol","title":"AttachmentPayload","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentPayload","interfaceLanguage":"swift"}},"summary":"A protocol an attachment payload type has to conform in order it can be attached to\/exposed on the message."},{"rawIndexableTextContent":"Registers the current user’s device for push notifications.  The device information required for the desired push provider. Callback when device is successfully registered, or failed with error.","kind":"symbol","title":"addDevice(_:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(_:completion:)","interfaceLanguage":"swift"}},"summary":"Registers the current user’s device for push notifications."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/updatedAt","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberEvent\/cid","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatConnectionController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Returns a mime type for the file type. ","kind":"symbol","title":"mimeType","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/mimeType","interfaceLanguage":"swift"}},"summary":"Returns a mime type for the file type."},{"rawIndexableTextContent":"Inherited from ObservableObject.objectWillChange. ","kind":"symbol","title":"objectWillChange","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/objectWillChange","interfaceLanguage":"swift"}},"summary":"Inherited from ObservableObject.objectWillChange."},{"rawIndexableTextContent":"Inherited from Collection.endIndex. ","kind":"symbol","title":"endIndex","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/endIndex","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.endIndex."},{"rawIndexableTextContent":"A created date. ","kind":"symbol","title":"ChannelCodingKeys.updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys\/updatedAt","interfaceLanguage":"swift"}},"summary":"A created date."},{"rawIndexableTextContent":"A size of the file. ","kind":"symbol","title":"size","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/size","interfaceLanguage":"swift"}},"summary":"A size of the file."},{"rawIndexableTextContent":"Inherited from Sequence.joined(separator:). ","kind":"symbol","title":"joined(separator:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/joined(separator:)-871ri","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.joined(separator:)."},{"rawIndexableTextContent":"The replies the message controller observes. ","kind":"symbol","title":"replies","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class\/replies","interfaceLanguage":"swift"}},"summary":"The replies the message controller observes."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Identifiable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/Identifiable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A publisher emitting a new value every time the list of the channels matching the query changes. ","kind":"symbol","title":"channelsChangesPublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/channelsChangesPublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the list of the channels matching the query changes."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"frenchCanada","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/frenchCanada","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/InvalidToken\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingLocalStorageURL\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"The information required to register a device for push notifications. ","kind":"symbol","title":"PushDevice","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice","interfaceLanguage":"swift"}},"summary":"The information required to register a device for push notifications."},{"rawIndexableTextContent":"Inherited from LogDestination.subsystems. ","kind":"symbol","title":"subsystems","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination\/subsystems-6c7ip","interfaceLanguage":"swift"}},"summary":"Inherited from LogDestination.subsystems."},{"rawIndexableTextContent":"Inherited from Collection.dropFirst(_:). ","kind":"symbol","title":"dropFirst(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/dropFirst(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.dropFirst(_:)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Decodable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/Decodable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(from:)-32ekj","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"A type alias for attachment with LinkAttachmentPayload payload type.  Discussion The ChatMessageLinkAttachment attachment will be added to the message automatically if the message is sent with the text containing the URL.","kind":"symbol","title":"ChatMessageLinkAttachment","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageLinkAttachment","interfaceLanguage":"swift"}},"summary":"A type alias for attachment with LinkAttachmentPayload payload type."},{"rawIndexableTextContent":"Returns the attachments of .linkPreview type.  Discussion The linkAttachments are loaded lazily and cached to maintain high performance.","kind":"symbol","title":"linkAttachments","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/linkAttachments","interfaceLanguage":"swift"}},"summary":"Returns the attachments of .linkPreview type."},{"rawIndexableTextContent":"The connection status. ","kind":"symbol","title":"connectionStatus","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/connectionStatus","interfaceLanguage":"swift"}},"summary":"The connection status."},{"rawIndexableTextContent":"Triggered when a new message is deleted. ","kind":"symbol","title":"MessageDeletedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when a new message is deleted."},{"rawIndexableTextContent":"A filter key for matching the role value. ","kind":"symbol","title":"role","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/role","interfaceLanguage":"swift"}},"summary":"A filter key for matching the role value."},{"rawIndexableTextContent":"Coding keys channel related payloads. ","kind":"symbol","title":"ChannelCodingKeys","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys","interfaceLanguage":"swift"}},"summary":"Coding keys channel related payloads."},{"rawIndexableTextContent":"The user which created the channel. ","kind":"symbol","title":"createdBy","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/createdBy","interfaceLanguage":"swift"}},"summary":"The user which created the channel."},{"rawIndexableTextContent":"Inherited from LocalizedError.errorDescription. ","kind":"symbol","title":"errorDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload\/errorDescription-3sexe","interfaceLanguage":"swift"}},"summary":"Inherited from LocalizedError.errorDescription."},{"rawIndexableTextContent":"The total number of members in the channel. ","kind":"symbol","title":"memberCount","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/memberCount","interfaceLanguage":"swift"}},"summary":"The total number of members in the channel."},{"rawIndexableTextContent":"Inherited from OptionSet.formSymmetricDifference(_:). ","kind":"symbol","title":"formSymmetricDifference(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/formSymmetricDifference(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formSymmetricDifference(_:)."},{"rawIndexableTextContent":"The date when the channel was created. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/createdAt","interfaceLanguage":"swift"}},"summary":"The date when the channel was created."},{"rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). ","kind":"symbol","title":"flatMap(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/flatMap(_:)-8igs1","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.flatMap(_:)."},{"rawIndexableTextContent":"Loads next users from backend.  Limit for page size. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"loadNextUsers(limit:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/loadNextUsers(limit:completion:)","interfaceLanguage":"swift"}},"summary":"Loads next users from backend."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"extraData","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo\/extraData","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Collection.index(of:). ","kind":"symbol","title":"index(of:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/index(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.index(of:)."},{"rawIndexableTextContent":"Retrieve the localized description for this error. ","kind":"symbol","title":"localizedDescription","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/MissingLocalStorageURL\/localizedDescription","interfaceLanguage":"swift"}},"summary":"Retrieve the localized description for this error."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"An indicator whether the user is online. ","kind":"symbol","title":"isOnline","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/isOnline","interfaceLanguage":"swift"}},"summary":"An indicator whether the user is online."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"An attachment action, e.g. send, shuffle. ","kind":"symbol","title":"AttachmentAction","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction","interfaceLanguage":"swift"}},"summary":"An attachment action, e.g. send, shuffle."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"UserRole","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent\/message","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller received a change related to users typing in the channel it observes. ","kind":"symbol","title":"channelController(_:didChangeTypingUsers:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class\/channelController(_:didChangeTypingUsers:)","interfaceLanguage":"swift"}},"summary":"The controller received a change related to users typing in the channel it observes."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"sort","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery\/sort","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ClientError.ConnectionNotSuccessful","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ConnectionNotSuccessful","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Deleted messages are always visible. ","kind":"symbol","title":"ChatClientConfig.DeletedMessageVisibility.alwaysVisible","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig\/DeletedMessageVisibility\/alwaysVisible","interfaceLanguage":"swift"}},"summary":"Deleted messages are always visible."},{"rawIndexableTextContent":"Date formatter for the logger. Defaults to ISO8601 ","kind":"symbol","title":"dateFormatter","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig\/dateFormatter","interfaceLanguage":"swift"}},"summary":"Date formatter for the logger. Defaults to ISO8601"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"fileName","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/fileName","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController  Return Value  true if channel should be added to the list of observed channels, false if channel doesn’t exists in this list. The controller, The newly updated ChatChannel instance. Discussion (We are not using @available annotations because they do not get emitted in protocol conformances) The controller asks the delegate if the newly updated ChatChannel should be linked to this Controller’s query. Defaults to true","kind":"symbol","title":"controller(_:shouldListUpdatedChannel:)","headings":["Return Value","Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class\/controller(_:shouldListUpdatedChannel:)","interfaceLanguage":"swift"}},"summary":"⚠️ This method is deprecated: Please use filter when initializing a ChatChannelListController"},{"rawIndexableTextContent":"Matches values that exist\/don’t exist based on the specified boolean value.  true(default value) if the filter matches values that exist. false if the filter should match values that don’t exist.","kind":"symbol","title":"exists(_:exists:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/exists(_:exists:)","interfaceLanguage":"swift"}},"summary":"Matches values that exist\/don’t exist based on the specified boolean value."},{"rawIndexableTextContent":"A filter key for matching the updatedAt value. ","kind":"symbol","title":"updatedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/updatedAt-5hgyf","interfaceLanguage":"swift"}},"summary":"A filter key for matching the updatedAt value."},{"rawIndexableTextContent":"Inherited from Sequence.lexicographicallyPrecedes(_:). ","kind":"symbol","title":"lexicographicallyPrecedes(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/lexicographicallyPrecedes(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.lexicographicallyPrecedes(_:)."},{"rawIndexableTextContent":"An error based on a message.  an error message. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(_:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/UnsupportedEventType\/init(_:_:_:)","interfaceLanguage":"swift"}},"summary":"An error based on a message."},{"rawIndexableTextContent":"An attachment type all MediaAttachmentPayload instances conform to. Is set to .video. ","kind":"symbol","title":"type","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload\/type","interfaceLanguage":"swift"}},"summary":"An attachment type all MediaAttachmentPayload instances conform to. Is set to .video."},{"rawIndexableTextContent":"The message is currently being sent to the servers. ","kind":"symbol","title":"LocalMessageState.sending","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState\/sending","interfaceLanguage":"swift"}},"summary":"The message is currently being sent to the servers."},{"rawIndexableTextContent":"All subsystems within the SDK. ","kind":"symbol","title":"all","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/all","interfaceLanguage":"swift"}},"summary":"All subsystems within the SDK."},{"rawIndexableTextContent":"Creates a new ChatConnectionController instance.  Return Value A new instance of ChatConnectionController.","kind":"symbol","title":"connectionController()","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/connectionController()","interfaceLanguage":"swift"}},"summary":"Creates a new ChatConnectionController instance."},{"rawIndexableTextContent":"ChatChannelMemberControllerDelegate uses this protocol to communicate changes to its delegate. ","kind":"symbol","title":"ChatChannelMemberControllerDelegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate","interfaceLanguage":"swift"}},"summary":"ChatChannelMemberControllerDelegate uses this protocol to communicate changes to its delegate."},{"rawIndexableTextContent":"Inherited from Collection.map(_:). ","kind":"symbol","title":"map(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/map(_:)-3fzug","interfaceLanguage":"swift"}},"summary":"Inherited from Collection.map(_:)."},{"rawIndexableTextContent":"Image ","kind":"symbol","title":"AttachmentFileType.webp","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/webp","interfaceLanguage":"swift"}},"summary":"Image"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A client error based on an external general error.  an external error. a file name source of an error. a line source of an error.","kind":"symbol","title":"init(with:_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/ClientIsNotInActiveMode\/init(with:_:_:)","interfaceLanguage":"swift"}},"summary":"A client error based on an external general error."},{"rawIndexableTextContent":"Audio ","kind":"symbol","title":"AttachmentFileType.m4a","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/m4a","interfaceLanguage":"swift"}},"summary":"Audio"},{"rawIndexableTextContent":"Set the delegate of ChannelListController to observe the changes in the system. ","kind":"symbol","title":"delegate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/delegate","interfaceLanguage":"swift"}},"summary":"Set the delegate of ChannelListController to observe the changes in the system."},{"rawIndexableTextContent":"A type representing a user’s last read action on a channel. ","kind":"symbol","title":"ChatChannelRead","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead","interfaceLanguage":"swift"}},"summary":"A type representing a user’s last read action on a channel."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"message","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails\/message","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"formatters","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination\/formatters","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Triggered when user is banned in a specific channel ","kind":"symbol","title":"UserBannedEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent","interfaceLanguage":"swift"}},"summary":"Triggered when user is banned in a specific channel"},{"rawIndexableTextContent":"Inherited from BidirectionalCollection.difference(from:). ","kind":"symbol","title":"difference(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/difference(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from BidirectionalCollection.difference(from:)."},{"rawIndexableTextContent":"The role of the user. ","kind":"symbol","title":"userRole","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser\/userRole","interfaceLanguage":"swift"}},"summary":"The role of the user."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"afrikaans","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/afrikaans","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI. ","kind":"symbol","title":"ChatMessageSearchController.ObservableObject","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class","interfaceLanguage":"swift"}},"summary":"A wrapper object for CurrentUserController type which makes it possible to use the controller comfortably in SwiftUI."},{"rawIndexableTextContent":"Enabled for everyone. The default timeout in minutes until the ban is automatically expired. The default reason the ban was created. ","kind":"symbol","title":"BanEnabling.enabled(timeoutInMinutes:reason:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling\/enabled(timeoutInMinutes:reason:)","interfaceLanguage":"swift"}},"summary":"Enabled for everyone. The default timeout in minutes until the ban is automatically expired. The default reason the ban was created."},{"rawIndexableTextContent":"A publisher emitting a new value every time the state of the controller changes. ","kind":"symbol","title":"statePublisher","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/statePublisher","interfaceLanguage":"swift"}},"summary":"A publisher emitting a new value every time the state of the controller changes."},{"rawIndexableTextContent":"A  struct describing roles of a member in a channel. There are some predefined types but any type can be introduced and sent by the backend. ","kind":"symbol","title":"MemberRole","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole","interfaceLanguage":"swift"}},"summary":"A  struct describing roles of a member in a channel. There are some predefined types but any type can be introduced and sent by the backend."},{"rawIndexableTextContent":"The controller failed to fetch local data. ","kind":"symbol","title":"DataController.State.localDataFetchFailed(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController\/State-swift.enum\/localDataFetchFailed(_:)","interfaceLanguage":"swift"}},"summary":"The controller failed to fetch local data."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Emitted when Client changes it’s connection status. You can listen to this event and indicate the different connection states in the UI (banners like “Offline”, “Reconnecting””, etc.). ","kind":"symbol","title":"ConnectionStatusUpdated","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatusUpdated","interfaceLanguage":"swift"}},"summary":"Emitted when Client changes it’s connection status. You can listen to this event and indicate the different connection states in the UI (banners like “Offline”, “Reconnecting””, etc.)."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"ChatConnectionControllerDelegate Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/ChatConnectionControllerDelegate-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"DataStoreProvider Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/DataStoreProvider-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"A filter key for matching the deletedAt value. ","kind":"symbol","title":"deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey\/deletedAt","interfaceLanguage":"swift"}},"summary":"A filter key for matching the deletedAt value."},{"rawIndexableTextContent":"The message object this controller represents.  Discussion To observe changes of the message, set your class as a delegate of this controller or use the provided Combine publishers.","kind":"symbol","title":"message","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/message","interfaceLanguage":"swift"}},"summary":"The message object this controller represents."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"croatian","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/croatian","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"NotificationInviteAccepted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAccepted","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"BidirectionalCollection Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/BidirectionalCollection-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Audio ","kind":"symbol","title":"AttachmentFileType.wav","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/wav","interfaceLanguage":"swift"}},"summary":"Audio"},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"chineseSimplified","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage\/chineseSimplified","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The base url for StreamChat data center located in the US East Cost. ","kind":"symbol","title":"usEast","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL\/usEast","interfaceLanguage":"swift"}},"summary":"The base url for StreamChat data center located in the US East Cost."},{"rawIndexableTextContent":"The user who changed the typing state. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who changed the typing state."},{"rawIndexableTextContent":"The event timestamp. ","kind":"symbol","title":"createdAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent\/createdAt","interfaceLanguage":"swift"}},"summary":"The event timestamp."},{"rawIndexableTextContent":"Internationalization and localization for the message. Only available for translated messages. ","kind":"symbol","title":"translations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage\/translations","interfaceLanguage":"swift"}},"summary":"Internationalization and localization for the message. Only available for translated messages."},{"rawIndexableTextContent":"Sent when a user starts typing. ","kind":"symbol","title":"userStartTyping","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType\/userStartTyping","interfaceLanguage":"swift"}},"summary":"Sent when a user starts typing."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"init(url:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile\/init(url:)","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"messageId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent\/messageId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatRemoteNotificationHandler","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatRemoteNotificationHandler","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"file","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/Location-swift.struct\/file","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"Inherited from SetAlgebra.init(_:). ","kind":"symbol","title":"init(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions\/init(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.init(_:)."},{"rawIndexableTextContent":"Disconnects the chat client the controller represents from the chat servers. No further updates from the servers are received. ","kind":"symbol","title":"disconnect()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/disconnect()","interfaceLanguage":"swift"}},"summary":"Disconnects the chat client the controller represents from the chat servers. No further updates from the servers are received."},{"rawIndexableTextContent":"Remove users to the channel as members.  Users Id to add to a channel. The completion. Will be called on a callbackQueue when the network request is finished. If request fails, the completion will be called with an error.","kind":"symbol","title":"removeMembers(userIds:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/removeMembers(userIds:completion:)","interfaceLanguage":"swift"}},"summary":"Remove users to the channel as members."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"userId","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent\/userId","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The controller changed the list of observed channels.  The controller emitting the change callback. The change to the list of channels.\\","kind":"symbol","title":"controller(_:didChangeChannels:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate\/controller(_:didChangeChannels:)-6qxho","interfaceLanguage":"swift"}},"summary":"The controller changed the list of observed channels."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Equatable Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection\/Equatable-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The user who read the channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who read the channel."},{"rawIndexableTextContent":"The channel identifier. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent\/cid","interfaceLanguage":"swift"}},"summary":"The channel identifier."},{"rawIndexableTextContent":"The reaction is waiting to be deleted from the server ","kind":"symbol","title":"LocalReactionState.pendingDelete","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState\/pendingDelete","interfaceLanguage":"swift"}},"summary":"The reaction is waiting to be deleted from the server"},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionType\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"A deleted message. ","kind":"symbol","title":"MessageType.deleted","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType\/deleted","interfaceLanguage":"swift"}},"summary":"A deleted message."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"The unread messages and channels count for the current user.  Discussion Returns noUnread if currentUser doesn’t exist yet.","kind":"symbol","title":"unreadCount","headings":["Discussion"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCount","interfaceLanguage":"swift"}},"summary":"The unread messages and channels count for the current user."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hash(into:). ","kind":"symbol","title":"hash(into:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey\/hash(into:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hash(into:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"Returns the underlaying item that was changed. ","kind":"symbol","title":"item","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange\/item","interfaceLanguage":"swift"}},"summary":"Returns the underlaying item that was changed."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"cid","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo\/cid","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The user who hide the channel. ","kind":"symbol","title":"user","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent\/user","interfaceLanguage":"swift"}},"summary":"The user who hide the channel."},{"rawIndexableTextContent":"The subsystem responsible for websocket operations. ","kind":"symbol","title":"webSocket","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/webSocket","interfaceLanguage":"swift"}},"summary":"The subsystem responsible for websocket operations."},{"rawIndexableTextContent":"Inherited from Equatable.==(_:_:). ","kind":"symbol","title":"==(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter\/==(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.==(_:_:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"LogDestination","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The expiration date of the pinning. Infinite expiration in case it is nil. ","kind":"symbol","title":"expirationDate","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning\/expirationDate","interfaceLanguage":"swift"}},"summary":"The expiration date of the pinning. Infinite expiration in case it is nil."},{"rawIndexableTextContent":"Inherited from OptionSet.update(with:). ","kind":"symbol","title":"update(with:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem\/update(with:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.update(with:)."},{"rawIndexableTextContent":"Inherited from RawRepresentable.hashValue. ","kind":"symbol","title":"hashValue","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/hashValue","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.hashValue."},{"rawIndexableTextContent":"Inherited from CustomStringConvertible.description. ","kind":"symbol","title":"description","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/description","interfaceLanguage":"swift"}},"summary":"Inherited from CustomStringConvertible.description."},{"rawIndexableTextContent":"Inherited from Encodable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from Encodable.encode(to:)."},{"rawIndexableTextContent":"If the channel was deleted, this field contains the date of the deletion. ","kind":"symbol","title":"deletedAt","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel\/deletedAt","interfaceLanguage":"swift"}},"summary":"If the channel was deleted, this field contains the date of the deletion."},{"rawIndexableTextContent":"No overview available.","kind":"article","title":"Error Implementations","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError\/FetchFailed\/Error-Implementations","interfaceLanguage":"swift"}},"summary":"No overview available."},{"rawIndexableTextContent":"The channel list query the channel is related to. It’s nil when this controller wasn’t created by a ChannelListController ","kind":"symbol","title":"channelListQuery","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelListQuery","interfaceLanguage":"swift"}},"summary":"The channel list query the channel is related to. It’s nil when this controller wasn’t created by a ChannelListController"},{"rawIndexableTextContent":"Inherited from Decodable.init(from:). ","kind":"symbol","title":"init(from:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent\/init(from:)","interfaceLanguage":"swift"}},"summary":"Inherited from Decodable.init(from:)."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/ActionStyle\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"An event type SDK fallbacks to if incoming event was failed to be decoded as a system event. ","kind":"symbol","title":"UnknownChannelEvent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent","interfaceLanguage":"swift"}},"summary":"An event type SDK fallbacks to if incoming event was failed to be decoded as a system event."},{"rawIndexableTextContent":"Matches values that are equal to a specified value. ","kind":"symbol","title":"equal(_:to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/equal(_:to:)","interfaceLanguage":"swift"}},"summary":"Matches values that are equal to a specified value."},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","title":"!=(_:_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:)."},{"rawIndexableTextContent":"A value of an action. ","kind":"symbol","title":"value","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction\/value","interfaceLanguage":"swift"}},"summary":"A value of an action."},{"rawIndexableTextContent":"Connects a guest user  User info that is passed to the connect endpoint for user creation Extra data for user that is passed to the connect endpoint for user creation. The completion that will be called once the first user session for the given token is setup.","kind":"symbol","title":"connectGuestUser(userInfo:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient\/connectGuestUser(userInfo:completion:)","interfaceLanguage":"swift"}},"summary":"Connects a guest user"},{"rawIndexableTextContent":"The ChatClient instance this controller belongs to. ","kind":"symbol","title":"client","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController\/client","interfaceLanguage":"swift"}},"summary":"The ChatClient instance this controller belongs to."},{"rawIndexableTextContent":"The type describing a value that can be used as a sorting when paginating pinned messages. ","kind":"symbol","title":"PinnedMessagesSortingKey","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey","interfaceLanguage":"swift"}},"summary":"The type describing a value that can be used as a sorting when paginating pinned messages."},{"rawIndexableTextContent":"The underlying controller. You can still access it and call methods on it. ","kind":"symbol","title":"controller","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class\/controller","interfaceLanguage":"swift"}},"summary":"The underlying controller. You can still access it and call methods on it."},{"rawIndexableTextContent":"Uploads the given image to CDN and returns the file URL.  Local URL of the image. Upload progress callback Completion to be called when upload finishes, or errors.  Will be called on a callbackQueue when the network request is finished.","kind":"symbol","title":"uploadImage(localFileURL:progress:completion:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadImage(localFileURL:progress:completion:)","interfaceLanguage":"swift"}},"summary":"Uploads the given image to CDN and returns the file URL."},{"rawIndexableTextContent":"Combines the provided filters and matches the values matched by at least one of the filters. ","kind":"symbol","title":"or(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter\/or(_:)","interfaceLanguage":"swift"}},"summary":"Combines the provided filters and matches the values matched by at least one of the filters."},{"rawIndexableTextContent":"Image ","kind":"symbol","title":"AttachmentFileType.bmp","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType\/bmp","interfaceLanguage":"swift"}},"summary":"Image"},{"rawIndexableTextContent":"Inherited from RawRepresentable.encode(to:). ","kind":"symbol","title":"encode(to:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole\/encode(to:)","interfaceLanguage":"swift"}},"summary":"Inherited from RawRepresentable.encode(to:)."},{"rawIndexableTextContent":"No overview available. ","kind":"symbol","title":"ChatPushNotificationContent","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent","interfaceLanguage":"swift"}},"summary":"No overview available."}]