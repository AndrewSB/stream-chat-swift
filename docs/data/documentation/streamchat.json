{
  "abstract" : [
    {
      "text" : "",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "StreamChat",
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "StreamChat"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelEventsController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatRemoteNotificationHandler",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConsoleLogDestination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HealthCheckEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberListFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNotificationContent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PrefixLogFormatter",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownNotificationContent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListFilterScope"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannel",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannelListFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMemberListFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMessageSearchFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyUserListFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CDNClient",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Controller",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CustomEventPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStoreProvider",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Event",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterValue",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HasUnreadCount",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogFormatter",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/SortingKey"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CleanUpTypingEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatusUpdated",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EmptyResponse",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchFilterScope",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyBannedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyUnbannedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/log"
      ],
      "title" : "Variables"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChatMessageAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelReadEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAudioAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageFileAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageGiphyAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageImageAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageLinkAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageVideoAttachment",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DeviceId",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageId",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAccepted",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejected",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TeamId",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TokenProvider",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownEvent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserId"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/StreamRuntimeCheck",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://io.getstream.StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/APIKey": {
  "abstract" : [
    {
      "text" : "A struct representing an API key of the chat app.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/APIKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIKey"
    }
  ],
  "role" : "symbol",
  "title" : "APIKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/apikey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyAttachmentPayload": {
  "abstract" : [
    {
      "text" : "A type-erased type that wraps either a local file URL that has to be uploaded",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and attached to the message OR a custom payload which the message attachment",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "should contain.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "AnyAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anyattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyChannel": {
  "abstract" : [
    {
      "text" : "A type-erased version of ",
      "type" : "text"
    },
    {
      "code" : "ChannelModel<CustomData>",
      "type" : "codeVoice"
    },
    {
      "text" : ". Not intended to be used directly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyChannel"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyChannel"
    }
  ],
  "role" : "symbol",
  "title" : "AnyChannel",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anychannel"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyChannelListFilterScope": {
  "abstract" : [
    {
      "text" : "A namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "ChannelListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ". This scope is not aware of any extra data types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyChannelListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChannelListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyChannelListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "AnyChannelListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anychannellistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyChatMessageAttachment": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyChatMessageAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyChatMessageAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyChatMessageAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "AnyChatMessageAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anychatmessageattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyMemberListFilterScope": {
  "abstract" : [
    {
      "text" : "A namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "ChannelMemberListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ". This scope is not aware of any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "extra data types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyMemberListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMemberListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyMemberListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "AnyMemberListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anymemberlistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyMessageSearchFilterScope": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyMessageSearchFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyMessageSearchFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyMessageSearchFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "AnyMessageSearchFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anymessagesearchfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AnyUserListFilterScope": {
  "abstract" : [
    {
      "text" : "A namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "UserListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ". This scope is not aware of any extra data types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyUserListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AnyUserListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyUserListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "AnyUserListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/anyuserlistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Atomic": {
  "abstract" : [
    {
      "text" : "A mutable thread safe variable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Atomic"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Atomic",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Atomic"
    }
  ],
  "role" : "symbol",
  "title" : "Atomic",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/atomic"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentAction": {
  "abstract" : [
    {
      "text" : "An attachment action, e.g. send, shuffle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentAction"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentAction"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentAction",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentaction"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentFile": {
  "abstract" : [
    {
      "text" : "An attachment file description.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentFile"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFile",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentFile"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentFile",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentfile"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentFileType": {
  "abstract" : [
    {
      "text" : "An attachment file type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentFileType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentFileType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentFileType"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentFileType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentfiletype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentId": {
  "abstract" : [
    {
      "text" : "An object that uniquely identifies a message attachment.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentId"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentPayload": {
  "abstract" : [
    {
      "text" : "A protocol an attachment payload type has to conform in order it can be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "attached to\/exposed on the message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentType": {
  "abstract" : [
    {
      "text" : "An attachment type.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "There are some predefined types on backend but any type can be introduced and sent to backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentType"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmenttype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AttachmentUploadingState": {
  "abstract" : [
    {
      "text" : "A type representing the uploading state for attachments that require prior uploading.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttachmentUploadingState"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AttachmentUploadingState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttachmentUploadingState"
    }
  ],
  "role" : "symbol",
  "title" : "AttachmentUploadingState",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/attachmentuploadingstate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/AudioAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".media",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AudioAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/AudioAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AudioAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "AudioAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/audioattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/BanEnabling": {
  "abstract" : [
    {
      "text" : "An option to enable ban users.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BanEnabling"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BanEnabling",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BanEnabling"
    }
  ],
  "role" : "symbol",
  "title" : "BanEnabling",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/banenabling"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/BaseLogDestination": {
  "abstract" : [
    {
      "text" : "Base class for log destinations. Already implements basic functionaly to allow easy destination implementation.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Extending this class, instead of implementing ",
      "type" : "text"
    },
    {
      "code" : "LogDestination",
      "type" : "codeVoice"
    },
    {
      "text" : " is easier (and recommended) for creating new destinations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BaseLogDestination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseLogDestination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BaseLogDestination"
    }
  ],
  "role" : "symbol",
  "title" : "BaseLogDestination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/baselogdestination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/BaseURL": {
  "abstract" : [
    {
      "text" : "A struct representing base URL for ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BaseURL"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/BaseURL",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BaseURL"
    }
  ],
  "role" : "symbol",
  "title" : "BaseURL",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/baseurl"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CDNClient": {
  "abstract" : [
    {
      "text" : "API client that handles working with content (e.g. uploading attachments)",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CDNClient"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CDNClient",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CDNClient"
    }
  ],
  "role" : "symbol",
  "title" : "CDNClient",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/cdnclient"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelCodingKeys": {
  "abstract" : [
    {
      "text" : "Coding keys channel related payloads.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelCodingKeys"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelCodingKeys",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelCodingKeys"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelCodingKeys",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelcodingkeys"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelConfig": {
  "abstract" : [
    {
      "text" : "A channel config.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelConfig"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelConfig",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelConfig"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelConfig",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelconfig"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelDeletedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is deleted.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelDeletedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelDeletedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelDeletedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelDeletedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeldeletedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelEventsController": {
  "abstract" : [
    {
      "code" : "ChannelEventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows to observe channel",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "events and send custom events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelEventsController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelEventsController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelEventsController"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelEventsController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeleventscontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelHiddenEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is hidden.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelHiddenEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelHiddenEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelHiddenEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelHiddenEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelhiddenevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelId": {
  "abstract" : [
    {
      "text" : "A type representing a unique identifier of a ",
      "type" : "text"
    },
    {
      "code" : "ChatChannel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelId"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelListFilterScope": {
  "abstract" : [
    {
      "text" : "An extra-data-specific namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "ChannelListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channellistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelListQuery": {
  "abstract" : [
    {
      "text" : "A query is used for querying specific channels from backend.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can specify filter, sorting, pagination, limit for fetched messages in channel and other options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelListQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelListQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelListQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channellistquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelListSortingKey": {
  "abstract" : [
    {
      "code" : "ChannelListSortingKey",
      "type" : "codeVoice"
    },
    {
      "text" : " is keys by which you can get sorted channels after query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelListSortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelListSortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelListSortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelListSortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channellistsortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelMemberListQuery": {
  "abstract" : [
    {
      "text" : "A query type used for fetching channel members from the backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelMemberListQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelMemberListQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelMemberListQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelmemberlistquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelMemberListSortingKey": {
  "abstract" : [
    {
      "code" : "ChannelMemberListSortingKey",
      "type" : "codeVoice"
    },
    {
      "text" : " describes the keys by which you can get sorted channel members after query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelMemberListSortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelMemberListSortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelMemberListSortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelMemberListSortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelmemberlistsortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelQuery": {
  "abstract" : [
    {
      "text" : "A channel query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelReadEvent": {
  "abstract" : [
    {
      "code" : "ChannelReadEvent",
      "type" : "codeVoice"
    },
    {
      "text" : ", this event tells that User has mark read all messages in channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelReadEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelReadEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelReadEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelReadEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelreadevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelTruncatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is truncated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelTruncatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelTruncatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelTruncatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelTruncatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltruncatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelType": {
  "abstract" : [
    {
      "text" : "An enum describing possible types of a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelType"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelUnreadCount": {
  "abstract" : [
    {
      "text" : "A struct describing unread counts for a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelUnreadCount"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUnreadCount",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelUnreadCount"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelUnreadCount",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelunreadcount"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is updated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelVisibleEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is made visible.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelVisibleEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelVisibleEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelVisibleEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelVisibleEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelvisibleevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChannelWatcherListQuery": {
  "abstract" : [
    {
      "text" : "A query type used for fetching a channel’s watchers from the backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelWatcherListQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChannelWatcherListQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelWatcherListQuery"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelWatcherListQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelwatcherlistquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannel": {
  "abstract" : [
    {
      "text" : "A type representing a chat channel. ",
      "type" : "text"
    },
    {
      "code" : "ChatChannel",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of a channel entity at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannel"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannel"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannel",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannel"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelController": {
  "abstract" : [
    {
      "code" : "ChatChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows mutating and observing changes of a specific chat channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelListController": {
  "abstract" : [
    {
      "code" : "ChatChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing a list of chat channels based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelListController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelListController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelListController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannellistcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannellistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMember": {
  "abstract" : [
    {
      "text" : "A type representing a chat channel member. ",
      "type" : "text"
    },
    {
      "code" : "ChatChannelMember",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of a channel entity at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMember"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMember",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMember"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMember",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmember"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberController": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows mutating and observing changes of a specific chat member.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmembercontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberControllerDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmembercontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberListController": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberListController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a list of chat users based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberListController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmemberlistcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmemberlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelRead": {
  "abstract" : [
    {
      "text" : "A type representing a user’s last read action on a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelRead"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelRead",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelRead"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelRead",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelread"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelWatcherListController": {
  "abstract" : [
    {
      "code" : "ChatChannelWatcherListController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a list of chat watchers based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelWatcherListController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelwatcherlistcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelWatcherListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelWatcherListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelWatcherListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelwatcherlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatClient": {
  "abstract" : [
    {
      "text" : "The root object representing a Stream Chat.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatClient"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClient",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatClient"
    }
  ],
  "role" : "symbol",
  "title" : "ChatClient",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatclient"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatClientConfig": {
  "abstract" : [
    {
      "text" : "A configuration object used to configure a ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatClientConfig"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatClientConfig",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatClientConfig"
    }
  ],
  "role" : "symbol",
  "title" : "ChatClientConfig",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatclientconfig"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatConnectionController": {
  "abstract" : [
    {
      "code" : "ChatConnectionController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows to explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "connect\/disconnect the ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " and observe connection events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatConnectionController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatConnectionController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatConnectionController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatConnectionControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatConnectionController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatConnectionControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatConnectionControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatConnectionControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatConnectionControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessage": {
  "abstract" : [
    {
      "text" : "A type representing a chat message. ",
      "type" : "text"
    },
    {
      "code" : "ChatMessage",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of a chat message entity at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessage"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessage"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessage",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessage"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageAttachment": {
  "abstract" : [
    {
      "text" : "A type representing a chat message attachment.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "ChatMessageAttachment<Payload>",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of message attachment at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessageattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageAudioAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "AudioAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageAudioAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageAudioAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageAudioAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageAudioAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessageaudioattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageController": {
  "abstract" : [
    {
      "code" : "ChatMessageController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing and mutating a chat message entity.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagecontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatMessageController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagecontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageFileAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "FileAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageFileAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageFileAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageFileAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageFileAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagefileattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageGiphyAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "GiphyAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageGiphyAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageGiphyAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageGiphyAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageGiphyAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagegiphyattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageImageAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "ImageAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageImageAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageImageAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageImageAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageImageAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessageimageattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageLinkAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "LinkAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageLinkAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageLinkAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageLinkAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageLinkAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagelinkattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageReaction": {
  "abstract" : [
    {
      "text" : "A type representing a message reaction. ",
      "type" : "text"
    },
    {
      "code" : "ChatMessageReaction",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of a message reaction entity at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageReaction"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageReaction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageReaction"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageReaction",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagereaction"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageSearchController": {
  "abstract" : [
    {
      "code" : "ChatMessageSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing a list of messages based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageSearchController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagesearchcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageSearchControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatMessageSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageSearchControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagesearchcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageVideoAttachment": {
  "abstract" : [
    {
      "text" : "A type alias for attachment with ",
      "type" : "text"
    },
    {
      "code" : "VideoAttachmentPayload",
      "type" : "codeVoice"
    },
    {
      "text" : " payload type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageVideoAttachment"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageVideoAttachment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageVideoAttachment"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageVideoAttachment",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagevideoattachment"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatPushNotificationContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatPushNotificationContent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatPushNotificationContent"
    }
  ],
  "role" : "symbol",
  "title" : "ChatPushNotificationContent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatpushnotificationcontent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatPushNotificationInfo": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatPushNotificationInfo"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatPushNotificationInfo",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatPushNotificationInfo"
    }
  ],
  "role" : "symbol",
  "title" : "ChatPushNotificationInfo",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatpushnotificationinfo"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatRemoteNotificationHandler": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatRemoteNotificationHandler"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatRemoteNotificationHandler",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatRemoteNotificationHandler"
    }
  ],
  "role" : "symbol",
  "title" : "ChatRemoteNotificationHandler",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatremotenotificationhandler"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUser": {
  "abstract" : [
    {
      "text" : "A type representing a chat user. ",
      "type" : "text"
    },
    {
      "code" : "ChatUser",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of a chat user entity at the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUser"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUser"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUser",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatuser"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserController": {
  "abstract" : [
    {
      "code" : "ChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows mutating and observing changes of a specific chat user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusercontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserControllerDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusercontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserListController": {
  "abstract" : [
    {
      "code" : "ChatUserListController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing a list of chat users based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserListController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserListController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserListController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatuserlistcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatuserlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserSearchController": {
  "abstract" : [
    {
      "code" : "ChatUserSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing a list of chat users based on the provided query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserSearchController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusersearchcontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserSearchControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserSearchControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusersearchcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CleanUpTypingEvent": {
  "abstract" : [
    {
      "text" : "A special event type which is only emitted by the SDK and never the backend.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This event is emitted by ",
      "type" : "text"
    },
    {
      "code" : "TypingStartCleanupMiddleware",
      "type" : "codeVoice"
    },
    {
      "text" : " to signal that a typing event",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "must be cleaned up, due to timeout of that event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CleanUpTypingEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CleanUpTypingEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CleanUpTypingEvent"
    }
  ],
  "role" : "symbol",
  "title" : "CleanUpTypingEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/cleanuptypingevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ClientError": {
  "abstract" : [
    {
      "text" : "A Client error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ClientError"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ClientError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ClientError"
    }
  ],
  "role" : "symbol",
  "title" : "ClientError",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/clienterror"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Command": {
  "abstract" : [
    {
      "text" : "A command in a message, e.g. \/giphy.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Command"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Command",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Command"
    }
  ],
  "role" : "symbol",
  "title" : "Command",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/command"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ConnectionEvent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConnectionEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConnectionEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ConnectionEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/connectionevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ConnectionStatus": {
  "abstract" : [
    {
      "text" : "Describes the possible states of the client connection to the servers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConnectionStatus"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConnectionStatus"
    }
  ],
  "role" : "symbol",
  "title" : "ConnectionStatus",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/connectionstatus"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ConnectionStatusUpdated": {
  "abstract" : [
    {
      "text" : "Emitted when ",
      "type" : "text"
    },
    {
      "code" : "Client",
      "type" : "codeVoice"
    },
    {
      "text" : " changes it’s connection status. You can listen to this event and indicate the different connection",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "states in the UI (banners like “Offline”, “Reconnecting””, etc.).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConnectionStatusUpdated"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConnectionStatusUpdated",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConnectionStatusUpdated"
    }
  ],
  "role" : "symbol",
  "title" : "ConnectionStatusUpdated",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/connectionstatusupdated"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ConsoleLogDestination": {
  "abstract" : [
    {
      "text" : "Basic destination for outputting messages to console.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConsoleLogDestination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ConsoleLogDestination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConsoleLogDestination"
    }
  ],
  "role" : "symbol",
  "title" : "ConsoleLogDestination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/consolelogdestination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Controller": {
  "abstract" : [
    {
      "text" : "A protocol to which all controllers conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Controller",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "role" : "symbol",
  "title" : "Controller",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/controller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CurrentChatUser": {
  "abstract" : [
    {
      "text" : "A type representing the currently logged-in user. ",
      "type" : "text"
    },
    {
      "code" : "CurrentChatUser",
      "type" : "codeVoice"
    },
    {
      "text" : " is an immutable snapshot of a current user entity at",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CurrentChatUser"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUser",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CurrentChatUser"
    }
  ],
  "role" : "symbol",
  "title" : "CurrentChatUser",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatuser"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CurrentChatUserController": {
  "abstract" : [
    {
      "code" : "CurrentChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing and mutating the currently logged-in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "user of ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserController"
    }
  ],
  "role" : "symbol",
  "title" : "CurrentChatUserController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CurrentChatUserControllerDelegate": {
  "abstract" : [
    {
      "code" : "CurrentChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CurrentChatUserControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "CurrentChatUserControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/CustomEventPayload": {
  "abstract" : [
    {
      "text" : "A protocol custom event payload must conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CustomEventPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/CustomEventPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CustomEventPayload"
    }
  ],
  "role" : "symbol",
  "title" : "CustomEventPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/customeventpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataController": {
  "abstract" : [
    {
      "text" : "The base class for controllers which represent and control a data entity. Not meant to be used directly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "role" : "symbol",
  "title" : "DataController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataControllerStateDelegate": {
  "abstract" : [
    {
      "text" : "A delegate protocol some Controllers use to propagate the information about controller ",
      "type" : "text"
    },
    {
      "code" : "state",
      "type" : "codeVoice"
    },
    {
      "text" : " changes. You can use it to let",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "users know a certain activity is happening in the background, i.e. using a non-blocking activity indicator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataControllerStateDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataControllerStateDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "DataControllerStateDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontrollerstatedelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataStore": {
  "abstract" : [
    {
      "code" : "DataStore",
      "type" : "codeVoice"
    },
    {
      "text" : " provide access to all locally available model objects based on their id.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataStore"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStore",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataStore"
    }
  ],
  "role" : "symbol",
  "title" : "DataStore",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datastore"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataStoreProvider": {
  "abstract" : [
    {
      "text" : "Types conforming to this protocol automatically exposes public ",
      "type" : "text"
    },
    {
      "code" : "dataStore",
      "type" : "codeVoice"
    },
    {
      "text" : " variable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataStoreProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "role" : "symbol",
  "title" : "DataStoreProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datastoreprovider"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Device": {
  "abstract" : [
    {
      "text" : "An object representing a device which can receive push notifications.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Device"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Device",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Device"
    }
  ],
  "role" : "symbol",
  "title" : "Device",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/device"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DeviceId": {
  "abstract" : [
    {
      "text" : "A unique identifier of a device.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DeviceId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DeviceId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DeviceId"
    }
  ],
  "role" : "symbol",
  "title" : "DeviceId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/deviceid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/EmptyResponse": {
  "abstract" : [
    {
      "text" : "A type representing empty response of an Endpoint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyResponse"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EmptyResponse",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyResponse"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyResponse",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/emptyresponse"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/EntityChange": {
  "abstract" : [
    {
      "text" : "This enum describes the changes to a certain item when observing it.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EntityChange"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EntityChange",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EntityChange"
    }
  ],
  "role" : "symbol",
  "title" : "EntityChange",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/entitychange"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ErrorPayload": {
  "abstract" : [
    {
      "text" : "A parsed server response error.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ErrorPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ErrorPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ErrorPayload"
    }
  ],
  "role" : "symbol",
  "title" : "ErrorPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/errorpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Event": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "Event",
      "type" : "codeVoice"
    },
    {
      "text" : " object representing an event in the chat system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Event"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Event",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Event"
    }
  ],
  "role" : "symbol",
  "title" : "Event",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/event"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/EventType": {
  "abstract" : [
    {
      "text" : "An event type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventType"
    }
  ],
  "role" : "symbol",
  "title" : "EventType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventtype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/EventsController": {
  "abstract" : [
    {
      "code" : "EventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows to observe custom and system events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventsController"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventsController"
    }
  ],
  "role" : "symbol",
  "title" : "EventsController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventscontroller"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/EventsControllerDelegate": {
  "abstract" : [
    {
      "code" : "EventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate events to the delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventsControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/EventsControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventsControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "EventsControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventscontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/FileAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".file",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FileAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "FileAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/fileattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Filter": {
  "abstract" : [
    {
      "text" : "Filter is used to specify the details about which elements should be returned from a specific query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Filter"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Filter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Filter"
    }
  ],
  "role" : "symbol",
  "title" : "Filter",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filter"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/FilterKey": {
  "abstract" : [
    {
      "text" : "A helper struct that represents a key of a filter.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterKey"
    }
  ],
  "role" : "symbol",
  "title" : "FilterKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filterkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/FilterOperator": {
  "abstract" : [
    {
      "text" : "An enum with possible operators to use in filters.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterOperator"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterOperator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterOperator"
    }
  ],
  "role" : "symbol",
  "title" : "FilterOperator",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filteroperator"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/FilterScope": {
  "abstract" : [
    {
      "text" : "A phantom protocol used to limit the scope of ",
      "type" : "text"
    },
    {
      "code" : "Filter",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "FilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/FilterValue": {
  "abstract" : [
    {
      "text" : "A protocol to which all values that can be used as ",
      "type" : "text"
    },
    {
      "code" : "Filter",
      "type" : "codeVoice"
    },
    {
      "text" : " values conform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/FilterValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "role" : "symbol",
  "title" : "FilterValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filtervalue"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/GiphyAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".giphy",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "GiphyAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/GiphyAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "GiphyAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "GiphyAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/giphyattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/HasUnreadCount": {
  "abstract" : [
    {
      "text" : "A bounding protocol for all events that have unread counts.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HasUnreadCount"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HasUnreadCount",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HasUnreadCount"
    }
  ],
  "role" : "symbol",
  "title" : "HasUnreadCount",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/hasunreadcount"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/HealthCheckEvent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HealthCheckEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/HealthCheckEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HealthCheckEvent"
    }
  ],
  "role" : "symbol",
  "title" : "HealthCheckEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/healthcheckevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ImageAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".image",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ImageAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ImageAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ImageAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "ImageAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/imageattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LazyCachedMapCollection": {
  "abstract" : [
    {
      "text" : "Read-only collection that applies transformation to element on first access.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LazyCachedMapCollection"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LazyCachedMapCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LazyCachedMapCollection"
    }
  ],
  "role" : "symbol",
  "title" : "LazyCachedMapCollection",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/lazycachedmapcollection"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LinkAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".linkPreview",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LinkAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LinkAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LinkAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "LinkAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/linkattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ListChange": {
  "abstract" : [
    {
      "text" : "This enum describes the changes of the given collections of items.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ListChange"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ListChange",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ListChange"
    }
  ],
  "role" : "symbol",
  "title" : "ListChange",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/listchange"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LocalAttachmentState": {
  "abstract" : [
    {
      "text" : "A local state of the attachment. Applies only for attachments linked to the new messages sent from current device.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LocalAttachmentState"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalAttachmentState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LocalAttachmentState"
    }
  ],
  "role" : "symbol",
  "title" : "LocalAttachmentState",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/localattachmentstate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LocalMessageState": {
  "abstract" : [
    {
      "text" : "A possible additional local state of the message. Applies only for the messages of the current user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LocalMessageState"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalMessageState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LocalMessageState"
    }
  ],
  "role" : "symbol",
  "title" : "LocalMessageState",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/localmessagestate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LocalReactionState": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LocalReactionState"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LocalReactionState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LocalReactionState"
    }
  ],
  "role" : "symbol",
  "title" : "LocalReactionState",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/localreactionstate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogConfig": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogConfig"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogConfig",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogConfig"
    }
  ],
  "role" : "symbol",
  "title" : "LogConfig",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logconfig"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogDestination": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogDestination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDestination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogDestination"
    }
  ],
  "role" : "symbol",
  "title" : "LogDestination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logdestination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogDetails": {
  "abstract" : [
    {
      "text" : "Encapsulates the components of a log message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogDetails"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogDetails",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogDetails"
    }
  ],
  "role" : "symbol",
  "title" : "LogDetails",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logdetails"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogFormatter": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogFormatter"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogFormatter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogFormatter"
    }
  ],
  "role" : "symbol",
  "title" : "LogFormatter",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logformatter"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogLevel": {
  "abstract" : [
    {
      "text" : "Log level for any messages to be logged.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Please check ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/os\/logging\/generating_log_messages_from_your_code",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to understand different logging levels.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogLevel"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogLevel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogLevel"
    }
  ],
  "role" : "symbol",
  "title" : "LogLevel",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/loglevel"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/LogSubsystem": {
  "abstract" : [
    {
      "text" : "Entity for identifying which subsystem the log message comes from.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LogSubsystem"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/LogSubsystem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LogSubsystem"
    }
  ],
  "role" : "symbol",
  "title" : "LogSubsystem",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logsubsystem"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Logger": {
  "abstract" : [
    {
      "text" : "Entity used for logging messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Logger"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Logger",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Logger"
    }
  ],
  "role" : "symbol",
  "title" : "Logger",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/logger"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberAddedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a new member is added to a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberAddedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberAddedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberAddedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MemberAddedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberaddedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberEvent": {
  "abstract" : [
    {
      "text" : "A protocol for any ",
      "type" : "text"
    },
    {
      "code" : "MemberEvent",
      "type" : "codeVoice"
    },
    {
      "text" : " where it has a ",
      "type" : "text"
    },
    {
      "code" : "member",
      "type" : "codeVoice"
    },
    {
      "text" : ", and ",
      "type" : "text"
    },
    {
      "code" : "channel",
      "type" : "codeVoice"
    },
    {
      "text" : " payload.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MemberEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberListFilterScope": {
  "abstract" : [
    {
      "text" : "An extra-data-specific namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "ChannelMemberListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "MemberListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberlistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberRemovedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a member is removed from a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberRemovedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRemovedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberRemovedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MemberRemovedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberremovedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberRole": {
  "abstract" : [
    {
      "text" : "A  ",
      "type" : "text"
    },
    {
      "code" : "struct",
      "type" : "codeVoice"
    },
    {
      "text" : " describing roles of a member in a channel.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "There are some predefined types but any type can be introduced and sent by the backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberRole"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberRole",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberRole"
    }
  ],
  "role" : "symbol",
  "title" : "MemberRole",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberrole"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MemberUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel member is updated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MemberUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MemberUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MemberUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MemberUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/memberupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageDeletedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a new message is deleted.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageDeletedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeletedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageDeletedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MessageDeletedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagedeletedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageDeliveryStatus": {
  "abstract" : [
    {
      "text" : "The type describing message delivery status.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageDeliveryStatus"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageDeliveryStatus",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageDeliveryStatus"
    }
  ],
  "role" : "symbol",
  "title" : "MessageDeliveryStatus",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagedeliverystatus"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageId": {
  "abstract" : [
    {
      "text" : "A unique identifier of a message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageId"
    }
  ],
  "role" : "symbol",
  "title" : "MessageId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messageid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageNewEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a new message is sent to channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageNewEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNewEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageNewEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MessageNewEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagenewevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageNotificationContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageNotificationContent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageNotificationContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageNotificationContent"
    }
  ],
  "role" : "symbol",
  "title" : "MessageNotificationContent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagenotificationcontent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageOrdering": {
  "abstract" : [
    {
      "text" : "Describes the flow of the messages in the list",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageOrdering"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageOrdering",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageOrdering"
    }
  ],
  "role" : "symbol",
  "title" : "MessageOrdering",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messageordering"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessagePinDetails": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessagePinDetails"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinDetails",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessagePinDetails"
    }
  ],
  "role" : "symbol",
  "title" : "MessagePinDetails",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagepindetails"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessagePinning": {
  "abstract" : [
    {
      "text" : "Describes the pinning expiration",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessagePinning"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagePinning",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessagePinning"
    }
  ],
  "role" : "symbol",
  "title" : "MessagePinning",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagepinning"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType": {
  "abstract" : [
    {
      "text" : "The type that describes a message reaction type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageReactionType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageReactionType"
    }
  ],
  "role" : "symbol",
  "title" : "MessageReactionType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReadEvent": {
  "abstract" : [
    {
      "code" : "ChannelReadEvent",
      "type" : "codeVoice"
    },
    {
      "text" : ", this event tells that User has mark read all messages in channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageReadEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReadEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageReadEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MessageReadEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereadevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageSearchFilterScope": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageSearchFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageSearchFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "MessageSearchFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagesearchfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageSearchQuery": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageSearchQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageSearchQuery"
    }
  ],
  "role" : "symbol",
  "title" : "MessageSearchQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagesearchquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageSearchSortingKey": {
  "abstract" : [
    {
      "text" : "Keys that you can use to sort Message search results.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageSearchSortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageSearchSortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageSearchSortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "MessageSearchSortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagesearchsortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageTranslationsPayload": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageTranslationsPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageTranslationsPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageTranslationsPayload"
    }
  ],
  "role" : "symbol",
  "title" : "MessageTranslationsPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagetranslationspayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageType": {
  "abstract" : [
    {
      "text" : "A type of the message.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageType"
    }
  ],
  "role" : "symbol",
  "title" : "MessageType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagetype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a message is updated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "MessageUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messageupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessagesPagination": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessagesPagination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessagesPagination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessagesPagination"
    }
  ],
  "role" : "symbol",
  "title" : "MessagesPagination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagespagination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MuteDetails": {
  "abstract" : [
    {
      "text" : "Describes user\/channel mute details.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MuteDetails"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MuteDetails",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MuteDetails"
    }
  ],
  "role" : "symbol",
  "title" : "MuteDetails",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/mutedetails"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationAddedToChannelEvent": {
  "abstract" : [
    {
      "text" : "Triggered when the current user is added to the channel member list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationAddedToChannelEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationAddedToChannelEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationAddedToChannelEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationAddedToChannelEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationaddedtochannelevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationChannelDeletedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel is deleted, this event is delivered to all channel members",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationChannelDeletedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelDeletedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationChannelDeletedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationChannelDeletedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationchanneldeletedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationChannelMutesUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when current user mutes\/unmutes a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationChannelMutesUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationChannelMutesUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationChannelMutesUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationChannelMutesUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationchannelmutesupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationInviteAccepted": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationInviteAccepted"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAccepted",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationInviteAccepted"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationInviteAccepted",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationinviteaccepted"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationInviteAcceptedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when the current user accepts an invite to a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationInviteAcceptedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteAcceptedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationInviteAcceptedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationInviteAcceptedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationinviteacceptedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationInviteRejected": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationInviteRejected"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejected",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationInviteRejected"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationInviteRejected",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationinviterejected"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationInviteRejectedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when the current user rejects an invite to a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationInviteRejectedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInviteRejectedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationInviteRejectedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationInviteRejectedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationinviterejectedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationInvitedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when current user is invited to a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationInvitedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationInvitedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationInvitedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationInvitedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationinvitedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationMarkAllReadEvent": {
  "abstract" : [
    {
      "text" : "Triggered when all channels the current user is member of are marked as read.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationMarkAllReadEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkAllReadEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationMarkAllReadEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationMarkAllReadEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationmarkallreadevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationMarkReadEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a channel the current user is member of is marked as read.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationMarkReadEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMarkReadEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationMarkReadEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationMarkReadEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationmarkreadevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationMessageNewEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a new message is sent to a channel the current user is member of.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationMessageNewEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMessageNewEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationMessageNewEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationMessageNewEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationmessagenewevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationMutesUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when current user mutes\/unmutes a user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationMutesUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationMutesUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationMutesUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationMutesUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationmutesupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/NotificationRemovedFromChannelEvent": {
  "abstract" : [
    {
      "text" : "Triggered when the current user is removed from a channel member list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NotificationRemovedFromChannelEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/NotificationRemovedFromChannelEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NotificationRemovedFromChannelEvent"
    }
  ],
  "role" : "symbol",
  "title" : "NotificationRemovedFromChannelEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/notificationremovedfromchannelevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Pagination": {
  "abstract" : [
    {
      "text" : "Basic pagination with ",
      "type" : "text"
    },
    {
      "code" : "pageSize",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "offset",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Used everywhere except ",
      "type" : "text"
    },
    {
      "code" : "ChannelQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ". (See ",
      "type" : "text"
    },
    {
      "code" : "MessagesPagination",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Pagination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Pagination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Pagination"
    }
  ],
  "role" : "symbol",
  "title" : "Pagination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/pagination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PaginationParameter": {
  "abstract" : [
    {
      "text" : "Pagination parameters",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PaginationParameter"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PaginationParameter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PaginationParameter"
    }
  ],
  "role" : "symbol",
  "title" : "PaginationParameter",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/paginationparameter"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PinnedMessagesPagination": {
  "abstract" : [
    {
      "text" : "Pagination options available when paginating pinned messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PinnedMessagesPagination"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesPagination",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PinnedMessagesPagination"
    }
  ],
  "role" : "symbol",
  "title" : "PinnedMessagesPagination",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/pinnedmessagespagination"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PinnedMessagesSortingKey": {
  "abstract" : [
    {
      "text" : "The type describing a value that can be used as a sorting when paginating pinned messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PinnedMessagesSortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PinnedMessagesSortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PinnedMessagesSortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "PinnedMessagesSortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/pinnedmessagessortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PrefixLogFormatter": {
  "abstract" : [
    {
      "text" : "Formats the given log message with the given prefixes by log level.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Useful for emphasizing different leveled messages on console, when used as:",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "prefixes: [.info: \"ℹ️\", .debug: \"🛠\", .error: \"❌\", .fault: \"🚨\"]",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PrefixLogFormatter"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PrefixLogFormatter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PrefixLogFormatter"
    }
  ],
  "role" : "symbol",
  "title" : "PrefixLogFormatter",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/prefixlogformatter"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PushDevice": {
  "abstract" : [
    {
      "text" : "The information required to register a device for push notifications.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PushDevice"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushDevice",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PushDevice"
    }
  ],
  "role" : "symbol",
  "title" : "PushDevice",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/pushdevice"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/PushProvider": {
  "abstract" : [
    {
      "text" : "A type that represents the supported push providers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PushProvider"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/PushProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PushProvider"
    }
  ],
  "role" : "symbol",
  "title" : "PushProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/pushprovider"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/QueryOptions": {
  "abstract" : [
    {
      "text" : "Query options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "QueryOptions"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/QueryOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "QueryOptions"
    }
  ],
  "role" : "symbol",
  "title" : "QueryOptions",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/queryoptions"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/RawJSON": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "code" : "RawJSON",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Used to store and operate objects of unknown structure that’s not possible to decode.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "https:\/\/forums.swift.org\/t\/new-unevaluated-type-for-decoder-to-allow-later-re-encoding-of-data-with-unknown-structure\/11117",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawJSON"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/RawJSON",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawJSON"
    }
  ],
  "role" : "symbol",
  "title" : "RawJSON",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/rawjson"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ReactionDeletedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a reaction is deleted.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReactionDeletedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionDeletedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReactionDeletedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ReactionDeletedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/reactiondeletedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ReactionNewEvent": {
  "abstract" : [
    {
      "text" : "Triggered a new reaction is added.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReactionNewEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNewEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReactionNewEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ReactionNewEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/reactionnewevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ReactionNotificationContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReactionNotificationContent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionNotificationContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReactionNotificationContent"
    }
  ],
  "role" : "symbol",
  "title" : "ReactionNotificationContent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/reactionnotificationcontent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ReactionUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a reaction is updated.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReactionUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ReactionUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReactionUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "ReactionUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/reactionupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Sorting": {
  "abstract" : [
    {
      "text" : "Sorting options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Sorting"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Sorting",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Sorting"
    }
  ],
  "role" : "symbol",
  "title" : "Sorting",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/sorting"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/SortingKey": {
  "abstract" : [
    {
      "text" : "A sorting key protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/SortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "SortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/sortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/StreamRuntimeCheck": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StreamRuntimeCheck"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/StreamRuntimeCheck",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StreamRuntimeCheck"
    }
  ],
  "role" : "symbol",
  "title" : "StreamRuntimeCheck",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/streamruntimecheck"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/TeamId": {
  "abstract" : [
    {
      "text" : "A unique identifier of team.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TeamId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TeamId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TeamId"
    }
  ],
  "role" : "symbol",
  "title" : "TeamId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/teamid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/Token": {
  "abstract" : [
    {
      "text" : "The type is designed to store the JWT and the user it is related to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/Token",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "role" : "symbol",
  "title" : "Token",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/TokenProvider": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TokenProvider"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TokenProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TokenProvider"
    }
  ],
  "role" : "symbol",
  "title" : "TokenProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/tokenprovider"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/TranslationLanguage": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TranslationLanguage"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TranslationLanguage",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TranslationLanguage"
    }
  ],
  "role" : "symbol",
  "title" : "TranslationLanguage",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/translationlanguage"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/TypingEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user starts\/stops typing in a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TypingEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/TypingEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TypingEvent"
    }
  ],
  "role" : "symbol",
  "title" : "TypingEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/typingevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UnknownChannelEvent": {
  "abstract" : [
    {
      "text" : "An event type SDK fallbacks to if incoming event was failed to be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "decoded as a system event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnknownChannelEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownChannelEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnknownChannelEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UnknownChannelEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/unknownchannelevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UnknownEvent": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnknownEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnknownEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UnknownEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/unknownevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UnknownNotificationContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnknownNotificationContent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownNotificationContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnknownNotificationContent"
    }
  ],
  "role" : "symbol",
  "title" : "UnknownNotificationContent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/unknownnotificationcontent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UnknownUserEvent": {
  "abstract" : [
    {
      "text" : "An event type SDK fallbacks to if incoming event was failed to be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "decoded as a system event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnknownUserEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnknownUserEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnknownUserEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UnknownUserEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/unknownuserevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UnreadCount": {
  "abstract" : [
    {
      "text" : "A struct containing information about unread counts of channels and messages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnreadCount"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UnreadCount",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnreadCount"
    }
  ],
  "role" : "symbol",
  "title" : "UnreadCount",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/unreadcount"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserBannedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user is banned in a specific channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserBannedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserBannedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserBannedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserBannedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userbannedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserGloballyBannedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user is banned not in a specific channel but globally.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserGloballyBannedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyBannedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserGloballyBannedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserGloballyBannedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/usergloballybannedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserGloballyUnbannedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user is removed from global ban.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserGloballyUnbannedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserGloballyUnbannedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserGloballyUnbannedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserGloballyUnbannedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/usergloballyunbannedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserId": {
  "abstract" : [
    {
      "text" : "A unique identifier of a user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserId"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserId"
    }
  ],
  "role" : "symbol",
  "title" : "UserId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userid"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserInfo": {
  "abstract" : [
    {
      "text" : "A model containing user info that’s used to connect to chat’s backend",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserInfo"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserInfo",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserInfo"
    }
  ],
  "role" : "symbol",
  "title" : "UserInfo",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userinfo"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserListFilterScope": {
  "abstract" : [
    {
      "text" : "An extra-data-specific namespace for the ",
      "type" : "text"
    },
    {
      "code" : "FilterKey",
      "type" : "codeVoice"
    },
    {
      "text" : "s suitable to be used for ",
      "type" : "text"
    },
    {
      "code" : "UserListQuery",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserListFilterScope"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListFilterScope",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserListFilterScope"
    }
  ],
  "role" : "symbol",
  "title" : "UserListFilterScope",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userlistfilterscope"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserListQuery": {
  "abstract" : [
    {
      "text" : "A query is used for querying specific users from backend.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "You can specify filter, sorting and pagination.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserListQuery"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserListQuery"
    }
  ],
  "role" : "symbol",
  "title" : "UserListQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userlistquery"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserListSortingKey": {
  "abstract" : [
    {
      "code" : "UserListSortingKey",
      "type" : "codeVoice"
    },
    {
      "text" : " is keys by which you can get sorted users after query.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserListSortingKey"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserListSortingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserListSortingKey"
    }
  ],
  "role" : "symbol",
  "title" : "UserListSortingKey",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userlistsortingkey"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserPresenceChangedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user status changes (eg. online, offline, away, etc.)",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserPresenceChangedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserPresenceChangedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserPresenceChangedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserPresenceChangedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userpresencechangedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserRole": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserRole"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserRole",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserRole"
    }
  ],
  "role" : "symbol",
  "title" : "UserRole",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userrole"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserUnbannedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when banned user is unbanned in a specific channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserUnbannedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUnbannedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserUnbannedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserUnbannedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userunbannedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserUpdatedEvent": {
  "abstract" : [
    {
      "text" : "Triggered when user is updated",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserUpdatedEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserUpdatedEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserUpdatedEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserUpdatedEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userupdatedevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/UserWatchingEvent": {
  "abstract" : [
    {
      "text" : "Triggered when a user starts\/stops watching a channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UserWatchingEvent"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/UserWatchingEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UserWatchingEvent"
    }
  ],
  "role" : "symbol",
  "title" : "UserWatchingEvent",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/userwatchingevent"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/VideoAttachmentPayload": {
  "abstract" : [
    {
      "text" : "Represents a payload for attachments with ",
      "type" : "text"
    },
    {
      "code" : ".media",
      "type" : "codeVoice"
    },
    {
      "text" : " type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VideoAttachmentPayload"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/VideoAttachmentPayload",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VideoAttachmentPayload"
    }
  ],
  "role" : "symbol",
  "title" : "VideoAttachmentPayload",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/videoattachmentpayload"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/log": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "log"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6LoggerC",
      "text" : "Logger"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/log",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "log",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/log"
},
"https://developer.apple.com/documentation/os/logging/generating_log_messages_from_your_code": {
  "identifier" : "https:\/\/developer.apple.com\/documentation\/os\/logging\/generating_log_messages_from_your_code",
  "title" : "this Apple Logging Article",
  "titleInlineContent" : [
    {
      "text" : "this Apple Logging Article",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/developer.apple.com\/documentation\/os\/logging\/generating_log_messages_from_your_code"
}
}
}