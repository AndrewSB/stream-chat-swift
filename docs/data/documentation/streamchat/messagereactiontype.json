{
  "abstract" : [
    {
      "text" : "The type that describes a message reaction type.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat19MessageReactionTypeV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "MessageReactionType"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "MessageReactionType"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "MessageReactionType"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "MessageReactionType"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The reaction has underlaying type ",
              "type" : "text"
            },
            {
              "code" : "String",
              "type" : "codeVoice"
            },
            {
              "text" : " what gives the flexibility to choose the way how the reaction",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "will be displayed in the application.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Common examples are: “like”, “love”, “smile”, etc.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/Se",
        "doc:\/\/io.getstream.StreamChat\/SE",
        "doc:\/\/io.getstream.StreamChat\/SQ",
        "doc:\/\/io.getstream.StreamChat\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc:\/\/io.getstream.StreamChat\/s26ExpressibleByStringLiteralP",
        "doc:\/\/io.getstream.StreamChat\/s33ExpressibleByUnicodeScalarLiteralP",
        "doc:\/\/io.getstream.StreamChat\/SH",
        "doc:\/\/io.getstream.StreamChat\/SY"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(from:)-32ekj",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(rawValue:)",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(stringLiteral:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/rawValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/encode(to:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/Equatable-Implementations",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByUnicodeScalarLiteral-Implementations",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/RawRepresentable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/messagereactiontype"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://io.getstream.StreamChat/SE": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/SH": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/SQ": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/SY": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/SY",
  "title" : "Swift.RawRepresentable",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/Se": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType": {
  "abstract" : [
    {
      "text" : "The type that describes a message reaction type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MessageReactionType"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MessageReactionType"
    }
  ],
  "role" : "symbol",
  "title" : "MessageReactionType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/equatable-implementations"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/expressiblebyextendedgraphemeclusterliteral-implementations"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/ExpressibleByUnicodeScalarLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/ExpressibleByUnicodeScalarLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/expressiblebyunicodescalarliteral-implementations"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/RawRepresentable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/RawRepresentable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RawRepresentable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/rawrepresentable-implementations"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/encode(to:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7EncoderP",
      "text" : "Encoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/encode(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode(to:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/encode(to:)"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/init(from:)-32ekj": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(from:)-32ekj",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/init(from:)-32ekj"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/init(rawValue:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(rawValue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(rawValue:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/init(rawvalue:)"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/init(stringLiteral:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "stringLiteral"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/init(stringLiteral:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(stringLiteral:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/init(stringliteral:)"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/MessageReactionType/rawValue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/MessageReactionType\/rawValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/messagereactiontype\/rawvalue"
},
"doc://io.getstream.StreamChat/s26ExpressibleByStringLiteralP": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/s26ExpressibleByStringLiteralP",
  "title" : "Swift.ExpressibleByStringLiteral",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/s33ExpressibleByUnicodeScalarLiteralP": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/s33ExpressibleByUnicodeScalarLiteralP",
  "title" : "Swift.ExpressibleByUnicodeScalarLiteral",
  "type" : "unresolvable"
},
"doc://io.getstream.StreamChat/s43ExpressibleByExtendedGraphemeClusterLiteralP": {
  "identifier" : "doc:\/\/io.getstream.StreamChat\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
  "title" : "Swift.ExpressibleByExtendedGraphemeClusterLiteral",
  "type" : "unresolvable"
}
}
}