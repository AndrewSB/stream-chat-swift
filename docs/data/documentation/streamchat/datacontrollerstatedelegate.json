{
  "abstract" : [
    {
      "text" : "A delegate protocol some Controllers use to propagate the information about controller ",
      "type" : "text"
    },
    {
      "code" : "state",
      "type" : "codeVoice"
    },
    {
      "text" : " changes. You can use it to let",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "users know a certain activity is happening in the background, i.e. using a non-blocking activity indicator.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat27DataControllerStateDelegateP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DataControllerStateDelegate"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "DataControllerStateDelegate"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "DataControllerStateDelegate"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "DataControllerStateDelegate"
            },
            {
              "kind" : "text",
              "text" : " : AnyObject"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate"
      ],
      "kind" : "relationships",
      "title" : "Inherited By",
      "type" : "inheritedBy"
    },
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class",
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate\/controller(_:didChangeState:)-6kgca"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/datacontrollerstatedelegate"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://io.getstream.StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelListController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelListController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannellistcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannellistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChatChannelMemberController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmembercontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberControllerDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmembercontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberListController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChatChannelMemberListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberListController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmemberlistcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelMemberListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelMemberListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelMemberListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelMemberListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelMemberListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelmemberlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelWatcherListController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChatChannelWatcherListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelWatcherListController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelwatcherlistcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatChannelWatcherListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatChannelWatcherListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatChannelWatcherListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelWatcherListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelWatcherListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelwatcherlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "CurrentUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagecontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatMessageController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagecontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageSearchController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "CurrentUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageSearchController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagesearchcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatMessageSearchControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatMessageSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatMessageSearchControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatMessageSearchControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatMessageSearchControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatmessagesearchcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusercontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserControllerDelegate",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusercontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserListController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "UserListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserListController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatuserlistcontroller\/observableobject-swift.class"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserListControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserListController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserListControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserListControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserListControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserListControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatuserlistcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/ChatUserSearchControllerDelegate": {
  "abstract" : [
    {
      "code" : "ChatUserSearchController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate changes to its delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/ChatUserSearchControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatUserSearchControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "ChatUserSearchControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatusersearchcontrollerdelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataControllerStateDelegate": {
  "abstract" : [
    {
      "text" : "A delegate protocol some Controllers use to propagate the information about controller ",
      "type" : "text"
    },
    {
      "code" : "state",
      "type" : "codeVoice"
    },
    {
      "text" : " changes. You can use it to let",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "users know a certain activity is happening in the background, i.e. using a non-blocking activity indicator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataControllerStateDelegate"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataControllerStateDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "DataControllerStateDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontrollerstatedelegate"
},
"doc://io.getstream.StreamChat/documentation/StreamChat/DataControllerStateDelegate/controller(_:didChangeState:)-6kgca": {
  "abstract" : [
    {
      "text" : "Called when the observed controller changed it’s state.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "controller"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14DataControllerC",
      "text" : "DataController"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "didChangeState"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14DataControllerC",
      "text" : "DataController"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14DataControllerC5StateO",
      "text" : "State"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/io.getstream.StreamChat\/documentation\/StreamChat\/DataControllerStateDelegate\/controller(_:didChangeState:)-6kgca",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "controller(_:didChangeState:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontrollerstatedelegate\/controller(_:didchangestate:)-6kgca"
}
}
}